{"errors":[],"warnings":[{"ruleId":"edit-operation-id","message":"/deployments (get) - OperationId turned from getDeployments to listDeployments","path":"/deployments","method":"get","previousOperationId":"getDeployments","currentOperationId":"listDeployments"},{"ruleId":"edit-operation-id","message":"/deployments/{deploymentId} (delete) - OperationId turned from removeDeployment to deleteDeployment","path":"/deployments/{deploymentId}","method":"delete","previousOperationId":"removeDeployment","currentOperationId":"deleteDeployment"},{"ruleId":"edit-operation-id","message":"/process-definitions (get) - OperationId turned from getProcessDefinitions to listProcessDefinitions","path":"/process-definitions","method":"get","previousOperationId":"getProcessDefinitions","currentOperationId":"listProcessDefinitions"},{"ruleId":"edit-operation-id","message":"/processes (get) - OperationId turned from getProcesses to listProcesses","path":"/processes","method":"get","previousOperationId":"getProcesses","currentOperationId":"listProcesses"},{"ruleId":"edit-operation-id","message":"/processes (post) - OperationId turned from addProcess to createProcess","path":"/processes","method":"post","previousOperationId":"addProcess","currentOperationId":"createProcess"},{"ruleId":"edit-operation-id","message":"/processes/{processId} (delete) - OperationId turned from removeProcess to deleteProcess","path":"/processes/{processId}","method":"delete","previousOperationId":"removeProcess","currentOperationId":"deleteProcess"},{"ruleId":"edit-operation-id","message":"/processes/{processId}/variables (get) - OperationId turned from getProcessVariables to listProcessVariables","path":"/processes/{processId}/variables","method":"get","previousOperationId":"getProcessVariables","currentOperationId":"listProcessVariables"},{"ruleId":"edit-operation-id","message":"/processes/{processId}/variables (post) - OperationId turned from addProcessVariables to createProcessVariables","path":"/processes/{processId}/variables","method":"post","previousOperationId":"addProcessVariables","currentOperationId":"createProcessVariables"},{"ruleId":"edit-operation-id","message":"/processes/{processId}/variables/{variableName} (put) - OperationId turned from addProcessVariable to createProcessVariable","path":"/processes/{processId}/variables/{variableName}","method":"put","previousOperationId":"addProcessVariable","currentOperationId":"createProcessVariable"},{"ruleId":"edit-operation-id","message":"/processes/{processId}/variables/{variableName} (delete) - OperationId turned from removeProcessVariable to deleteProcessVariable","path":"/processes/{processId}/variables/{variableName}","method":"delete","previousOperationId":"removeProcessVariable","currentOperationId":"deleteProcessVariable"},{"ruleId":"edit-operation-id","message":"/processes/{processId}/items (get) - OperationId turned from getProcessItems to listProcessItems","path":"/processes/{processId}/items","method":"get","previousOperationId":"getProcessItems","currentOperationId":"listProcessItems"},{"ruleId":"edit-operation-id","message":"/processes/{processId}/items (post) - OperationId turned from addProcessItem to createProcessItem","path":"/processes/{processId}/items","method":"post","previousOperationId":"addProcessItem","currentOperationId":"createProcessItem"},{"ruleId":"edit-operation-id","message":"/processes/{processId}/items/{itemId} (delete) - OperationId turned from removeProcessItem to deleteProcessItem","path":"/processes/{processId}/items/{itemId}","method":"delete","previousOperationId":"removeProcessItem","currentOperationId":"deleteProcessItem"},{"ruleId":"edit-operation-id","message":"/processes/{processId}/tasks (get) - OperationId turned from getProcessTasks to listTasksForProcess","path":"/processes/{processId}/tasks","method":"get","previousOperationId":"getProcessTasks","currentOperationId":"listTasksForProcess"},{"ruleId":"edit-operation-id","message":"/tasks (get) - OperationId turned from getTasks to listTasks","path":"/tasks","method":"get","previousOperationId":"getTasks","currentOperationId":"listTasks"},{"ruleId":"edit-operation-id","message":"/tasks/{taskId}/variables (get) - OperationId turned from getTaskVariables to listTaskVariables","path":"/tasks/{taskId}/variables","method":"get","previousOperationId":"getTaskVariables","currentOperationId":"listTaskVariables"},{"ruleId":"edit-operation-id","message":"/tasks/{taskId}/variables (post) - OperationId turned from addTaskVariables to createTaskVariables","path":"/tasks/{taskId}/variables","method":"post","previousOperationId":"addTaskVariables","currentOperationId":"createTaskVariables"},{"ruleId":"add-required-param","message":"/tasks/{taskId}/variables (post) - Required param variable added","path":"/tasks/{taskId}/variables","method":"post","param":"variable"},{"ruleId":"edit-operation-id","message":"/tasks/{taskId}/variables/{variableName} (delete) - OperationId turned from removeTaskVariable to deleteTaskVariable","path":"/tasks/{taskId}/variables/{variableName}","method":"delete","previousOperationId":"removeTaskVariable","currentOperationId":"deleteTaskVariable"},{"ruleId":"edit-operation-id","message":"/tasks/{taskId}/items (get) - OperationId turned from getTaskItems to listTaskItems","path":"/tasks/{taskId}/items","method":"get","previousOperationId":"getTaskItems","currentOperationId":"listTaskItems"},{"ruleId":"edit-operation-id","message":"/tasks/{taskId}/items (post) - OperationId turned from addTaskItem to createTaskItem","path":"/tasks/{taskId}/items","method":"post","previousOperationId":"addTaskItem","currentOperationId":"createTaskItem"},{"ruleId":"edit-operation-id","message":"/tasks/{taskId}/items/{itemId} (delete) - OperationId turned from removeTaskItem to deleteTaskItem","path":"/tasks/{taskId}/items/{itemId}","method":"delete","previousOperationId":"removeTaskItem","currentOperationId":"deleteTaskItem"},{"ruleId":"edit-operation-id","message":"/tasks/{taskId}/candidates (get) - OperationId turned from getTaskCandidates to listTaskCandidates","path":"/tasks/{taskId}/candidates","method":"get","previousOperationId":"getTaskCandidates","currentOperationId":"listTaskCandidates"},{"ruleId":"edit-object-property-required","message":"definitions/Error/properties/error - Property statusCode became required","path":"definitions/Error/properties/error","property":"statusCode"},{"ruleId":"edit-object-property-required","message":"definitions/Error/properties/error - Property briefSummary became required","path":"definitions/Error/properties/error","property":"briefSummary"},{"ruleId":"edit-object-property-required","message":"definitions/Error/properties/error - Property stackTrace became required","path":"definitions/Error/properties/error","property":"stackTrace"},{"ruleId":"edit-object-property-required","message":"definitions/Error/properties/error - Property descriptionURL became required","path":"definitions/Error/properties/error","property":"descriptionURL"},{"ruleId":"edit-object-property-required","message":"definitions/Error - Property error became required","path":"definitions/Error","property":"error"}],"infos":[{"ruleId":"edit-description","message":"/info/ - Description turned from Provides access to the workflow features of Alfresco to **Workflow API**\n\nProvides access to the workflow features of Alfresco Content Services.\n","descriptionPath":"/info/","previousDescription":"Provides access to the workflow features of Alfresco","currentDescription":"**Workflow API**\n\nProvides access to the workflow features of Alfresco Content Services.\n"},{"ruleId":"edit-description","message":"/tags/0/ - Description turned from Retrieve and manage Deployments to Retrieve and manage deployments","descriptionPath":"/tags/0/","previousDescription":"Retrieve and manage Deployments","currentDescription":"Retrieve and manage deployments"},{"ruleId":"edit-description","message":"/tags/1/ - Description turned from Retrieve and manage Process Definitions to Retrieve and manage process definitions","descriptionPath":"/tags/1/","previousDescription":"Retrieve and manage Process Definitions","currentDescription":"Retrieve and manage process definitions"},{"ruleId":"edit-description","message":"/tags/2/ - Description turned from Retrieve and manage Processes to Retrieve and manage processes","descriptionPath":"/tags/2/","previousDescription":"Retrieve and manage Processes","currentDescription":"Retrieve and manage processes"},{"ruleId":"edit-description","message":"/tags/3/ - Description turned from Retrieve and manage Tasks to Retrieve and manage tasks","descriptionPath":"/tags/3/","previousDescription":"Retrieve and manage Tasks","currentDescription":"Retrieve and manage tasks"},{"ruleId":"edit-description","message":"/parameters/orderByParam/ - Description turned from A string to control the order of the entities returned. to A string to control the order of the entities returned in a list. You can use the **orderby** parameter to\nsort the list by one or more fields.\n\nEach field has a default sort order, which is normally ascending order. Read the API method implementation notes\nabove to check if any fields used in this method have a descending default search order.\n\nTo sort the entities in a specific order, you can use the **ASC** and **DESC** keywords for any field.\n","descriptionPath":"/parameters/orderByParam/","previousDescription":"A string to control the order of the entities returned.","currentDescription":"A string to control the order of the entities returned in a list. You can use the **orderby** parameter to\nsort the list by one or more fields.\n\nEach field has a default sort order, which is normally ascending order. Read the API method implementation notes\nabove to check if any fields used in this method have a descending default search order.\n\nTo sort the entities in a specific order, you can use the **ASC** and **DESC** keywords for any field.\n"},{"ruleId":"edit-summary","message":"/deployments (get) - Summary turned from Get deployments to List deployments","method":"get","previousSummary":"Get deployments","currentSummary":"List deployments"},{"ruleId":"edit-description","message":"/paths//deployments/get/ - Description turned from Returns a list of deployments.\n\nThe authenticated user must have role admin (non-network deployments) or\nnetwork admin (networks enabled).\n\nIf networks are enabled, the network admin can only see the deployments\nin the given network.\n to Gets a list of deployments.\n\nThe authenticated user must have role admin (non-network deployments) or\nnetwork admin (networks enabled).\n\nIf networks are enabled, the network admin can only see the deployments\nin the given network.\n","descriptionPath":"/paths//deployments/get/","previousDescription":"Returns a list of deployments.\n\nThe authenticated user must have role admin (non-network deployments) or\nnetwork admin (networks enabled).\n\nIf networks are enabled, the network admin can only see the deployments\nin the given network.\n","currentDescription":"Gets a list of deployments.\n\nThe authenticated user must have role admin (non-network deployments) or\nnetwork admin (networks enabled).\n\nIf networks are enabled, the network admin can only see the deployments\nin the given network.\n"},{"ruleId":"edit-description","message":"/paths//deployments/get/responses/default/ - Description turned from Error response to Unexpected error","descriptionPath":"/paths//deployments/get/responses/default/","previousDescription":"Error response","currentDescription":"Unexpected error"},{"ruleId":"add-response","message":"/deployments (get) - Response 400 added to [object Object]","path":"/deployments","method":"get","responseId":"400"},{"ruleId":"add-response","message":"/deployments (get) - Response 401 added to [object Object]","path":"/deployments","method":"get","responseId":"401"},{"ruleId":"edit-description","message":"/paths//deployments/{deploymentId}/get/ - Description turned from Returns a specified deployment defined by **deploymentId**.\n\nThe authenticated user must have role admin (non-network deployments) or\nnetwork admin (networks enabled).\n\nIf networks are enabled, the deployment is only returned if the deployment\nis in the given network.\n to Gets a specified deployment defined by **deploymentId**.\n\nThe authenticated user must have role admin (non-network deployments) or\nnetwork admin (networks enabled).\n\nIf networks are enabled, the deployment is only returned if the deployment\nis in the given network.\n","descriptionPath":"/paths//deployments/{deploymentId}/get/","previousDescription":"Returns a specified deployment defined by **deploymentId**.\n\nThe authenticated user must have role admin (non-network deployments) or\nnetwork admin (networks enabled).\n\nIf networks are enabled, the deployment is only returned if the deployment\nis in the given network.\n","currentDescription":"Gets a specified deployment defined by **deploymentId**.\n\nThe authenticated user must have role admin (non-network deployments) or\nnetwork admin (networks enabled).\n\nIf networks are enabled, the deployment is only returned if the deployment\nis in the given network.\n"},{"ruleId":"edit-description","message":"/paths//deployments/{deploymentId}/get/responses/404/ - Description turned from If **deploymentId** does not exist to **deploymentId** does not exist\n","descriptionPath":"/paths//deployments/{deploymentId}/get/responses/404/","previousDescription":"If **deploymentId** does not exist","currentDescription":"**deploymentId** does not exist\n"},{"ruleId":"edit-description","message":"/paths//deployments/{deploymentId}/get/responses/default/ - Description turned from Error response to Unexpected error","descriptionPath":"/paths//deployments/{deploymentId}/get/responses/default/","previousDescription":"Error response","currentDescription":"Unexpected error"},{"ruleId":"add-response","message":"/deployments/{deploymentId} (get) - Response 401 added to [object Object]","path":"/deployments/{deploymentId}","method":"get","responseId":"401"},{"ruleId":"edit-description","message":"/paths//deployments/{deploymentId}/delete/ - Description turned from This request will delete the deployment including the tasks, process definitions contained in the deployment. \n\nThe request will also delete processes and history information associated with the deployment.\n to This request will delete the deployment including the tasks, process definitions contained in the deployment.\n\nThe request will also delete processes and history information associated with the deployment.\n","descriptionPath":"/paths//deployments/{deploymentId}/delete/","previousDescription":"This request will delete the deployment including the tasks, process definitions contained in the deployment. \n\nThe request will also delete processes and history information associated with the deployment.\n","currentDescription":"This request will delete the deployment including the tasks, process definitions contained in the deployment.\n\nThe request will also delete processes and history information associated with the deployment.\n"},{"ruleId":"edit-description","message":"/paths//deployments/{deploymentId}/delete/responses/default/ - Description turned from Error response to Unexpected error","descriptionPath":"/paths//deployments/{deploymentId}/delete/responses/default/","previousDescription":"Error response","currentDescription":"Unexpected error"},{"ruleId":"add-response","message":"/deployments/{deploymentId} (delete) - Response 401 added to [object Object]","path":"/deployments/{deploymentId}","method":"delete","responseId":"401"},{"ruleId":"edit-summary","message":"/process-definitions (get) - Summary turned from Get process definitions to List process definitions","method":"get","previousSummary":"Get process definitions","currentSummary":"List process definitions"},{"ruleId":"edit-description","message":"/paths//process-definitions/get/ - Description turned from Returns a list of process definitions.\n\nIn non-network deployments, any authenticated user will see all the\nprocess definitions.\n\nIf networks are enabled, the network admin can only see the deployments\nin the given network.\n to Gets a list of process definitions.\n\nIn non-network deployments, any authenticated user will see all the\nprocess definitions.\n\nIf networks are enabled, the network admin can only see the deployments\nin the given network.\n","descriptionPath":"/paths//process-definitions/get/","previousDescription":"Returns a list of process definitions.\n\nIn non-network deployments, any authenticated user will see all the\nprocess definitions.\n\nIf networks are enabled, the network admin can only see the deployments\nin the given network.\n","currentDescription":"Gets a list of process definitions.\n\nIn non-network deployments, any authenticated user will see all the\nprocess definitions.\n\nIf networks are enabled, the network admin can only see the deployments\nin the given network.\n"},{"ruleId":"edit-description","message":"/paths//process-definitions/get/responses/default/ - Description turned from Error response to Unexpected error","descriptionPath":"/paths//process-definitions/get/responses/default/","previousDescription":"Error response","currentDescription":"Unexpected error"},{"ruleId":"add-response","message":"/process-definitions (get) - Response 400 added to [object Object]","path":"/process-definitions","method":"get","responseId":"400"},{"ruleId":"add-response","message":"/process-definitions (get) - Response 401 added to [object Object]","path":"/process-definitions","method":"get","responseId":"401"},{"ruleId":"edit-description","message":"/paths//process-definitions/{processDefinitionId}/get/ - Description turned from Returns a process definition identified by **processDefinitionId**.\n\nIn non-network deployments, any authenticated user will see all the\nprocess definitions. If networks are enabled, the network admin can only\nsee the deployments in the given network.\n to Gets a process definition identified by **processDefinitionId**.\n\nIn non-network deployments, any authenticated user will see all the\nprocess definitions. If networks are enabled, the network admin can only\nsee the deployments in the given network.\n","descriptionPath":"/paths//process-definitions/{processDefinitionId}/get/","previousDescription":"Returns a process definition identified by **processDefinitionId**.\n\nIn non-network deployments, any authenticated user will see all the\nprocess definitions. If networks are enabled, the network admin can only\nsee the deployments in the given network.\n","currentDescription":"Gets a process definition identified by **processDefinitionId**.\n\nIn non-network deployments, any authenticated user will see all the\nprocess definitions. If networks are enabled, the network admin can only\nsee the deployments in the given network.\n"},{"ruleId":"edit-description","message":"/paths//process-definitions/{processDefinitionId}/get/responses/404/ - Description turned from If **processDefinitionId** does not exist to **processDefinitionId** does not exist\n","descriptionPath":"/paths//process-definitions/{processDefinitionId}/get/responses/404/","previousDescription":"If **processDefinitionId** does not exist","currentDescription":"**processDefinitionId** does not exist\n"},{"ruleId":"edit-description","message":"/paths//process-definitions/{processDefinitionId}/get/responses/default/ - Description turned from Error response to Unexpected error","descriptionPath":"/paths//process-definitions/{processDefinitionId}/get/responses/default/","previousDescription":"Error response","currentDescription":"Unexpected error"},{"ruleId":"add-response","message":"/process-definitions/{processDefinitionId} (get) - Response 401 added to [object Object]","path":"/process-definitions/{processDefinitionId}","method":"get","responseId":"401"},{"ruleId":"edit-description","message":"/paths//process-definitions/{processDefinitionId}/image/get/ - Description turned from Returns an image that represents a single process definition identified by **processDefinitionId**.\n\nIn non-network deployments, any authenticated user will see all the\nprocess definitions.\n\nIf networks are enabled, the network admin can only see the deployments\nin the given network.\n to Gets an image that represents a single process definition identified by **processDefinitionId**.\n\nIn non-network deployments, any authenticated user will see all the\nprocess definitions.\n\nIf networks are enabled, the network admin can only see the deployments\nin the given network.\n","descriptionPath":"/paths//process-definitions/{processDefinitionId}/image/get/","previousDescription":"Returns an image that represents a single process definition identified by **processDefinitionId**.\n\nIn non-network deployments, any authenticated user will see all the\nprocess definitions.\n\nIf networks are enabled, the network admin can only see the deployments\nin the given network.\n","currentDescription":"Gets an image that represents a single process definition identified by **processDefinitionId**.\n\nIn non-network deployments, any authenticated user will see all the\nprocess definitions.\n\nIf networks are enabled, the network admin can only see the deployments\nin the given network.\n"},{"ruleId":"edit-description","message":"/paths//process-definitions/{processDefinitionId}/image/get/responses/404/ - Description turned from If **processDefinitionId** does not exist to **processDefinitionId** does not exist\n","descriptionPath":"/paths//process-definitions/{processDefinitionId}/image/get/responses/404/","previousDescription":"If **processDefinitionId** does not exist","currentDescription":"**processDefinitionId** does not exist\n"},{"ruleId":"edit-description","message":"/paths//process-definitions/{processDefinitionId}/image/get/responses/default/ - Description turned from Error response to Unexpected error","descriptionPath":"/paths//process-definitions/{processDefinitionId}/image/get/responses/default/","previousDescription":"Error response","currentDescription":"Unexpected error"},{"ruleId":"add-response","message":"/process-definitions/{processDefinitionId}/image (get) - Response 401 added to [object Object]","path":"/process-definitions/{processDefinitionId}/image","method":"get","responseId":"401"},{"ruleId":"edit-description","message":"/paths//process-definitions/{processDefinitionId}/start-form-model/get/ - Description turned from Returns a model of the start form type definition.\n\nAn authenticated user will have access to all start form models. \nIn a network, only start form models that are inside the given network are returned.\n to Gets a model of the start form type definition.\n\nAn authenticated user will have access to all start form models.\nIn a network, only start form models that are inside the given network are returned.\n","descriptionPath":"/paths//process-definitions/{processDefinitionId}/start-form-model/get/","previousDescription":"Returns a model of the start form type definition.\n\nAn authenticated user will have access to all start form models. \nIn a network, only start form models that are inside the given network are returned.\n","currentDescription":"Gets a model of the start form type definition.\n\nAn authenticated user will have access to all start form models.\nIn a network, only start form models that are inside the given network are returned.\n"},{"ruleId":"edit-description","message":"/paths//process-definitions/{processDefinitionId}/start-form-model/get/responses/404/ - Description turned from If **processDefinitionId** does not exist to **processDefinitionId** does not exist\n","descriptionPath":"/paths//process-definitions/{processDefinitionId}/start-form-model/get/responses/404/","previousDescription":"If **processDefinitionId** does not exist","currentDescription":"**processDefinitionId** does not exist\n"},{"ruleId":"edit-description","message":"/paths//process-definitions/{processDefinitionId}/start-form-model/get/responses/default/ - Description turned from Error response to Unexpected error","descriptionPath":"/paths//process-definitions/{processDefinitionId}/start-form-model/get/responses/default/","previousDescription":"Error response","currentDescription":"Unexpected error"},{"ruleId":"add-response","message":"/process-definitions/{processDefinitionId}/start-form-model (get) - Response 401 added to [object Object]","path":"/process-definitions/{processDefinitionId}/start-form-model","method":"get","responseId":"401"},{"ruleId":"edit-summary","message":"/processes (get) - Summary turned from Get processes to List processes","method":"get","previousSummary":"Get processes","currentSummary":"List processes"},{"ruleId":"edit-description","message":"/paths//processes/get/ - Description turned from Returns a  list of processes.\n\nAn authenticated user will have access to a processes if the user has\nstarted the process or if the user is involved in any of the process’s\ntasks. In a network, only processes that are inside the given network are\nreturned.\n\nIn non-network deployments, any authenticated user will see all the\nprocess definitions.\n\nIf networks are enabled, the network admin can only see the deployments\nin the given network.\n to Gets a  list of processes.\n\nAn authenticated user will have access to a processes if the user has\nstarted the process or if the user is involved in any of the process’s\ntasks. In a network, only processes that are inside the given network are\nreturned.\n\nIn non-network deployments, any authenticated user will see all the\nprocess definitions.\n\nIf networks are enabled, the network admin can only see the deployments\nin the given network.\n","descriptionPath":"/paths//processes/get/","previousDescription":"Returns a  list of processes.\n\nAn authenticated user will have access to a processes if the user has\nstarted the process or if the user is involved in any of the process’s\ntasks. In a network, only processes that are inside the given network are\nreturned.\n\nIn non-network deployments, any authenticated user will see all the\nprocess definitions.\n\nIf networks are enabled, the network admin can only see the deployments\nin the given network.\n","currentDescription":"Gets a  list of processes.\n\nAn authenticated user will have access to a processes if the user has\nstarted the process or if the user is involved in any of the process’s\ntasks. In a network, only processes that are inside the given network are\nreturned.\n\nIn non-network deployments, any authenticated user will see all the\nprocess definitions.\n\nIf networks are enabled, the network admin can only see the deployments\nin the given network.\n"},{"ruleId":"edit-description","message":"/paths//processes/get/responses/default/ - Description turned from Error response to Unexpected error","descriptionPath":"/paths//processes/get/responses/default/","previousDescription":"Error response","currentDescription":"Unexpected error"},{"ruleId":"add-response","message":"/processes (get) - Response 400 added to [object Object]","path":"/processes","method":"get","responseId":"400"},{"ruleId":"add-response","message":"/processes (get) - Response 401 added to [object Object]","path":"/processes","method":"get","responseId":"401"},{"ruleId":"edit-summary","message":"/processes (post) - Summary turned from Start a process to Create a process","method":"post","previousSummary":"Start a process","currentSummary":"Create a process"},{"ruleId":"edit-description","message":"/paths//processes/post/ - Description turned from Starts a new process.\n\nIn non-network deployments, any authenticated user can start a new process for\nany process definition.\n\nIf networks are enabled, the authenticated user can start a new process for a\nprocess definition in the user's network.\n to Creates a new process.\n\nIn non-network deployments, any authenticated user can start a new process for\nany process definition.\n\nIf networks are enabled, the authenticated user can start a new process for a\nprocess definition in the user's network.\n\n**Note:** You can start more than one process by\nspecifying a list of process entries in the JSON body like this:\n\n```JSON\n[\n  {\n     \"processDefinitionKey\": \"activitiAdhoc\",\n     \"variables\": {\n        \"bpm_assignee\": \"fred\"\n    }\n  },\n  {\n     \"processDefinitionKey\": \"activitiAdhoc\",\n     \"variables\": {\n        \"bpm_assignee\": \"joe\"\n    }\n]\n```\nIf you specify a list as input, then a paginated list rather than an entry is returned in the response body. For example:\n\n```JSON\n{\n  \"list\": {\n    \"pagination\": {\n      \"count\": 2,\n      \"hasMoreItems\": false,\n      \"totalItems\": 2,\n      \"skipCount\": 0,\n      \"maxItems\": 100\n    },\n    \"entries\": [\n      {\n        \"entry\": {\n          ...\n        }\n      },\n      {\n        \"entry\": {\n          ...\n        }\n      }\n    ]\n  }\n}\n```\n","descriptionPath":"/paths//processes/post/","previousDescription":"Starts a new process.\n\nIn non-network deployments, any authenticated user can start a new process for\nany process definition.\n\nIf networks are enabled, the authenticated user can start a new process for a\nprocess definition in the user's network.\n","currentDescription":"Creates a new process.\n\nIn non-network deployments, any authenticated user can start a new process for\nany process definition.\n\nIf networks are enabled, the authenticated user can start a new process for a\nprocess definition in the user's network.\n\n**Note:** You can start more than one process by\nspecifying a list of process entries in the JSON body like this:\n\n```JSON\n[\n  {\n     \"processDefinitionKey\": \"activitiAdhoc\",\n     \"variables\": {\n        \"bpm_assignee\": \"fred\"\n    }\n  },\n  {\n     \"processDefinitionKey\": \"activitiAdhoc\",\n     \"variables\": {\n        \"bpm_assignee\": \"joe\"\n    }\n]\n```\nIf you specify a list as input, then a paginated list rather than an entry is returned in the response body. For example:\n\n```JSON\n{\n  \"list\": {\n    \"pagination\": {\n      \"count\": 2,\n      \"hasMoreItems\": false,\n      \"totalItems\": 2,\n      \"skipCount\": 0,\n      \"maxItems\": 100\n    },\n    \"entries\": [\n      {\n        \"entry\": {\n          ...\n        }\n      },\n      {\n        \"entry\": {\n          ...\n        }\n      }\n    ]\n  }\n}\n```\n"},{"ruleId":"edit-description","message":"/paths//processes/post/responses/default/ - Description turned from Error response to Unexpected error","descriptionPath":"/paths//processes/post/responses/default/","previousDescription":"Error response","currentDescription":"Unexpected error"},{"ruleId":"add-response","message":"/processes (post) - Response 400 added to [object Object]","path":"/processes","method":"post","responseId":"400"},{"ruleId":"add-response","message":"/processes (post) - Response 401 added to [object Object]","path":"/processes","method":"post","responseId":"401"},{"ruleId":"edit-description","message":"/paths//processes/{processId}/get/ - Description turned from Returns the process identified by **processId**.\n\nAn authenticated user will have access to a process if the user has\nstarted the process or if the user is involved in any of the process’s\ntasks. In a network, only processes that are inside the given network are\nreturned.\n\nIn non-network deployments, administrators can see all processes and\nperform all operations on tasks. In network deployments, network\nadministrators can see all processes in their network and perform all\noperations on tasks in their network.\n to Gets the process identified by **processId**.\n\nAn authenticated user will have access to a process if the user has\nstarted the process or if the user is involved in any of the process’s\ntasks. In a network, only processes that are inside the given network are\nreturned.\n\nIn non-network deployments, administrators can see all processes and\nperform all operations on tasks. In network deployments, network\nadministrators can see all processes in their network and perform all\noperations on tasks in their network.\n","descriptionPath":"/paths//processes/{processId}/get/","previousDescription":"Returns the process identified by **processId**.\n\nAn authenticated user will have access to a process if the user has\nstarted the process or if the user is involved in any of the process’s\ntasks. In a network, only processes that are inside the given network are\nreturned.\n\nIn non-network deployments, administrators can see all processes and\nperform all operations on tasks. In network deployments, network\nadministrators can see all processes in their network and perform all\noperations on tasks in their network.\n","currentDescription":"Gets the process identified by **processId**.\n\nAn authenticated user will have access to a process if the user has\nstarted the process or if the user is involved in any of the process’s\ntasks. In a network, only processes that are inside the given network are\nreturned.\n\nIn non-network deployments, administrators can see all processes and\nperform all operations on tasks. In network deployments, network\nadministrators can see all processes in their network and perform all\noperations on tasks in their network.\n"},{"ruleId":"edit-description","message":"/paths//processes/{processId}/get/responses/404/ - Description turned from If **processId** does not exist to **processId** does not exist\n","descriptionPath":"/paths//processes/{processId}/get/responses/404/","previousDescription":"If **processId** does not exist","currentDescription":"**processId** does not exist\n"},{"ruleId":"edit-description","message":"/paths//processes/{processId}/get/responses/default/ - Description turned from Error response to Unexpected error","descriptionPath":"/paths//processes/{processId}/get/responses/default/","previousDescription":"Error response","currentDescription":"Unexpected error"},{"ruleId":"add-response","message":"/processes/{processId} (get) - Response 401 added to [object Object]","path":"/processes/{processId}","method":"get","responseId":"401"},{"ruleId":"edit-description","message":"/paths//processes/{processId}/delete/responses/default/ - Description turned from Error response to Unexpected error","descriptionPath":"/paths//processes/{processId}/delete/responses/default/","previousDescription":"Error response","currentDescription":"Unexpected error"},{"ruleId":"add-response","message":"/processes/{processId} (delete) - Response 401 added to [object Object]","path":"/processes/{processId}","method":"delete","responseId":"401"},{"ruleId":"edit-summary","message":"/processes/{processId}/variables (get) - Summary turned from Get variables to List variables","method":"get","previousSummary":"Get variables","currentSummary":"List variables"},{"ruleId":"edit-description","message":"/paths//processes/{processId}/variables/get/ - Description turned from Returns a paged list of variables for the process **processId**.\n\nAn authenticated user will have access to a processes variables if the\nuser has started  the process or if the user is involved in any of the\nprocess’s tasks.  In a network, only variables for a process that is\ninside the given network are returned.\n\nIn non-network deployments, administrators can see all variables and\nperform all operations  on those variable. In network deployments,\nnetwork administrators can see all variables in  their network and\nperform all operations on variables in their network.\n to Gets a list of variables for the process **processId**.\n\nAn authenticated user will have access to a processes variables if the\nuser has started  the process or if the user is involved in any of the\nprocess’s tasks.  In a network, only variables for a process that is\ninside the given network are returned.\n\nIn non-network deployments, administrators can see all variables and\nperform all operations  on those variable. In network deployments,\nnetwork administrators can see all variables in  their network and\nperform all operations on variables in their network.\n","descriptionPath":"/paths//processes/{processId}/variables/get/","previousDescription":"Returns a paged list of variables for the process **processId**.\n\nAn authenticated user will have access to a processes variables if the\nuser has started  the process or if the user is involved in any of the\nprocess’s tasks.  In a network, only variables for a process that is\ninside the given network are returned.\n\nIn non-network deployments, administrators can see all variables and\nperform all operations  on those variable. In network deployments,\nnetwork administrators can see all variables in  their network and\nperform all operations on variables in their network.\n","currentDescription":"Gets a list of variables for the process **processId**.\n\nAn authenticated user will have access to a processes variables if the\nuser has started  the process or if the user is involved in any of the\nprocess’s tasks.  In a network, only variables for a process that is\ninside the given network are returned.\n\nIn non-network deployments, administrators can see all variables and\nperform all operations  on those variable. In network deployments,\nnetwork administrators can see all variables in  their network and\nperform all operations on variables in their network.\n"},{"ruleId":"edit-description","message":"/paths//processes/{processId}/variables/get/responses/404/ - Description turned from If **processId** does not exist to **processId** does not exist\n","descriptionPath":"/paths//processes/{processId}/variables/get/responses/404/","previousDescription":"If **processId** does not exist","currentDescription":"**processId** does not exist\n"},{"ruleId":"edit-description","message":"/paths//processes/{processId}/variables/get/responses/default/ - Description turned from Error response to Unexpected error","descriptionPath":"/paths//processes/{processId}/variables/get/responses/default/","previousDescription":"Error response","currentDescription":"Unexpected error"},{"ruleId":"add-response","message":"/processes/{processId}/variables (get) - Response 400 added to [object Object]","path":"/processes/{processId}/variables","method":"get","responseId":"400"},{"ruleId":"add-response","message":"/processes/{processId}/variables (get) - Response 401 added to [object Object]","path":"/processes/{processId}/variables","method":"get","responseId":"401"},{"ruleId":"edit-summary","message":"/processes/{processId}/variables (post) - Summary turned from Add variables to Create or update variables","method":"post","previousSummary":"Add variables","currentSummary":"Create or update variables"},{"ruleId":"edit-description","message":"/paths//processes/{processId}/variables/post/ - Description turned from Creates or updates variables for a given process. \nIf one of the variables does not exist yet, it will be created.\n to Create or update a variable for a given process.\nIf the variable does not exist yet, it will be created.        \n\n\n**Note:** You can create or update more than one variable by \nspecifying a list of variables in the JSON body like this:\n\n```JSON\n[\n  {\n    \"name\": \"string\",\n    \"value\": \"string\",\n    \"type\": \"string\"\n  },\n  {\n    \"name\": \"string\",\n    \"value\": \"string\",\n    \"type\": \"string\"\n  }\n]\n```\nIf you specify a list as input, then a paginated list rather than an entry is returned in the response body. For example:\n\n```JSON\n{\n  \"list\": {\n    \"pagination\": {\n      \"count\": 2,\n      \"hasMoreItems\": false,\n      \"totalItems\": 2,\n      \"skipCount\": 0,\n      \"maxItems\": 100\n    },\n    \"entries\": [\n      {\n        \"entry\": {\n          ...\n        }\n      },\n      {\n        \"entry\": {\n         ...\n        }\n      }\n    ]\n  }\n}\n```\n","descriptionPath":"/paths//processes/{processId}/variables/post/","previousDescription":"Creates or updates variables for a given process. \nIf one of the variables does not exist yet, it will be created.\n","currentDescription":"Create or update a variable for a given process.\nIf the variable does not exist yet, it will be created.        \n\n\n**Note:** You can create or update more than one variable by \nspecifying a list of variables in the JSON body like this:\n\n```JSON\n[\n  {\n    \"name\": \"string\",\n    \"value\": \"string\",\n    \"type\": \"string\"\n  },\n  {\n    \"name\": \"string\",\n    \"value\": \"string\",\n    \"type\": \"string\"\n  }\n]\n```\nIf you specify a list as input, then a paginated list rather than an entry is returned in the response body. For example:\n\n```JSON\n{\n  \"list\": {\n    \"pagination\": {\n      \"count\": 2,\n      \"hasMoreItems\": false,\n      \"totalItems\": 2,\n      \"skipCount\": 0,\n      \"maxItems\": 100\n    },\n    \"entries\": [\n      {\n        \"entry\": {\n          ...\n        }\n      },\n      {\n        \"entry\": {\n         ...\n        }\n      }\n    ]\n  }\n}\n```\n"},{"ruleId":"edit-description","message":"/paths//processes/{processId}/variables/post/parameters/variableBody/ - Description turned from An array of variables. to A variable","descriptionPath":"/paths//processes/{processId}/variables/post/parameters/variableBody/","previousDescription":"An array of variables.","currentDescription":"A variable"},{"ruleId":"edit-description","message":"/paths//processes/{processId}/variables/post/responses/404/ - Description turned from If **processId** does not exist to **processId** does not exist\n","descriptionPath":"/paths//processes/{processId}/variables/post/responses/404/","previousDescription":"If **processId** does not exist","currentDescription":"**processId** does not exist\n"},{"ruleId":"edit-description","message":"/paths//processes/{processId}/variables/post/responses/default/ - Description turned from Error response to Unexpected error","descriptionPath":"/paths//processes/{processId}/variables/post/responses/default/","previousDescription":"Error response","currentDescription":"Unexpected error"},{"ruleId":"add-response","message":"/processes/{processId}/variables (post) - Response 400 added to [object Object]","path":"/processes/{processId}/variables","method":"post","responseId":"400"},{"ruleId":"add-response","message":"/processes/{processId}/variables (post) - Response 401 added to [object Object]","path":"/processes/{processId}/variables","method":"post","responseId":"401"},{"ruleId":"edit-summary","message":"/processes/{processId}/variables/{variableName} (put) - Summary turned from Add a variable to Create or update a variable","method":"put","previousSummary":"Add a variable","currentSummary":"Create or update a variable"},{"ruleId":"edit-description","message":"/paths//processes/{processId}/variables/{variableName}/put/responses/404/ - Description turned from If **processId** does not exist to **processId** does not exist\n","descriptionPath":"/paths//processes/{processId}/variables/{variableName}/put/responses/404/","previousDescription":"If **processId** does not exist","currentDescription":"**processId** does not exist\n"},{"ruleId":"edit-description","message":"/paths//processes/{processId}/variables/{variableName}/put/responses/default/ - Description turned from Error response to Unexpected error","descriptionPath":"/paths//processes/{processId}/variables/{variableName}/put/responses/default/","previousDescription":"Error response","currentDescription":"Unexpected error"},{"ruleId":"add-response","message":"/processes/{processId}/variables/{variableName} (put) - Response 400 added to [object Object]","path":"/processes/{processId}/variables/{variableName}","method":"put","responseId":"400"},{"ruleId":"add-response","message":"/processes/{processId}/variables/{variableName} (put) - Response 401 added to [object Object]","path":"/processes/{processId}/variables/{variableName}","method":"put","responseId":"401"},{"ruleId":"edit-description","message":"/paths//processes/{processId}/variables/{variableName}/delete/responses/404/ - Description turned from The **processId** does not exist, or the **variableName** does not exist to The **processId** does not exist or the **variableName** does not exist","descriptionPath":"/paths//processes/{processId}/variables/{variableName}/delete/responses/404/","previousDescription":"The **processId** does not exist, or the **variableName** does not exist","currentDescription":"The **processId** does not exist or the **variableName** does not exist"},{"ruleId":"edit-description","message":"/paths//processes/{processId}/variables/{variableName}/delete/responses/default/ - Description turned from Error response to Unexpected error","descriptionPath":"/paths//processes/{processId}/variables/{variableName}/delete/responses/default/","previousDescription":"Error response","currentDescription":"Unexpected error"},{"ruleId":"add-response","message":"/processes/{processId}/variables/{variableName} (delete) - Response 401 added to [object Object]","path":"/processes/{processId}/variables/{variableName}","method":"delete","responseId":"401"},{"ruleId":"edit-summary","message":"/processes/{processId}/items (get) - Summary turned from Get items to List items","method":"get","previousSummary":"Get items","currentSummary":"List items"},{"ruleId":"edit-description","message":"/paths//processes/{processId}/items/get/ - Description turned from Returns a list of items for the specified process **processId**.\n\nAn authenticated user will have access to a processes items if the\nuser has started the process or if the user is involved in any of the\nprocess’s tasks.  In a network, only items for a process that is\ninside the given network are returned.\n\nIn non-network deployments, administrators can see all items and\nperform all operations  on those items. In network deployments,\nnetwork administrators can see all items in their network and\nperform all operations on items in their network.\n to Gets a list of items for the specified process **processId**.\n\nAn authenticated user will have access to a processes items if the\nuser has started the process or if the user is involved in any of the\nprocess’s tasks.  In a network, only items for a process that is\ninside the given network are returned.\n\nIn non-network deployments, administrators can see all items and\nperform all operations  on those items. In network deployments,\nnetwork administrators can see all items in their network and\nperform all operations on items in their network.\n","descriptionPath":"/paths//processes/{processId}/items/get/","previousDescription":"Returns a list of items for the specified process **processId**.\n\nAn authenticated user will have access to a processes items if the\nuser has started the process or if the user is involved in any of the\nprocess’s tasks.  In a network, only items for a process that is\ninside the given network are returned.\n\nIn non-network deployments, administrators can see all items and\nperform all operations  on those items. In network deployments,\nnetwork administrators can see all items in their network and\nperform all operations on items in their network.\n","currentDescription":"Gets a list of items for the specified process **processId**.\n\nAn authenticated user will have access to a processes items if the\nuser has started the process or if the user is involved in any of the\nprocess’s tasks.  In a network, only items for a process that is\ninside the given network are returned.\n\nIn non-network deployments, administrators can see all items and\nperform all operations  on those items. In network deployments,\nnetwork administrators can see all items in their network and\nperform all operations on items in their network.\n"},{"ruleId":"edit-description","message":"/paths//processes/{processId}/items/get/responses/404/ - Description turned from If **processId** does not exist to **processId** does not exist\n","descriptionPath":"/paths//processes/{processId}/items/get/responses/404/","previousDescription":"If **processId** does not exist","currentDescription":"**processId** does not exist\n"},{"ruleId":"edit-description","message":"/paths//processes/{processId}/items/get/responses/default/ - Description turned from Error response to Unexpected error","descriptionPath":"/paths//processes/{processId}/items/get/responses/default/","previousDescription":"Error response","currentDescription":"Unexpected error"},{"ruleId":"add-response","message":"/processes/{processId}/items (get) - Response 400 added to [object Object]","path":"/processes/{processId}/items","method":"get","responseId":"400"},{"ruleId":"add-response","message":"/processes/{processId}/items (get) - Response 401 added to [object Object]","path":"/processes/{processId}/items","method":"get","responseId":"401"},{"ruleId":"edit-summary","message":"/processes/{processId}/items (post) - Summary turned from Add an item to Create an item","method":"post","previousSummary":"Add an item","currentSummary":"Create an item"},{"ruleId":"edit-description","message":"/paths//processes/{processId}/items/post/ - Description turned from Creates an item for process **processId**\".\n\nIf the item  already is part of that process the request will have no effect.\n to Creates an item for process **processId**\".\n\nIf the item  already is part of that process the request will have no effect.\n\n**Note:** You can create more than one item by\nspecifying a list of items in the JSON body like this:\n\n```JSON\n[\n  {\n     \"id\": \"1ff9da1a-ee2f-4b9c-8c34-44665e844444\"\n  },\n  {\n     \"id\": \"1ff9da1a-ee2f-4b9c-8c34-44665e855555\"\n  }\n]\n```\nIf you specify a list as input, then a paginated list rather than an entry is returned in the response body. For example:\n\n```JSON\n{\n  \"list\": {\n    \"pagination\": {\n      \"count\": 2,\n      \"hasMoreItems\": false,\n      \"totalItems\": 2,\n      \"skipCount\": 0,\n      \"maxItems\": 100\n    },\n    \"entries\": [\n      {\n        \"entry\": {\n          ...\n        }\n      },\n      {\n        \"entry\": {\n          ...\n        }\n      }\n    ]\n  }\n}\n```\n","descriptionPath":"/paths//processes/{processId}/items/post/","previousDescription":"Creates an item for process **processId**\".\n\nIf the item  already is part of that process the request will have no effect.\n","currentDescription":"Creates an item for process **processId**\".\n\nIf the item  already is part of that process the request will have no effect.\n\n**Note:** You can create more than one item by\nspecifying a list of items in the JSON body like this:\n\n```JSON\n[\n  {\n     \"id\": \"1ff9da1a-ee2f-4b9c-8c34-44665e844444\"\n  },\n  {\n     \"id\": \"1ff9da1a-ee2f-4b9c-8c34-44665e855555\"\n  }\n]\n```\nIf you specify a list as input, then a paginated list rather than an entry is returned in the response body. For example:\n\n```JSON\n{\n  \"list\": {\n    \"pagination\": {\n      \"count\": 2,\n      \"hasMoreItems\": false,\n      \"totalItems\": 2,\n      \"skipCount\": 0,\n      \"maxItems\": 100\n    },\n    \"entries\": [\n      {\n        \"entry\": {\n          ...\n        }\n      },\n      {\n        \"entry\": {\n          ...\n        }\n      }\n    ]\n  }\n}\n```\n"},{"ruleId":"edit-description","message":"/paths//processes/{processId}/items/post/responses/404/ - Description turned from If **processId** does not exist to **processId** does not exist\n","descriptionPath":"/paths//processes/{processId}/items/post/responses/404/","previousDescription":"If **processId** does not exist","currentDescription":"**processId** does not exist\n"},{"ruleId":"edit-description","message":"/paths//processes/{processId}/items/post/responses/default/ - Description turned from Error response to Unexpected error","descriptionPath":"/paths//processes/{processId}/items/post/responses/default/","previousDescription":"Error response","currentDescription":"Unexpected error"},{"ruleId":"add-response","message":"/processes/{processId}/items (post) - Response 400 added to [object Object]","path":"/processes/{processId}/items","method":"post","responseId":"400"},{"ruleId":"add-response","message":"/processes/{processId}/items (post) - Response 401 added to [object Object]","path":"/processes/{processId}/items","method":"post","responseId":"401"},{"ruleId":"edit-description","message":"/paths//processes/{processId}/items/{itemId}/delete/responses/404/ - Description turned from The **processId** does not exist, or the **itemId** does not exist to The **processId** does not exist or the **itemId** does not exist","descriptionPath":"/paths//processes/{processId}/items/{itemId}/delete/responses/404/","previousDescription":"The **processId** does not exist, or the **itemId** does not exist","currentDescription":"The **processId** does not exist or the **itemId** does not exist"},{"ruleId":"edit-description","message":"/paths//processes/{processId}/items/{itemId}/delete/responses/default/ - Description turned from Error response to Unexpected error","descriptionPath":"/paths//processes/{processId}/items/{itemId}/delete/responses/default/","previousDescription":"Error response","currentDescription":"Unexpected error"},{"ruleId":"add-response","message":"/processes/{processId}/items/{itemId} (delete) - Response 401 added to [object Object]","path":"/processes/{processId}/items/{itemId}","method":"delete","responseId":"401"},{"ruleId":"edit-summary","message":"/processes/{processId}/tasks (get) - Summary turned from Get tasks to List tasks for a process","method":"get","previousSummary":"Get tasks","currentSummary":"List tasks for a process"},{"ruleId":"edit-description","message":"/paths//processes/{processId}/tasks/get/ - Description turned from Returns a list of tasks for the specified process **processId**.\n\nAn authenticated user will have access to a processes tasks if the\nuser has started the process or if the user is involved in any of the\nprocess’s tasks.  In a network, only tasks for a process that is\ninside the given network are returned.\n\nIn non-network deployments, administrators can see all tasks and\nperform all operations  on those tasks. In network deployments,\nnetwork administrators can see all tasks in their network and\nperform all operations on tasks in their network.\n to Gets a list of tasks for the specified process **processId**.\n\nAn authenticated user will have access to a processes tasks if the\nuser has started the process or if the user is involved in any of the\nprocess’s tasks.  In a network, only tasks for a process that is\ninside the given network are returned.\n\nIn non-network deployments, administrators can see all tasks and\nperform all operations  on those tasks. In network deployments,\nnetwork administrators can see all tasks in their network and\nperform all operations on tasks in their network.\n","descriptionPath":"/paths//processes/{processId}/tasks/get/","previousDescription":"Returns a list of tasks for the specified process **processId**.\n\nAn authenticated user will have access to a processes tasks if the\nuser has started the process or if the user is involved in any of the\nprocess’s tasks.  In a network, only tasks for a process that is\ninside the given network are returned.\n\nIn non-network deployments, administrators can see all tasks and\nperform all operations  on those tasks. In network deployments,\nnetwork administrators can see all tasks in their network and\nperform all operations on tasks in their network.\n","currentDescription":"Gets a list of tasks for the specified process **processId**.\n\nAn authenticated user will have access to a processes tasks if the\nuser has started the process or if the user is involved in any of the\nprocess’s tasks.  In a network, only tasks for a process that is\ninside the given network are returned.\n\nIn non-network deployments, administrators can see all tasks and\nperform all operations  on those tasks. In network deployments,\nnetwork administrators can see all tasks in their network and\nperform all operations on tasks in their network.\n"},{"ruleId":"edit-description","message":"/paths//processes/{processId}/tasks/get/responses/404/ - Description turned from If **processId** does not exist to **processId** does not exist\n","descriptionPath":"/paths//processes/{processId}/tasks/get/responses/404/","previousDescription":"If **processId** does not exist","currentDescription":"**processId** does not exist\n"},{"ruleId":"edit-description","message":"/paths//processes/{processId}/tasks/get/responses/default/ - Description turned from Error response to Unexpected error","descriptionPath":"/paths//processes/{processId}/tasks/get/responses/default/","previousDescription":"Error response","currentDescription":"Unexpected error"},{"ruleId":"add-response","message":"/processes/{processId}/tasks (get) - Response 400 added to [object Object]","path":"/processes/{processId}/tasks","method":"get","responseId":"400"},{"ruleId":"add-response","message":"/processes/{processId}/tasks (get) - Response 401 added to [object Object]","path":"/processes/{processId}/tasks","method":"get","responseId":"401"},{"ruleId":"edit-summary","message":"/tasks (get) - Summary turned from Get all tasks to List tasks","method":"get","previousSummary":"Get all tasks","currentSummary":"List tasks"},{"ruleId":"edit-description","message":"/paths//tasks/get/ - Description turned from Returns a paged list of tasks visible to the authenticated user.\n\nTasks are returned for which the authenticated user is the assignee  or\na candidate. If networks are enabled, the only tasks that are inside\nthe given network are returned.\n\nIn non-network deployments, administrators can see all processes and\nperform all operations on tasks. In network deployments, network\nadministrators can see all processes in their network and perform all\noperations on tasks in their network.\n to Gets a list of tasks visible to the authenticated user.\n\nTasks are returned for which the authenticated user is the assignee  or\na candidate. If networks are enabled, the only tasks that are inside\nthe given network are returned.\n\nIn non-network deployments, administrators can see all processes and\nperform all operations on tasks. In network deployments, network\nadministrators can see all processes in their network and perform all\noperations on tasks in their network.\n","descriptionPath":"/paths//tasks/get/","previousDescription":"Returns a paged list of tasks visible to the authenticated user.\n\nTasks are returned for which the authenticated user is the assignee  or\na candidate. If networks are enabled, the only tasks that are inside\nthe given network are returned.\n\nIn non-network deployments, administrators can see all processes and\nperform all operations on tasks. In network deployments, network\nadministrators can see all processes in their network and perform all\noperations on tasks in their network.\n","currentDescription":"Gets a list of tasks visible to the authenticated user.\n\nTasks are returned for which the authenticated user is the assignee  or\na candidate. If networks are enabled, the only tasks that are inside\nthe given network are returned.\n\nIn non-network deployments, administrators can see all processes and\nperform all operations on tasks. In network deployments, network\nadministrators can see all processes in their network and perform all\noperations on tasks in their network.\n"},{"ruleId":"edit-description","message":"/paths//tasks/get/responses/default/ - Description turned from Error response to Unexpected error","descriptionPath":"/paths//tasks/get/responses/default/","previousDescription":"Error response","currentDescription":"Unexpected error"},{"ruleId":"add-response","message":"/tasks (get) - Response 400 added to [object Object]","path":"/tasks","method":"get","responseId":"400"},{"ruleId":"add-response","message":"/tasks (get) - Response 401 added to [object Object]","path":"/tasks","method":"get","responseId":"401"},{"ruleId":"edit-description","message":"/paths//tasks/{taskId}/get/ - Description turned from Returns the task identified by **taskId**.\n\nAn authenticated user will have access to a task if the user has\nstarted the process or if the user is involved in any of the process’s\ntasks. In a network, only tasks that are inside the given network are\nreturned.\n\nIn non-network deployments, administrators can see all processes and\nperform all operations on tasks. In network deployments, network\nadministrators can see all processes in their network and perform all\noperations on tasks in their network.\n to Gets the task identified by **taskId**.\n\nAn authenticated user will have access to a task if the user has\nstarted the process or if the user is involved in any of the process’s\ntasks. In a network, only tasks that are inside the given network are\nreturned.\n\nIn non-network deployments, administrators can see all processes and\nperform all operations on tasks. In network deployments, network\nadministrators can see all processes in their network and perform all\noperations on tasks in their network.\n","descriptionPath":"/paths//tasks/{taskId}/get/","previousDescription":"Returns the task identified by **taskId**.\n\nAn authenticated user will have access to a task if the user has\nstarted the process or if the user is involved in any of the process’s\ntasks. In a network, only tasks that are inside the given network are\nreturned.\n\nIn non-network deployments, administrators can see all processes and\nperform all operations on tasks. In network deployments, network\nadministrators can see all processes in their network and perform all\noperations on tasks in their network.\n","currentDescription":"Gets the task identified by **taskId**.\n\nAn authenticated user will have access to a task if the user has\nstarted the process or if the user is involved in any of the process’s\ntasks. In a network, only tasks that are inside the given network are\nreturned.\n\nIn non-network deployments, administrators can see all processes and\nperform all operations on tasks. In network deployments, network\nadministrators can see all processes in their network and perform all\noperations on tasks in their network.\n"},{"ruleId":"edit-description","message":"/paths//tasks/{taskId}/get/responses/404/ - Description turned from If **taskId** does not exist to **taskId** does not exist\n","descriptionPath":"/paths//tasks/{taskId}/get/responses/404/","previousDescription":"If **taskId** does not exist","currentDescription":"**taskId** does not exist\n"},{"ruleId":"edit-description","message":"/paths//tasks/{taskId}/get/responses/default/ - Description turned from Error response to Unexpected error","descriptionPath":"/paths//tasks/{taskId}/get/responses/default/","previousDescription":"Error response","currentDescription":"Unexpected error"},{"ruleId":"add-response","message":"/tasks/{taskId} (get) - Response 401 added to [object Object]","path":"/tasks/{taskId}","method":"get","responseId":"401"},{"ruleId":"edit-description","message":"/paths//tasks/{taskId}/put/ - Description turned from Updates the state of the task **taskId**.\n\nTo perform a task action the authenticated user must be the assignee  or\na candidate. If networks is enabled, the task action is only\nperformed  if the task is inside the given network.\n\nIn non-network deployments, administrators can perform all operations\non  tasks. In network deployments, network administrators can see all\ntasks  in their network and perform all operations on tasks in their\nnetwork.\n\nYou use the **select** parameter in the URL to specify a comma-separated list of \nproperties in the \ntask that you want to update. Use the JSON body to specify the new values for those\nproperties. \n\nSo for example to change the state of task **123** to **completed**, use\nthis URL\nhttp://localhost:8080/alfresco/api/-default-/public/workflow/versions/1/tasks/123?select=state, and \nprovide this request body:\n\n```JSON\n{  \n  \"state\": \"completed\"\n}\n```\nState Transitions\n=================\n\nClients can invoke actions by assigning an allowed value to the state property of a task.\nThe select parameter can be used to allow for a partial update of the resource. \nAlfresco will check for illegal state transitions and return an HTTP Bad Request (Response 400) \nif an illegal state transition is attempted. \nThere are five state transitions, completing, claiming, unclaiming, delegating, resolving.\n\nCompleting a task\n-----------------\n\nIf variables are included in the JSON body, they will be set in the task and then the process will continue.\n\nTo complete a task, the authenticated user must be the assignee of the task, the owner of the task, or have started the process.\n\nIn non-network deployments, administrators can perform this task operation on all tasks.\nIn network deployments, network administrators can perform this action on all tasks in their network.\n\nHere's an example PUT request\n\n```\n/tasks/123?select=state,variables\n```\nHere's is a corresponding PUT request body:\n\n```JSON\n{\n  “state : “completed”,\n  “variables” : [\n  {\n    \"name\" : \"bpm_priority\",\n    \"type\" : \"d_int\",\n    \"value\" : 1,\n    \"scope\" : \"global\"\n  }\n ]\n}\n```\n\nClaiming a task\n-----------------\n\nTo claim a task, the authenticated user must be the assignee of the task, \nthe owner of the task, or have started the process.\n\nHere's an example PUT request\n\n```\n/tasks/123?select=state\n```\nHere's a corresponding PUT request body:\n\n```JSON\n{\n  “state : “claimed”\n}\n```\n\nUnclaiming a task\n-----------------\n\nThis removes the current assignee of the task.\n\nTo unclaim a task, the authenticated user must be the assignee of the task, \nthe owner of the task, or have started the process.\n\nHere's an example PUT request\n\n```\n/tasks/123?select=state\n```\nHere's a corresponding PUT request body:\n\n```JSON\n{\n  “state : “unclaimed”\n}\n```\n\nDelegating a task\n-----------------\n\nThis delegates the task from the owner to an assignee. \nThe result is the same as if the assignee had claimed the task, \nbut the task can then be resolved and the owner will\nbecome the assignee again.\n\nTo delegate a task, the authenticated user must be the \nassignee of the task and the assignee must be different from the owner.\n\nHere's an example PUT request\n\n```\n/tasks/123?select=state,assignee\n```\nHere's a corresponding PUT request body:\n\n```JSON\n{\n  “state : “delegated”,\n  “assignee : “Kermit”\n}\n```\nResolving a task\n-----------------\n\nThis returns a delegated task back to the owner. \nIn order to delegate a task, the authenticated user \nmust be the assignee of the task and the assignee must \nbe different from the owner.\n\nTo resolve a task, the authenticated user must be \nthe assignee of the task, the owner of the task, \nor have started the process.\n\nHere's an example PUT request\n\n```\n/tasks/123?select=state\n```\nHere's a corresponding PUT request body:\n\n```JSON\n{\n  “state : “resolved”\n}\n```\n to Updates the state of the task **taskId**.\n\nTo perform a task action the authenticated user must be the assignee  or\na candidate. If networks is enabled, the task action is only\nperformed  if the task is inside the given network.\n\nIn non-network deployments, administrators can perform all operations\non  tasks. In network deployments, network administrators can see all\ntasks  in their network and perform all operations on tasks in their\nnetwork.\n\nYou use the **select** parameter in the URL to specify a comma-separated list of\nproperties in the\ntask that you want to update. Use the JSON body to specify the new values for those\nproperties.\n\nSo for example to change the state of task **123** to **completed**, use\nthis URL\nhttp://localhost:8080/alfresco/api/-default-/public/workflow/versions/1/tasks/123?select=state, and\nprovide this request body:\n\n```JSON\n{\n  \"state\": \"completed\"\n}\n```\nState Transitions\n=================\n\nClients can invoke actions by assigning an allowed value to the state property of a task.\nThe select parameter can be used to allow for a partial update of the resource.\nAlfresco will check for illegal state transitions and return an HTTP Bad Request (Response 400)\nif an illegal state transition is attempted.\nThere are five state transitions, completing, claiming, unclaiming, delegating, resolving.\n\nCompleting a task\n-----------------\n\nIf variables are included in the JSON body, they will be set in the task and then the process will continue.\n\nTo complete a task, the authenticated user must be the assignee of the task, the owner of the task, or have started the process.\n\nIn non-network deployments, administrators can perform this task operation on all tasks.\nIn network deployments, network administrators can perform this action on all tasks in their network.\n\nHere's an example PUT request\n\n```\n/tasks/123?select=state,variables\n```\nHere's is a corresponding PUT request body:\n\n```JSON\n{\n  “state : “completed”,\n  “variables” : [\n  {\n    \"name\" : \"bpm_priority\",\n    \"type\" : \"d_int\",\n    \"value\" : 1,\n    \"scope\" : \"global\"\n  }\n ]\n}\n```\n\nClaiming a task\n-----------------\n\nTo claim a task, the authenticated user must be the assignee of the task,\nthe owner of the task, or have started the process.\n\nHere's an example PUT request\n\n```\n/tasks/123?select=state\n```\nHere's a corresponding PUT request body:\n\n```JSON\n{\n  “state : “claimed”\n}\n```\n\nUnclaiming a task\n-----------------\n\nThis removes the current assignee of the task.\n\nTo unclaim a task, the authenticated user must be the assignee of the task,\nthe owner of the task, or have started the process.\n\nHere's an example PUT request\n\n```\n/tasks/123?select=state\n```\nHere's a corresponding PUT request body:\n\n```JSON\n{\n  “state : “unclaimed”\n}\n```\n\nDelegating a task\n-----------------\n\nThis delegates the task from the owner to an assignee.\nThe result is the same as if the assignee had claimed the task,\nbut the task can then be resolved and the owner will\nbecome the assignee again.\n\nTo delegate a task, the authenticated user must be the\nassignee of the task and the assignee must be different from the owner.\n\nHere's an example PUT request\n\n```\n/tasks/123?select=state,assignee\n```\nHere's a corresponding PUT request body:\n\n```JSON\n{\n  “state : “delegated”,\n  “assignee : “Kermit”\n}\n```\nResolving a task\n-----------------\n\nThis returns a delegated task back to the owner.\nIn order to delegate a task, the authenticated user\nmust be the assignee of the task and the assignee must\nbe different from the owner.\n\nTo resolve a task, the authenticated user must be\nthe assignee of the task, the owner of the task,\nor have started the process.\n\nHere's an example PUT request\n\n```\n/tasks/123?select=state\n```\nHere's a corresponding PUT request body:\n\n```JSON\n{\n  “state : “resolved”\n}\n```\n","descriptionPath":"/paths//tasks/{taskId}/put/","previousDescription":"Updates the state of the task **taskId**.\n\nTo perform a task action the authenticated user must be the assignee  or\na candidate. If networks is enabled, the task action is only\nperformed  if the task is inside the given network.\n\nIn non-network deployments, administrators can perform all operations\non  tasks. In network deployments, network administrators can see all\ntasks  in their network and perform all operations on tasks in their\nnetwork.\n\nYou use the **select** parameter in the URL to specify a comma-separated list of \nproperties in the \ntask that you want to update. Use the JSON body to specify the new values for those\nproperties. \n\nSo for example to change the state of task **123** to **completed**, use\nthis URL\nhttp://localhost:8080/alfresco/api/-default-/public/workflow/versions/1/tasks/123?select=state, and \nprovide this request body:\n\n```JSON\n{  \n  \"state\": \"completed\"\n}\n```\nState Transitions\n=================\n\nClients can invoke actions by assigning an allowed value to the state property of a task.\nThe select parameter can be used to allow for a partial update of the resource. \nAlfresco will check for illegal state transitions and return an HTTP Bad Request (Response 400) \nif an illegal state transition is attempted. \nThere are five state transitions, completing, claiming, unclaiming, delegating, resolving.\n\nCompleting a task\n-----------------\n\nIf variables are included in the JSON body, they will be set in the task and then the process will continue.\n\nTo complete a task, the authenticated user must be the assignee of the task, the owner of the task, or have started the process.\n\nIn non-network deployments, administrators can perform this task operation on all tasks.\nIn network deployments, network administrators can perform this action on all tasks in their network.\n\nHere's an example PUT request\n\n```\n/tasks/123?select=state,variables\n```\nHere's is a corresponding PUT request body:\n\n```JSON\n{\n  “state : “completed”,\n  “variables” : [\n  {\n    \"name\" : \"bpm_priority\",\n    \"type\" : \"d_int\",\n    \"value\" : 1,\n    \"scope\" : \"global\"\n  }\n ]\n}\n```\n\nClaiming a task\n-----------------\n\nTo claim a task, the authenticated user must be the assignee of the task, \nthe owner of the task, or have started the process.\n\nHere's an example PUT request\n\n```\n/tasks/123?select=state\n```\nHere's a corresponding PUT request body:\n\n```JSON\n{\n  “state : “claimed”\n}\n```\n\nUnclaiming a task\n-----------------\n\nThis removes the current assignee of the task.\n\nTo unclaim a task, the authenticated user must be the assignee of the task, \nthe owner of the task, or have started the process.\n\nHere's an example PUT request\n\n```\n/tasks/123?select=state\n```\nHere's a corresponding PUT request body:\n\n```JSON\n{\n  “state : “unclaimed”\n}\n```\n\nDelegating a task\n-----------------\n\nThis delegates the task from the owner to an assignee. \nThe result is the same as if the assignee had claimed the task, \nbut the task can then be resolved and the owner will\nbecome the assignee again.\n\nTo delegate a task, the authenticated user must be the \nassignee of the task and the assignee must be different from the owner.\n\nHere's an example PUT request\n\n```\n/tasks/123?select=state,assignee\n```\nHere's a corresponding PUT request body:\n\n```JSON\n{\n  “state : “delegated”,\n  “assignee : “Kermit”\n}\n```\nResolving a task\n-----------------\n\nThis returns a delegated task back to the owner. \nIn order to delegate a task, the authenticated user \nmust be the assignee of the task and the assignee must \nbe different from the owner.\n\nTo resolve a task, the authenticated user must be \nthe assignee of the task, the owner of the task, \nor have started the process.\n\nHere's an example PUT request\n\n```\n/tasks/123?select=state\n```\nHere's a corresponding PUT request body:\n\n```JSON\n{\n  “state : “resolved”\n}\n```\n","currentDescription":"Updates the state of the task **taskId**.\n\nTo perform a task action the authenticated user must be the assignee  or\na candidate. If networks is enabled, the task action is only\nperformed  if the task is inside the given network.\n\nIn non-network deployments, administrators can perform all operations\non  tasks. In network deployments, network administrators can see all\ntasks  in their network and perform all operations on tasks in their\nnetwork.\n\nYou use the **select** parameter in the URL to specify a comma-separated list of\nproperties in the\ntask that you want to update. Use the JSON body to specify the new values for those\nproperties.\n\nSo for example to change the state of task **123** to **completed**, use\nthis URL\nhttp://localhost:8080/alfresco/api/-default-/public/workflow/versions/1/tasks/123?select=state, and\nprovide this request body:\n\n```JSON\n{\n  \"state\": \"completed\"\n}\n```\nState Transitions\n=================\n\nClients can invoke actions by assigning an allowed value to the state property of a task.\nThe select parameter can be used to allow for a partial update of the resource.\nAlfresco will check for illegal state transitions and return an HTTP Bad Request (Response 400)\nif an illegal state transition is attempted.\nThere are five state transitions, completing, claiming, unclaiming, delegating, resolving.\n\nCompleting a task\n-----------------\n\nIf variables are included in the JSON body, they will be set in the task and then the process will continue.\n\nTo complete a task, the authenticated user must be the assignee of the task, the owner of the task, or have started the process.\n\nIn non-network deployments, administrators can perform this task operation on all tasks.\nIn network deployments, network administrators can perform this action on all tasks in their network.\n\nHere's an example PUT request\n\n```\n/tasks/123?select=state,variables\n```\nHere's is a corresponding PUT request body:\n\n```JSON\n{\n  “state : “completed”,\n  “variables” : [\n  {\n    \"name\" : \"bpm_priority\",\n    \"type\" : \"d_int\",\n    \"value\" : 1,\n    \"scope\" : \"global\"\n  }\n ]\n}\n```\n\nClaiming a task\n-----------------\n\nTo claim a task, the authenticated user must be the assignee of the task,\nthe owner of the task, or have started the process.\n\nHere's an example PUT request\n\n```\n/tasks/123?select=state\n```\nHere's a corresponding PUT request body:\n\n```JSON\n{\n  “state : “claimed”\n}\n```\n\nUnclaiming a task\n-----------------\n\nThis removes the current assignee of the task.\n\nTo unclaim a task, the authenticated user must be the assignee of the task,\nthe owner of the task, or have started the process.\n\nHere's an example PUT request\n\n```\n/tasks/123?select=state\n```\nHere's a corresponding PUT request body:\n\n```JSON\n{\n  “state : “unclaimed”\n}\n```\n\nDelegating a task\n-----------------\n\nThis delegates the task from the owner to an assignee.\nThe result is the same as if the assignee had claimed the task,\nbut the task can then be resolved and the owner will\nbecome the assignee again.\n\nTo delegate a task, the authenticated user must be the\nassignee of the task and the assignee must be different from the owner.\n\nHere's an example PUT request\n\n```\n/tasks/123?select=state,assignee\n```\nHere's a corresponding PUT request body:\n\n```JSON\n{\n  “state : “delegated”,\n  “assignee : “Kermit”\n}\n```\nResolving a task\n-----------------\n\nThis returns a delegated task back to the owner.\nIn order to delegate a task, the authenticated user\nmust be the assignee of the task and the assignee must\nbe different from the owner.\n\nTo resolve a task, the authenticated user must be\nthe assignee of the task, the owner of the task,\nor have started the process.\n\nHere's an example PUT request\n\n```\n/tasks/123?select=state\n```\nHere's a corresponding PUT request body:\n\n```JSON\n{\n  “state : “resolved”\n}\n```\n"},{"ruleId":"edit-description","message":"/paths//tasks/{taskId}/put/responses/default/ - Description turned from Error response to Unexpected error","descriptionPath":"/paths//tasks/{taskId}/put/responses/default/","previousDescription":"Error response","currentDescription":"Unexpected error"},{"ruleId":"add-response","message":"/tasks/{taskId} (put) - Response 400 added to [object Object]","path":"/tasks/{taskId}","method":"put","responseId":"400"},{"ruleId":"add-response","message":"/tasks/{taskId} (put) - Response 401 added to [object Object]","path":"/tasks/{taskId}","method":"put","responseId":"401"},{"ruleId":"edit-description","message":"/paths//tasks/{taskId}/task-form-model/get/ - Description turned from Returns the model of the task form type definition.\n\nAn authenticated user will have access to  access to all task form models. \nIn a network, only task form models that are inside the given network\nare returned.\n to Gets the model of the task form type definition.\n\nAn authenticated user will have access to  access to all task form models.\nIn a network, only task form models that are inside the given network\nare returned.\n","descriptionPath":"/paths//tasks/{taskId}/task-form-model/get/","previousDescription":"Returns the model of the task form type definition.\n\nAn authenticated user will have access to  access to all task form models. \nIn a network, only task form models that are inside the given network\nare returned.\n","currentDescription":"Gets the model of the task form type definition.\n\nAn authenticated user will have access to  access to all task form models.\nIn a network, only task form models that are inside the given network\nare returned.\n"},{"ruleId":"edit-description","message":"/paths//tasks/{taskId}/task-form-model/get/responses/404/ - Description turned from If **taskId** does not exist to **taskId** does not exist\n","descriptionPath":"/paths//tasks/{taskId}/task-form-model/get/responses/404/","previousDescription":"If **taskId** does not exist","currentDescription":"**taskId** does not exist\n"},{"ruleId":"edit-description","message":"/paths//tasks/{taskId}/task-form-model/get/responses/default/ - Description turned from Error response to Unexpected error","descriptionPath":"/paths//tasks/{taskId}/task-form-model/get/responses/default/","previousDescription":"Error response","currentDescription":"Unexpected error"},{"ruleId":"add-response","message":"/tasks/{taskId}/task-form-model (get) - Response 400 added to [object Object]","path":"/tasks/{taskId}/task-form-model","method":"get","responseId":"400"},{"ruleId":"add-response","message":"/tasks/{taskId}/task-form-model (get) - Response 401 added to [object Object]","path":"/tasks/{taskId}/task-form-model","method":"get","responseId":"401"},{"ruleId":"edit-summary","message":"/tasks/{taskId}/variables (get) - Summary turned from Get variables to List variables","method":"get","previousSummary":"Get variables","currentSummary":"List variables"},{"ruleId":"edit-description","message":"/paths//tasks/{taskId}/variables/get/ - Description turned from Returns a  list of variables for the specified task **taskId**.\n\nAn authenticated user will have access to a tasks variables if the\nuser has started the process or if the user is involved in any of the\nprocess’s tasks.  In a network, only variables for a process that is\ninside the given network are returned.\n\nIn non-network deployments, administrators can see all variables and\nperform all operations  on those variable. In network deployments,\nnetwork administrators can see all variables in  their network and\nperform all operations on variables in their network.\n to Gets a list of variables for the specified task **taskId**.\n\nAn authenticated user will have access to a tasks variables if the\nuser has started the process or if the user is involved in any of the\nprocess’s tasks.  In a network, only variables for a process that is\ninside the given network are returned.\n\nIn non-network deployments, administrators can see all variables and\nperform all operations  on those variable. In network deployments,\nnetwork administrators can see all variables in  their network and\nperform all operations on variables in their network.\n","descriptionPath":"/paths//tasks/{taskId}/variables/get/","previousDescription":"Returns a  list of variables for the specified task **taskId**.\n\nAn authenticated user will have access to a tasks variables if the\nuser has started the process or if the user is involved in any of the\nprocess’s tasks.  In a network, only variables for a process that is\ninside the given network are returned.\n\nIn non-network deployments, administrators can see all variables and\nperform all operations  on those variable. In network deployments,\nnetwork administrators can see all variables in  their network and\nperform all operations on variables in their network.\n","currentDescription":"Gets a list of variables for the specified task **taskId**.\n\nAn authenticated user will have access to a tasks variables if the\nuser has started the process or if the user is involved in any of the\nprocess’s tasks.  In a network, only variables for a process that is\ninside the given network are returned.\n\nIn non-network deployments, administrators can see all variables and\nperform all operations  on those variable. In network deployments,\nnetwork administrators can see all variables in  their network and\nperform all operations on variables in their network.\n"},{"ruleId":"edit-description","message":"/paths//tasks/{taskId}/variables/get/responses/404/ - Description turned from If **taskId** does not exist to **taskId** does not exist\n","descriptionPath":"/paths//tasks/{taskId}/variables/get/responses/404/","previousDescription":"If **taskId** does not exist","currentDescription":"**taskId** does not exist\n"},{"ruleId":"edit-description","message":"/paths//tasks/{taskId}/variables/get/responses/default/ - Description turned from Error response to Unexpected error","descriptionPath":"/paths//tasks/{taskId}/variables/get/responses/default/","previousDescription":"Error response","currentDescription":"Unexpected error"},{"ruleId":"add-response","message":"/tasks/{taskId}/variables (get) - Response 400 added to [object Object]","path":"/tasks/{taskId}/variables","method":"get","responseId":"400"},{"ruleId":"add-response","message":"/tasks/{taskId}/variables (get) - Response 401 added to [object Object]","path":"/tasks/{taskId}/variables","method":"get","responseId":"401"},{"ruleId":"edit-summary","message":"/tasks/{taskId}/variables (post) - Summary turned from Add variables to Create or update variables","method":"post","previousSummary":"Add variables","currentSummary":"Create or update variables"},{"ruleId":"edit-description","message":"/paths//tasks/{taskId}/variables/post/ - Description turned from Creates or updates variables for the task **taskId**. \nIf one of the variables does not exist yet, it will be created.\n to Create or update a variable for the task **taskId**.\nIf the variable does not exist yet, it will be created.      \n\n\n**Note:** You can create or update more than one variable by \nspecifying a list of variables in the JSON body like this:\n\n```JSON\n[\n  {\n    \"name\": \"string\",\n    \"value\": \"string\",\n    \"type\": \"string\"\n  },\n  {\n    \"name\": \"string\",\n    \"value\": \"string\",\n    \"type\": \"string\"\n  }\n]\n```\nIf you specify a list as input, then a paginated list rather than an entry is returned in the response body. For example:\n\n```JSON\n{\n  \"list\": {\n    \"pagination\": {\n      \"count\": 2,\n      \"hasMoreItems\": false,\n      \"totalItems\": 2,\n      \"skipCount\": 0,\n      \"maxItems\": 100\n    },\n    \"entries\": [\n      {\n        \"entry\": {\n          ...\n        }\n      },\n      {\n        \"entry\": {\n         ...\n        }\n      }\n    ]\n  }\n}\n```\n","descriptionPath":"/paths//tasks/{taskId}/variables/post/","previousDescription":"Creates or updates variables for the task **taskId**. \nIf one of the variables does not exist yet, it will be created.\n","currentDescription":"Create or update a variable for the task **taskId**.\nIf the variable does not exist yet, it will be created.      \n\n\n**Note:** You can create or update more than one variable by \nspecifying a list of variables in the JSON body like this:\n\n```JSON\n[\n  {\n    \"name\": \"string\",\n    \"value\": \"string\",\n    \"type\": \"string\"\n  },\n  {\n    \"name\": \"string\",\n    \"value\": \"string\",\n    \"type\": \"string\"\n  }\n]\n```\nIf you specify a list as input, then a paginated list rather than an entry is returned in the response body. For example:\n\n```JSON\n{\n  \"list\": {\n    \"pagination\": {\n      \"count\": 2,\n      \"hasMoreItems\": false,\n      \"totalItems\": 2,\n      \"skipCount\": 0,\n      \"maxItems\": 100\n    },\n    \"entries\": [\n      {\n        \"entry\": {\n          ...\n        }\n      },\n      {\n        \"entry\": {\n         ...\n        }\n      }\n    ]\n  }\n}\n```\n"},{"ruleId":"delete-param","message":"/tasks/{taskId}/variables (post) - Param variableBody deleted","path":"/tasks/{taskId}/variables","method":"post","param":"variableBody"},{"ruleId":"edit-description","message":"/paths//tasks/{taskId}/variables/post/responses/404/ - Description turned from If **taskId** does not exist to **taskId** does not exist\n","descriptionPath":"/paths//tasks/{taskId}/variables/post/responses/404/","previousDescription":"If **taskId** does not exist","currentDescription":"**taskId** does not exist\n"},{"ruleId":"edit-description","message":"/paths//tasks/{taskId}/variables/post/responses/default/ - Description turned from Error response to Unexpected error","descriptionPath":"/paths//tasks/{taskId}/variables/post/responses/default/","previousDescription":"Error response","currentDescription":"Unexpected error"},{"ruleId":"add-response","message":"/tasks/{taskId}/variables (post) - Response 401 added to [object Object]","path":"/tasks/{taskId}/variables","method":"post","responseId":"401"},{"ruleId":"edit-summary","message":"/tasks/{taskId}/variables/{variableName} (put) - Summary turned from Add a variable to Create or update a variable","method":"put","previousSummary":"Add a variable","currentSummary":"Create or update a variable"},{"ruleId":"edit-description","message":"/paths//tasks/{taskId}/variables/{variableName}/put/responses/404/ - Description turned from If **taskId** does not exist to **taskId** does not exist\n","descriptionPath":"/paths//tasks/{taskId}/variables/{variableName}/put/responses/404/","previousDescription":"If **taskId** does not exist","currentDescription":"**taskId** does not exist\n"},{"ruleId":"edit-description","message":"/paths//tasks/{taskId}/variables/{variableName}/put/responses/default/ - Description turned from Error response to Unexpected error","descriptionPath":"/paths//tasks/{taskId}/variables/{variableName}/put/responses/default/","previousDescription":"Error response","currentDescription":"Unexpected error"},{"ruleId":"add-response","message":"/tasks/{taskId}/variables/{variableName} (put) - Response 400 added to [object Object]","path":"/tasks/{taskId}/variables/{variableName}","method":"put","responseId":"400"},{"ruleId":"add-response","message":"/tasks/{taskId}/variables/{variableName} (put) - Response 401 added to [object Object]","path":"/tasks/{taskId}/variables/{variableName}","method":"put","responseId":"401"},{"ruleId":"edit-description","message":"/paths//tasks/{taskId}/variables/{variableName}/delete/responses/404/ - Description turned from The **taskId** does not exist, or the **variableName** does not exist to The **taskId** does not exist or the **variableName** does not exist","descriptionPath":"/paths//tasks/{taskId}/variables/{variableName}/delete/responses/404/","previousDescription":"The **taskId** does not exist, or the **variableName** does not exist","currentDescription":"The **taskId** does not exist or the **variableName** does not exist"},{"ruleId":"edit-description","message":"/paths//tasks/{taskId}/variables/{variableName}/delete/responses/default/ - Description turned from Error response to Unexpected error","descriptionPath":"/paths//tasks/{taskId}/variables/{variableName}/delete/responses/default/","previousDescription":"Error response","currentDescription":"Unexpected error"},{"ruleId":"add-response","message":"/tasks/{taskId}/variables/{variableName} (delete) - Response 401 added to [object Object]","path":"/tasks/{taskId}/variables/{variableName}","method":"delete","responseId":"401"},{"ruleId":"edit-summary","message":"/tasks/{taskId}/items (get) - Summary turned from Get items to List items","method":"get","previousSummary":"Get items","currentSummary":"List items"},{"ruleId":"edit-description","message":"/paths//tasks/{taskId}/items/get/ - Description turned from Returns a list of items for the specified task **taskId**.\n\nAn authenticated user will have access to a task's items if the\nuser has started the process or if the user is involved in any of the\nprocess’s tasks.  In a network, only items for a process that is\ninside the given network are returned.\n\nIn non-network deployments, administrators can see all items and\nperform all operations  on those items. In network deployments,\nnetwork administrators can see all items in their network and\nperform all operations on items in their network.\n to Gets a list of items for the specified task **taskId**.\n\nAn authenticated user will have access to a task's items if the\nuser has started the process or if the user is involved in any of the\nprocess’s tasks.  In a network, only items for a process that is\ninside the given network are returned.\n\nIn non-network deployments, administrators can see all items and\nperform all operations  on those items. In network deployments,\nnetwork administrators can see all items in their network and\nperform all operations on items in their network.\n","descriptionPath":"/paths//tasks/{taskId}/items/get/","previousDescription":"Returns a list of items for the specified task **taskId**.\n\nAn authenticated user will have access to a task's items if the\nuser has started the process or if the user is involved in any of the\nprocess’s tasks.  In a network, only items for a process that is\ninside the given network are returned.\n\nIn non-network deployments, administrators can see all items and\nperform all operations  on those items. In network deployments,\nnetwork administrators can see all items in their network and\nperform all operations on items in their network.\n","currentDescription":"Gets a list of items for the specified task **taskId**.\n\nAn authenticated user will have access to a task's items if the\nuser has started the process or if the user is involved in any of the\nprocess’s tasks.  In a network, only items for a process that is\ninside the given network are returned.\n\nIn non-network deployments, administrators can see all items and\nperform all operations  on those items. In network deployments,\nnetwork administrators can see all items in their network and\nperform all operations on items in their network.\n"},{"ruleId":"edit-description","message":"/paths//tasks/{taskId}/items/get/responses/404/ - Description turned from If **taskId** does not exist to **taskId** does not exist\n","descriptionPath":"/paths//tasks/{taskId}/items/get/responses/404/","previousDescription":"If **taskId** does not exist","currentDescription":"**taskId** does not exist\n"},{"ruleId":"edit-description","message":"/paths//tasks/{taskId}/items/get/responses/default/ - Description turned from Error response to Unexpected error","descriptionPath":"/paths//tasks/{taskId}/items/get/responses/default/","previousDescription":"Error response","currentDescription":"Unexpected error"},{"ruleId":"add-response","message":"/tasks/{taskId}/items (get) - Response 400 added to [object Object]","path":"/tasks/{taskId}/items","method":"get","responseId":"400"},{"ruleId":"add-response","message":"/tasks/{taskId}/items (get) - Response 401 added to [object Object]","path":"/tasks/{taskId}/items","method":"get","responseId":"401"},{"ruleId":"edit-summary","message":"/tasks/{taskId}/items (post) - Summary turned from Add an item to Create an item","method":"post","previousSummary":"Add an item","currentSummary":"Create an item"},{"ruleId":"edit-description","message":"/paths//tasks/{taskId}/items/post/ - Description turned from Creates an item for a given task **taskId**.\n\nIf the item  already is part of that task the request will have no effect.\n to Creates an item for a given task **taskId**.\n\nIf the item  already is part of that task the request will have no effect.\n\n**Note:** You can create more than one item by\nspecifying a list of items in the JSON body like this:\n\n```JSON\n[\n  {\n     \"id\": \"1ff9da1a-ee2f-4b9c-8c34-44665e844444\"\n  },\n  {\n     \"id\": \"1ff9da1a-ee2f-4b9c-8c34-44665e855555\"\n  }\n]\n```\nIf you specify a list as input, then a paginated list rather than an entry is returned in the response body. For example:\n\n```JSON\n{\n  \"list\": {\n    \"pagination\": {\n      \"count\": 2,\n      \"hasMoreItems\": false,\n      \"totalItems\": 2,\n      \"skipCount\": 0,\n      \"maxItems\": 100\n    },\n    \"entries\": [\n      {\n        \"entry\": {\n          ...\n        }\n      },\n      {\n        \"entry\": {\n          ...\n        }\n      }\n    ]\n  }\n}\n```\n","descriptionPath":"/paths//tasks/{taskId}/items/post/","previousDescription":"Creates an item for a given task **taskId**.\n\nIf the item  already is part of that task the request will have no effect.\n","currentDescription":"Creates an item for a given task **taskId**.\n\nIf the item  already is part of that task the request will have no effect.\n\n**Note:** You can create more than one item by\nspecifying a list of items in the JSON body like this:\n\n```JSON\n[\n  {\n     \"id\": \"1ff9da1a-ee2f-4b9c-8c34-44665e844444\"\n  },\n  {\n     \"id\": \"1ff9da1a-ee2f-4b9c-8c34-44665e855555\"\n  }\n]\n```\nIf you specify a list as input, then a paginated list rather than an entry is returned in the response body. For example:\n\n```JSON\n{\n  \"list\": {\n    \"pagination\": {\n      \"count\": 2,\n      \"hasMoreItems\": false,\n      \"totalItems\": 2,\n      \"skipCount\": 0,\n      \"maxItems\": 100\n    },\n    \"entries\": [\n      {\n        \"entry\": {\n          ...\n        }\n      },\n      {\n        \"entry\": {\n          ...\n        }\n      }\n    ]\n  }\n}\n```\n"},{"ruleId":"edit-description","message":"/paths//tasks/{taskId}/items/post/responses/404/ - Description turned from If **taskId** does not exist to **taskId** does not exist\n","descriptionPath":"/paths//tasks/{taskId}/items/post/responses/404/","previousDescription":"If **taskId** does not exist","currentDescription":"**taskId** does not exist\n"},{"ruleId":"edit-description","message":"/paths//tasks/{taskId}/items/post/responses/default/ - Description turned from Error response to Unexpected error","descriptionPath":"/paths//tasks/{taskId}/items/post/responses/default/","previousDescription":"Error response","currentDescription":"Unexpected error"},{"ruleId":"add-response","message":"/tasks/{taskId}/items (post) - Response 400 added to [object Object]","path":"/tasks/{taskId}/items","method":"post","responseId":"400"},{"ruleId":"add-response","message":"/tasks/{taskId}/items (post) - Response 401 added to [object Object]","path":"/tasks/{taskId}/items","method":"post","responseId":"401"},{"ruleId":"edit-description","message":"/paths//tasks/{taskId}/items/{itemId}/delete/responses/404/ - Description turned from The **taskId** does not exist, or the **itemId** does not exist to The **taskId** does not exist or the **itemId** does not exist","descriptionPath":"/paths//tasks/{taskId}/items/{itemId}/delete/responses/404/","previousDescription":"The **taskId** does not exist, or the **itemId** does not exist","currentDescription":"The **taskId** does not exist or the **itemId** does not exist"},{"ruleId":"edit-description","message":"/paths//tasks/{taskId}/items/{itemId}/delete/responses/default/ - Description turned from Error response to Unexpected error","descriptionPath":"/paths//tasks/{taskId}/items/{itemId}/delete/responses/default/","previousDescription":"Error response","currentDescription":"Unexpected error"},{"ruleId":"add-response","message":"/tasks/{taskId}/items/{itemId} (delete) - Response 401 added to [object Object]","path":"/tasks/{taskId}/items/{itemId}","method":"delete","responseId":"401"},{"ruleId":"edit-summary","message":"/tasks/{taskId}/candidates (get) - Summary turned from Get task candidates to List task candidates","method":"get","previousSummary":"Get task candidates","currentSummary":"List task candidates"},{"ruleId":"edit-description","message":"/paths//tasks/{taskId}/candidates/get/ - Description turned from Returns a list of candidate users and groups for the specified task **taskId**.\n to Gets a list of candidate users and groups for the specified task **taskId**.\n","descriptionPath":"/paths//tasks/{taskId}/candidates/get/","previousDescription":"Returns a list of candidate users and groups for the specified task **taskId**.\n","currentDescription":"Gets a list of candidate users and groups for the specified task **taskId**.\n"},{"ruleId":"edit-description","message":"/paths//tasks/{taskId}/candidates/get/responses/404/ - Description turned from If **taskId** does not exist to **taskId** does not exist\n","descriptionPath":"/paths//tasks/{taskId}/candidates/get/responses/404/","previousDescription":"If **taskId** does not exist","currentDescription":"**taskId** does not exist\n"},{"ruleId":"edit-description","message":"/paths//tasks/{taskId}/candidates/get/responses/default/ - Description turned from Error response to Unexpected error","descriptionPath":"/paths//tasks/{taskId}/candidates/get/responses/default/","previousDescription":"Error response","currentDescription":"Unexpected error"},{"ruleId":"add-response","message":"/tasks/{taskId}/candidates (get) - Response 400 added to [object Object]","path":"/tasks/{taskId}/candidates","method":"get","responseId":"400"},{"ruleId":"add-response","message":"/tasks/{taskId}/candidates (get) - Response 401 added to [object Object]","path":"/tasks/{taskId}/candidates","method":"get","responseId":"401"},{"ruleId":"add-optional-object-property","message":"definitions/Error/properties/error - Optional property logId added","path":"definitions/Error/properties/error","property":"logId"},{"ruleId":"edit-description","message":"/definitions/Pagination/properties/hasMoreItems/ - Description turned from A boolean value which is **true** if there are more entities in the collection \nbeyond those in this response. A true value means a request with a larger value \nfor the **skipCount** or the **maxItems** parameter will return more entities.\n to A boolean value which is **true** if there are more entities in the collection\nbeyond those in this response. A true value means a request with a larger value\nfor the **skipCount** or the **maxItems** parameter will return more entities.\n","descriptionPath":"/definitions/Pagination/properties/hasMoreItems/","previousDescription":"A boolean value which is **true** if there are more entities in the collection \nbeyond those in this response. A true value means a request with a larger value \nfor the **skipCount** or the **maxItems** parameter will return more entities.\n","currentDescription":"A boolean value which is **true** if there are more entities in the collection\nbeyond those in this response. A true value means a request with a larger value\nfor the **skipCount** or the **maxItems** parameter will return more entities.\n"},{"ruleId":"edit-description","message":"/definitions/Pagination/properties/totalItems/ - Description turned from An integer describing the total number of entities in the collection. \nThe API might not be able to determine this value, \nin which case this property will not be present.\n to An integer describing the total number of entities in the collection.\nThe API might not be able to determine this value,\nin which case this property will not be present.\n","descriptionPath":"/definitions/Pagination/properties/totalItems/","previousDescription":"An integer describing the total number of entities in the collection. \nThe API might not be able to determine this value, \nin which case this property will not be present.\n","currentDescription":"An integer describing the total number of entities in the collection.\nThe API might not be able to determine this value,\nin which case this property will not be present.\n"},{"ruleId":"edit-description","message":"/definitions/Pagination/properties/skipCount/ - Description turned from An integer describing how many entities exist in the collection before \nthose included in this list.\n to An integer describing how many entities exist in the collection before\nthose included in this list.\n","descriptionPath":"/definitions/Pagination/properties/skipCount/","previousDescription":"An integer describing how many entities exist in the collection before \nthose included in this list.\n","currentDescription":"An integer describing how many entities exist in the collection before\nthose included in this list.\n"},{"ruleId":"add-definition","message":"ItemBody - Added","path":"ItemBody"}],"unmatchDiffs":[{"kind":"E","path":["info","title"],"lhs":"Alfresco Workflow REST API","rhs":"Alfresco Content Services REST API"},{"kind":"N","path":["parameters","skipCountParam","minimum"],"rhs":0},{"kind":"N","path":["parameters","maxItemsParam","minimum"],"rhs":1},{"kind":"E","path":["parameters","orderByParam","type"],"lhs":"string","rhs":"array"},{"kind":"N","path":["parameters","orderByParam","items"],"rhs":{"type":"string"}},{"kind":"N","path":["parameters","orderByParam","collectionFormat"],"rhs":"csv"},{"kind":"D","path":["paths","/processes/{processId}/variables","post","parameters","variableBody","schema","type"],"lhs":"array"},{"kind":"D","path":["paths","/processes/{processId}/variables","post","parameters","variableBody","schema","items"],"lhs":{"$ref":"#/definitions/VariableBody"}},{"kind":"N","path":["paths","/processes/{processId}/variables","post","parameters","variableBody","schema","$ref"],"rhs":"#/definitions/VariableBody"},{"kind":"D","path":["paths","/processes/{processId}/items","post","parameters","itemBody","schema","properties"],"lhs":{"id":{"type":"string"}}},{"kind":"N","path":["paths","/processes/{processId}/items","post","parameters","itemBody","schema","$ref"],"rhs":"#/definitions/ItemBody"},{"kind":"E","path":["paths","/processes/{processId}/tasks","get","tags",0],"lhs":"processes","rhs":"tasks"},{"kind":"A","path":["paths","/processes/{processId}/tasks","get","tags"],"index":1,"item":{"kind":"D","lhs":"tasks"}},{"kind":"D","path":["paths","/tasks/{taskId}/items","post","parameters","itemBody","schema","properties"],"lhs":{"id":{"type":"string"}}},{"kind":"N","path":["paths","/tasks/{taskId}/items","post","parameters","itemBody","schema","$ref"],"rhs":"#/definitions/ItemBody"}]}
