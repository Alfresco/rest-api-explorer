{"errors":[],"warnings":[{"ruleId":"edit-operation-id","message":"/nodes/{nodeId}/comments (get) - OperationId turned from getComments to listComments","path":"/nodes/{nodeId}/comments","method":"get","previousOperationId":"getComments","currentOperationId":"listComments"},{"ruleId":"edit-operation-id","message":"/nodes/{nodeId}/comments (post) - OperationId turned from addComment to createComment","path":"/nodes/{nodeId}/comments","method":"post","previousOperationId":"addComment","currentOperationId":"createComment"},{"ruleId":"add-required-param","message":"/nodes/{nodeId}/comments (post) - Required param commentBodyCreate added","path":"/nodes/{nodeId}/comments","method":"post","param":"commentBodyCreate"},{"ruleId":"add-required-param","message":"/nodes/{nodeId}/comments/{commentId} (put) - Required param commentBodyUpdate added","path":"/nodes/{nodeId}/comments/{commentId}","method":"put","param":"commentBodyUpdate"},{"ruleId":"edit-operation-id","message":"/nodes/{nodeId}/comments/{commentId} (delete) - OperationId turned from removeComment to deleteComment","path":"/nodes/{nodeId}/comments/{commentId}","method":"delete","previousOperationId":"removeComment","currentOperationId":"deleteComment"},{"ruleId":"edit-operation-id","message":"/nodes/{nodeId}/ratings (get) - OperationId turned from getRatings to listRatings","path":"/nodes/{nodeId}/ratings","method":"get","previousOperationId":"getRatings","currentOperationId":"listRatings"},{"ruleId":"edit-operation-id","message":"/nodes/{nodeId}/ratings (post) - OperationId turned from rate to createRating","path":"/nodes/{nodeId}/ratings","method":"post","previousOperationId":"rate","currentOperationId":"createRating"},{"ruleId":"add-required-param","message":"/nodes/{nodeId}/ratings (post) - Required param ratingBodyCreate added","path":"/nodes/{nodeId}/ratings","method":"post","param":"ratingBodyCreate"},{"ruleId":"edit-operation-id","message":"/nodes/{nodeId}/ratings/{ratingId} (delete) - OperationId turned from removeRating to deleteRating","path":"/nodes/{nodeId}/ratings/{ratingId}","method":"delete","previousOperationId":"removeRating","currentOperationId":"deleteRating"},{"ruleId":"edit-operation-id","message":"/nodes/{nodeId}/tags (get) - OperationId turned from getNodeTags to listTagsForNode","path":"/nodes/{nodeId}/tags","method":"get","previousOperationId":"getNodeTags","currentOperationId":"listTagsForNode"},{"ruleId":"edit-operation-id","message":"/nodes/{nodeId}/tags (post) - OperationId turned from addTag to createTagForNode","path":"/nodes/{nodeId}/tags","method":"post","previousOperationId":"addTag","currentOperationId":"createTagForNode"},{"ruleId":"add-required-param","message":"/nodes/{nodeId}/tags (post) - Required param tagBodyCreate added","path":"/nodes/{nodeId}/tags","method":"post","param":"tagBodyCreate"},{"ruleId":"edit-operation-id","message":"/nodes/{nodeId}/tags/{tagId} (delete) - OperationId turned from removeTag to deleteTagFromNode","path":"/nodes/{nodeId}/tags/{tagId}","method":"delete","previousOperationId":"removeTag","currentOperationId":"deleteTagFromNode"},{"ruleId":"edit-operation-id","message":"/people/{personId}/activities (get) - OperationId turned from getActivities to listActivitiesForPerson","path":"/people/{personId}/activities","method":"get","previousOperationId":"getActivities","currentOperationId":"listActivitiesForPerson"},{"ruleId":"edit-operation-id","message":"/people/{personId}/favorite-sites (get) - OperationId turned from getFavoriteSites to listFavoriteSitesForPerson","path":"/people/{personId}/favorite-sites","method":"get","previousOperationId":"getFavoriteSites","currentOperationId":"listFavoriteSitesForPerson"},{"ruleId":"edit-operation-id","message":"/people/{personId}/favorite-sites (post) - OperationId turned from favoriteSite to createSiteFavorite","path":"/people/{personId}/favorite-sites","method":"post","previousOperationId":"favoriteSite","currentOperationId":"createSiteFavorite"},{"ruleId":"add-required-param","message":"/people/{personId}/favorite-sites (post) - Required param favoriteSiteBodyCreate added","path":"/people/{personId}/favorite-sites","method":"post","param":"favoriteSiteBodyCreate"},{"ruleId":"edit-operation-id","message":"/people/{personId}/favorite-sites/{siteId} (delete) - OperationId turned from deleteFavoriteSite to deleteSiteFavorite","path":"/people/{personId}/favorite-sites/{siteId}","method":"delete","previousOperationId":"deleteFavoriteSite","currentOperationId":"deleteSiteFavorite"},{"ruleId":"edit-operation-id","message":"/people/{personId}/favorites (get) - OperationId turned from getFavorites to listFavorites","path":"/people/{personId}/favorites","method":"get","previousOperationId":"getFavorites","currentOperationId":"listFavorites"},{"ruleId":"edit-operation-id","message":"/people/{personId}/favorites (post) - OperationId turned from addFavorite to createFavorite","path":"/people/{personId}/favorites","method":"post","previousOperationId":"addFavorite","currentOperationId":"createFavorite"},{"ruleId":"add-required-param","message":"/people/{personId}/favorites (post) - Required param favoriteBodyCreate added","path":"/people/{personId}/favorites","method":"post","param":"favoriteBodyCreate"},{"ruleId":"edit-operation-id","message":"/people/{personId}/favorites/{favoriteId} (delete) - OperationId turned from removeFavoriteSite to deleteFavorite","path":"/people/{personId}/favorites/{favoriteId}","method":"delete","previousOperationId":"removeFavoriteSite","currentOperationId":"deleteFavorite"},{"ruleId":"edit-operation-id","message":"/people/{personId}/networks (get) - OperationId turned from getPersonNetworks to listNetworksForPerson","path":"/people/{personId}/networks","method":"get","previousOperationId":"getPersonNetworks","currentOperationId":"listNetworksForPerson"},{"ruleId":"edit-operation-id","message":"/people/{personId}/networks/{networkId} (get) - OperationId turned from getPersonNetwork to getNetworkForPerson","path":"/people/{personId}/networks/{networkId}","method":"get","previousOperationId":"getPersonNetwork","currentOperationId":"getNetworkForPerson"},{"ruleId":"edit-operation-id","message":"/people/{personId}/preferences (get) - OperationId turned from getPreferences to listPreferences","path":"/people/{personId}/preferences","method":"get","previousOperationId":"getPreferences","currentOperationId":"listPreferences"},{"ruleId":"edit-operation-id","message":"/people/{personId}/site-membership-requests (get) - OperationId turned from getSiteMembershipRequests to listSiteMembershipRequestsForPerson","path":"/people/{personId}/site-membership-requests","method":"get","previousOperationId":"getSiteMembershipRequests","currentOperationId":"listSiteMembershipRequestsForPerson"},{"ruleId":"edit-operation-id","message":"/people/{personId}/site-membership-requests (post) - OperationId turned from addSiteMembershipRequest to createSiteMembershipRequestForPerson","path":"/people/{personId}/site-membership-requests","method":"post","previousOperationId":"addSiteMembershipRequest","currentOperationId":"createSiteMembershipRequestForPerson"},{"ruleId":"add-required-param","message":"/people/{personId}/site-membership-requests (post) - Required param siteMembershipRequestBodyCreate added","path":"/people/{personId}/site-membership-requests","method":"post","param":"siteMembershipRequestBodyCreate"},{"ruleId":"edit-operation-id","message":"/people/{personId}/site-membership-requests/{siteId} (get) - OperationId turned from getSiteMembershipRequest to getSiteMembershipRequestForPerson","path":"/people/{personId}/site-membership-requests/{siteId}","method":"get","previousOperationId":"getSiteMembershipRequest","currentOperationId":"getSiteMembershipRequestForPerson"},{"ruleId":"edit-operation-id","message":"/people/{personId}/site-membership-requests/{siteId} (put) - OperationId turned from updateSiteMembershipRequest to updateSiteMembershipRequestForPerson","path":"/people/{personId}/site-membership-requests/{siteId}","method":"put","previousOperationId":"updateSiteMembershipRequest","currentOperationId":"updateSiteMembershipRequestForPerson"},{"ruleId":"add-required-param","message":"/people/{personId}/site-membership-requests/{siteId} (put) - Required param siteMembershipRequestBodyUpdate added","path":"/people/{personId}/site-membership-requests/{siteId}","method":"put","param":"siteMembershipRequestBodyUpdate"},{"ruleId":"edit-operation-id","message":"/people/{personId}/site-membership-requests/{siteId} (delete) - OperationId turned from removeSiteMembershipRequest to deleteSiteMembershipRequestForPerson","path":"/people/{personId}/site-membership-requests/{siteId}","method":"delete","previousOperationId":"removeSiteMembershipRequest","currentOperationId":"deleteSiteMembershipRequestForPerson"},{"ruleId":"edit-operation-id","message":"/people/{personId}/sites (get) - OperationId turned from getSiteMembership to listSiteMembershipsForPerson","path":"/people/{personId}/sites","method":"get","previousOperationId":"getSiteMembership","currentOperationId":"listSiteMembershipsForPerson"},{"ruleId":"edit-operation-id","message":"/people/{personId}/sites/{siteId} (get) - OperationId turned from getSiteForMember to getSiteMembershipForPerson","path":"/people/{personId}/sites/{siteId}","method":"get","previousOperationId":"getSiteForMember","currentOperationId":"getSiteMembershipForPerson"},{"ruleId":"edit-operation-id","message":"/people/{personId}/sites/{siteId} (delete) - OperationId turned from removeMemberFromSite to deleteSiteMembershipForPerson","path":"/people/{personId}/sites/{siteId}","method":"delete","previousOperationId":"removeMemberFromSite","currentOperationId":"deleteSiteMembershipForPerson"},{"ruleId":"edit-operation-id","message":"/sites (get) - OperationId turned from getSites to listSites","path":"/sites","method":"get","previousOperationId":"getSites","currentOperationId":"listSites"},{"ruleId":"edit-operation-id","message":"/sites/{siteId}/containers (get) - OperationId turned from getSiteContainers to listSiteContainers","path":"/sites/{siteId}/containers","method":"get","previousOperationId":"getSiteContainers","currentOperationId":"listSiteContainers"},{"ruleId":"edit-operation-id","message":"/sites/{siteId}/members (get) - OperationId turned from getSiteMembers to listSiteMemberships","path":"/sites/{siteId}/members","method":"get","previousOperationId":"getSiteMembers","currentOperationId":"listSiteMemberships"},{"ruleId":"edit-operation-id","message":"/sites/{siteId}/members (post) - OperationId turned from addSiteMember to createSiteMembership","path":"/sites/{siteId}/members","method":"post","previousOperationId":"addSiteMember","currentOperationId":"createSiteMembership"},{"ruleId":"add-required-param","message":"/sites/{siteId}/members (post) - Required param siteMembershipBodyCreate added","path":"/sites/{siteId}/members","method":"post","param":"siteMembershipBodyCreate"},{"ruleId":"edit-operation-id","message":"/sites/{siteId}/members/{personId} (get) - OperationId turned from getSiteMember to getSiteMembership","path":"/sites/{siteId}/members/{personId}","method":"get","previousOperationId":"getSiteMember","currentOperationId":"getSiteMembership"},{"ruleId":"edit-operation-id","message":"/sites/{siteId}/members/{personId} (put) - OperationId turned from updateSiteMember to updateSiteMembership","path":"/sites/{siteId}/members/{personId}","method":"put","previousOperationId":"updateSiteMember","currentOperationId":"updateSiteMembership"},{"ruleId":"add-required-param","message":"/sites/{siteId}/members/{personId} (put) - Required param siteMembershipBodyUpdate added","path":"/sites/{siteId}/members/{personId}","method":"put","param":"siteMembershipBodyUpdate"},{"ruleId":"edit-operation-id","message":"/sites/{siteId}/members/{personId} (delete) - OperationId turned from removeSiteMember to deleteSiteMembership","path":"/sites/{siteId}/members/{personId}","method":"delete","previousOperationId":"removeSiteMember","currentOperationId":"deleteSiteMembership"},{"ruleId":"edit-operation-id","message":"/tags (get) - OperationId turned from getTags to listTags","path":"/tags","method":"get","previousOperationId":"getTags","currentOperationId":"listTags"},{"ruleId":"add-required-param","message":"/tags/{tagId} (put) - Required param tagBodyUpdate added","path":"/tags/{tagId}","method":"put","param":"tagBodyUpdate"}],"infos":[{"ruleId":"edit-description","message":"/info/ - Description turned from Provides access to the core features of Alfresco to **Core API**\n\nProvides access to the core features of Alfresco Content Services.\n","descriptionPath":"/info/","previousDescription":"Provides access to the core features of Alfresco","currentDescription":"**Core API**\n\nProvides access to the core features of Alfresco Content Services.\n"},{"ruleId":"edit-description","message":"/tags/0/ - Description turned from Retrieve and manage Comments to Retrieve and clear audit entries","descriptionPath":"/tags/0/","previousDescription":"Retrieve and manage Comments","currentDescription":"Retrieve and clear audit entries"},{"ruleId":"edit-description","message":"/tags/1/ - Description turned from Retrieve and manage Favorites to Retrieve and execute actions","descriptionPath":"/tags/1/","previousDescription":"Retrieve and manage Favorites","currentDescription":"Retrieve and execute actions"},{"ruleId":"edit-description","message":"/tags/2/ - Description turned from Retrieve and manage Networks to Retrieve and manage activities","descriptionPath":"/tags/2/","previousDescription":"Retrieve and manage Networks","currentDescription":"Retrieve and manage activities"},{"ruleId":"edit-description","message":"/tags/3/ - Description turned from Retrieve and manage People to Retrieve and manage comments","descriptionPath":"/tags/3/","previousDescription":"Retrieve and manage People","currentDescription":"Retrieve and manage comments"},{"ruleId":"edit-description","message":"/tags/4/ - Description turned from Retrieve and manage Ratings to Create and manage downloads","descriptionPath":"/tags/4/","previousDescription":"Retrieve and manage Ratings","currentDescription":"Create and manage downloads"},{"ruleId":"edit-description","message":"/tags/5/ - Description turned from Retrieve and manage Sites to Retrieve and manage favorites","descriptionPath":"/tags/5/","previousDescription":"Retrieve and manage Sites","currentDescription":"Retrieve and manage favorites"},{"ruleId":"edit-description","message":"/tags/6/ - Description turned from Retrieve and manage Tags to Retrieve and manage networks","descriptionPath":"/tags/6/","previousDescription":"Retrieve and manage Tags","currentDescription":"Retrieve and manage networks"},{"ruleId":"edit-description","message":"/parameters/skipCountParam/ - Description turned from The number of entities that exist in the collection before those included in this list. to The number of entities that exist in the collection before those included in this list. \nIf not supplied then the default value is 0.\n","descriptionPath":"/parameters/skipCountParam/","previousDescription":"The number of entities that exist in the collection before those included in this list.","currentDescription":"The number of entities that exist in the collection before those included in this list. \nIf not supplied then the default value is 0.\n"},{"ruleId":"edit-description","message":"/parameters/maxItemsParam/ - Description turned from The maximum number of items to return in the list. to The maximum number of items to return in the list. \nIf not supplied then the default value is 100.\n","descriptionPath":"/parameters/maxItemsParam/","previousDescription":"The maximum number of items to return in the list.","currentDescription":"The maximum number of items to return in the list. \nIf not supplied then the default value is 100.\n"},{"ruleId":"edit-description","message":"/parameters/orderByParam/ - Description turned from A string to control the order of the entities returned. to A string to control the order of the entities returned in a list. You can use the **orderBy** parameter to\nsort the list by one or more fields.\n\nEach field has a default sort order, which is normally ascending order. Read the API method implementation notes\nabove to check if any fields used in this method have a descending default search order.\n\nTo sort the entities in a specific order, you can use the **ASC** and **DESC** keywords for any field.\n","descriptionPath":"/parameters/orderByParam/","previousDescription":"A string to control the order of the entities returned.","currentDescription":"A string to control the order of the entities returned in a list. You can use the **orderBy** parameter to\nsort the list by one or more fields.\n\nEach field has a default sort order, which is normally ascending order. Read the API method implementation notes\nabove to check if any fields used in this method have a descending default search order.\n\nTo sort the entities in a specific order, you can use the **ASC** and **DESC** keywords for any field.\n"},{"ruleId":"edit-summary","message":"/nodes/{nodeId}/comments (get) - Summary turned from Get comments to List comments","method":"get","previousSummary":"Get comments","currentSummary":"List comments"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/comments/get/ - Description turned from Returns a list of comments for the node identified by **nodeId**, sorted chronologically with the newest first. to Gets a list of comments for the node **nodeId**, sorted chronologically with the newest comment first.","descriptionPath":"/paths//nodes/{nodeId}/comments/get/","previousDescription":"Returns a list of comments for the node identified by **nodeId**, sorted chronologically with the newest first.","currentDescription":"Gets a list of comments for the node **nodeId**, sorted chronologically with the newest comment first."},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/comments/get/responses/400/ - Description turned from If the **nodeId** exists, but does not identify a file or a folder \nor if an invalid value is provided for the **maxItems** or **skipCount** parameter\n to Invalid parameter: **nodeId** exists but does not identify a file or a folder, \nor the value of **maxItems** is invalid, or the value of **skipCount** is invalid\n","descriptionPath":"/paths//nodes/{nodeId}/comments/get/responses/400/","previousDescription":"If the **nodeId** exists, but does not identify a file or a folder \nor if an invalid value is provided for the **maxItems** or **skipCount** parameter\n","currentDescription":"Invalid parameter: **nodeId** exists but does not identify a file or a folder, \nor the value of **maxItems** is invalid, or the value of **skipCount** is invalid\n"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/comments/get/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//nodes/{nodeId}/comments/get/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/comments/get/responses/403/ - Description turned from If the user does not have permission read comments on the node to User does not have permission read comments on the node","descriptionPath":"/paths//nodes/{nodeId}/comments/get/responses/403/","previousDescription":"If the user does not have permission read comments on the node","currentDescription":"User does not have permission read comments on the node"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/comments/get/responses/404/ - Description turned from If **nodeId** does not exist to **nodeId** does not exist\n","descriptionPath":"/paths//nodes/{nodeId}/comments/get/responses/404/","previousDescription":"If **nodeId** does not exist","currentDescription":"**nodeId** does not exist\n"},{"ruleId":"edit-summary","message":"/nodes/{nodeId}/comments (post) - Summary turned from Add a comment to Create a comment","method":"post","previousSummary":"Add a comment","currentSummary":"Create a comment"},{"ruleId":"delete-param","message":"/nodes/{nodeId}/comments (post) - Param commentBody deleted","path":"/nodes/{nodeId}/comments","method":"post","param":"commentBody"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/comments/post/responses/400/ - Description turned from If an empty **content** property is provided to Invalid parameter: **commentBodyCreate** is invalid\n","descriptionPath":"/paths//nodes/{nodeId}/comments/post/responses/400/","previousDescription":"If an empty **content** property is provided","currentDescription":"Invalid parameter: **commentBodyCreate** is invalid\n"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/comments/post/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//nodes/{nodeId}/comments/post/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/comments/post/responses/403/ - Description turned from If the user does not have permission to add a comment to User does not have permission to create a comment","descriptionPath":"/paths//nodes/{nodeId}/comments/post/responses/403/","previousDescription":"If the user does not have permission to add a comment","currentDescription":"User does not have permission to create a comment"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/comments/post/responses/404/ - Description turned from If **nodeId** does not exist to **nodeId** does not exist\n","descriptionPath":"/paths//nodes/{nodeId}/comments/post/responses/404/","previousDescription":"If **nodeId** does not exist","currentDescription":"**nodeId** does not exist\n"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/comments/post/responses/405/ - Description turned from If it is not possible to comment on a node of this type to Cannot comment on a node of this type","descriptionPath":"/paths//nodes/{nodeId}/comments/post/responses/405/","previousDescription":"If it is not possible to comment on a node of this type","currentDescription":"Cannot comment on a node of this type"},{"ruleId":"add-response","message":"/nodes/{nodeId}/comments (post) - Response 409 added to [object Object]","path":"/nodes/{nodeId}/comments","method":"post","responseId":"409"},{"ruleId":"delete-param","message":"/nodes/{nodeId}/comments/{commentId} (put) - Param commentBody deleted","path":"/nodes/{nodeId}/comments/{commentId}","method":"put","param":"commentBody"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/comments/{commentId}/put/responses/400/ - Description turned from If an empty **content** property is provided to Invalid parameter: **commentBodyUpdate** is invalid\n","descriptionPath":"/paths//nodes/{nodeId}/comments/{commentId}/put/responses/400/","previousDescription":"If an empty **content** property is provided","currentDescription":"Invalid parameter: **commentBodyUpdate** is invalid\n"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/comments/{commentId}/put/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//nodes/{nodeId}/comments/{commentId}/put/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/comments/{commentId}/put/responses/403/ - Description turned from If the user does not have permission to update a comment to User does not have permission to update a comment","descriptionPath":"/paths//nodes/{nodeId}/comments/{commentId}/put/responses/403/","previousDescription":"If the user does not have permission to update a comment","currentDescription":"User does not have permission to update a comment"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/comments/{commentId}/put/responses/404/ - Description turned from If **nodeId** or **commentId** does not exist to **nodeId** or **commentId** does not exist\n","descriptionPath":"/paths//nodes/{nodeId}/comments/{commentId}/put/responses/404/","previousDescription":"If **nodeId** or **commentId** does not exist","currentDescription":"**nodeId** or **commentId** does not exist\n"},{"ruleId":"add-response","message":"/nodes/{nodeId}/comments/{commentId} (put) - Response 409 added to [object Object]","path":"/nodes/{nodeId}/comments/{commentId}","method":"put","responseId":"409"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/comments/{commentId}/delete/ - Description turned from Removes the comment **commentId** from node **nodeId**. to Deletes the comment **commentId** from node **nodeId**.","descriptionPath":"/paths//nodes/{nodeId}/comments/{commentId}/delete/","previousDescription":"Removes the comment **commentId** from node **nodeId**.","currentDescription":"Deletes the comment **commentId** from node **nodeId**."},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/comments/{commentId}/delete/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//nodes/{nodeId}/comments/{commentId}/delete/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/comments/{commentId}/delete/responses/403/ - Description turned from If the user does not have permission to delete a comment to User does not have permission to delete a comment","descriptionPath":"/paths//nodes/{nodeId}/comments/{commentId}/delete/responses/403/","previousDescription":"If the user does not have permission to delete a comment","currentDescription":"User does not have permission to delete a comment"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/comments/{commentId}/delete/responses/404/ - Description turned from If **nodeId** or **commentId** does not exist to **nodeId** or **commentId** does not exist\n","descriptionPath":"/paths//nodes/{nodeId}/comments/{commentId}/delete/responses/404/","previousDescription":"If **nodeId** or **commentId** does not exist","currentDescription":"**nodeId** or **commentId** does not exist\n"},{"ruleId":"add-response","message":"/nodes/{nodeId}/comments/{commentId} (delete) - Response 409 added to [object Object]","path":"/nodes/{nodeId}/comments/{commentId}","method":"delete","responseId":"409"},{"ruleId":"edit-summary","message":"/nodes/{nodeId}/ratings (get) - Summary turned from Get ratings to List ratings","method":"get","previousSummary":"Get ratings","currentSummary":"List ratings"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/ratings/get/ - Description turned from Get the ratings for node **nodeId**. to Gets a list of ratings for node **nodeId**.","descriptionPath":"/paths//nodes/{nodeId}/ratings/get/","previousDescription":"Get the ratings for node **nodeId**.","currentDescription":"Gets a list of ratings for node **nodeId**."},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/ratings/get/responses/400/ - Description turned from If an invalid value is provided for the **maxItems** or **skipCount** parameter to Invalid parameter: value of **maxItems** or **skipCount** is invalid\n","descriptionPath":"/paths//nodes/{nodeId}/ratings/get/responses/400/","previousDescription":"If an invalid value is provided for the **maxItems** or **skipCount** parameter","currentDescription":"Invalid parameter: value of **maxItems** or **skipCount** is invalid\n"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/ratings/get/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//nodes/{nodeId}/ratings/get/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/ratings/get/responses/404/ - Description turned from If **nodeId** does not exist to **nodeId** does not exist\n","descriptionPath":"/paths//nodes/{nodeId}/ratings/get/responses/404/","previousDescription":"If **nodeId** does not exist","currentDescription":"**nodeId** does not exist\n"},{"ruleId":"edit-summary","message":"/nodes/{nodeId}/ratings (post) - Summary turned from Rate to Create a rating","method":"post","previousSummary":"Rate","currentSummary":"Create a rating"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/ratings/post/ - Description turned from Rate the node with identifier **nodeId** to Create a rating for the node with identifier **nodeId**","descriptionPath":"/paths//nodes/{nodeId}/ratings/post/","previousDescription":"Rate the node with identifier **nodeId**","currentDescription":"Create a rating for the node with identifier **nodeId**"},{"ruleId":"delete-param","message":"/nodes/{nodeId}/ratings (post) - Param ratingBody deleted","path":"/nodes/{nodeId}/ratings","method":"post","param":"ratingBody"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/ratings/post/responses/400/ - Description turned from If an unknown rating scheme is supplied to Invalid parameter: **ratingBodyCreate** is invalid\n","descriptionPath":"/paths//nodes/{nodeId}/ratings/post/responses/400/","previousDescription":"If an unknown rating scheme is supplied","currentDescription":"Invalid parameter: **ratingBodyCreate** is invalid\n"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/ratings/post/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//nodes/{nodeId}/ratings/post/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/ratings/post/responses/404/ - Description turned from If **nodeId** does not exist to **nodeId** does not exist\n","descriptionPath":"/paths//nodes/{nodeId}/ratings/post/responses/404/","previousDescription":"If **nodeId** does not exist","currentDescription":"**nodeId** does not exist\n"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/ratings/post/responses/405/ - Description turned from If is not possible to rate a node of this type to Cannot rate a node of this type","descriptionPath":"/paths//nodes/{nodeId}/ratings/post/responses/405/","previousDescription":"If is not possible to rate a node of this type","currentDescription":"Cannot rate a node of this type"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/ratings/{ratingId}/get/responses/400/ - Description turned from If an unknown rating scheme  **ratingId** is supplied to Invalid parameter: unknown rating scheme specified\n","descriptionPath":"/paths//nodes/{nodeId}/ratings/{ratingId}/get/responses/400/","previousDescription":"If an unknown rating scheme  **ratingId** is supplied","currentDescription":"Invalid parameter: unknown rating scheme specified\n"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/ratings/{ratingId}/get/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//nodes/{nodeId}/ratings/{ratingId}/get/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/ratings/{ratingId}/get/responses/404/ - Description turned from If **nodeId** does not exist to **nodeId** does not exist\n","descriptionPath":"/paths//nodes/{nodeId}/ratings/{ratingId}/get/responses/404/","previousDescription":"If **nodeId** does not exist","currentDescription":"**nodeId** does not exist\n"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/ratings/{ratingId}/delete/ - Description turned from Removes rating **ratingId** from node **nodeId**. to Deletes rating **ratingId** from node **nodeId**.","descriptionPath":"/paths//nodes/{nodeId}/ratings/{ratingId}/delete/","previousDescription":"Removes rating **ratingId** from node **nodeId**.","currentDescription":"Deletes rating **ratingId** from node **nodeId**."},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/ratings/{ratingId}/delete/responses/400/ - Description turned from If an unknown rating scheme **ratingId** is supplied to Invalid parameter: unknown rating scheme specified\n","descriptionPath":"/paths//nodes/{nodeId}/ratings/{ratingId}/delete/responses/400/","previousDescription":"If an unknown rating scheme **ratingId** is supplied","currentDescription":"Invalid parameter: unknown rating scheme specified\n"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/ratings/{ratingId}/delete/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//nodes/{nodeId}/ratings/{ratingId}/delete/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/ratings/{ratingId}/delete/responses/404/ - Description turned from If **nodeId** does not exist to **nodeId** does not exist\n","descriptionPath":"/paths//nodes/{nodeId}/ratings/{ratingId}/delete/responses/404/","previousDescription":"If **nodeId** does not exist","currentDescription":"**nodeId** does not exist\n"},{"ruleId":"edit-summary","message":"/nodes/{nodeId}/tags (get) - Summary turned from Get tags to List tags for a node","method":"get","previousSummary":"Get tags","currentSummary":"List tags for a node"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/tags/get/ - Description turned from Returns a list of tags for node **nodeId**. to Gets a list of tags for node **nodeId**.","descriptionPath":"/paths//nodes/{nodeId}/tags/get/","previousDescription":"Returns a list of tags for node **nodeId**.","currentDescription":"Gets a list of tags for node **nodeId**."},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/tags/get/responses/400/ - Description turned from If an invalid value is provided for the **maxItems** or **skipCount** parameter to Invalid parameter: value of **maxItems** or **skipCount** is invalid\n","descriptionPath":"/paths//nodes/{nodeId}/tags/get/responses/400/","previousDescription":"If an invalid value is provided for the **maxItems** or **skipCount** parameter","currentDescription":"Invalid parameter: value of **maxItems** or **skipCount** is invalid\n"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/tags/get/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//nodes/{nodeId}/tags/get/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/tags/get/responses/403/ - Description turned from If the user does not have permission to read tags on the node to User does not have permission to read tags on the node","descriptionPath":"/paths//nodes/{nodeId}/tags/get/responses/403/","previousDescription":"If the user does not have permission to read tags on the node","currentDescription":"User does not have permission to read tags on the node"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/tags/get/responses/404/ - Description turned from If **nodeId** does not exist to **nodeId** does not exist\n","descriptionPath":"/paths//nodes/{nodeId}/tags/get/responses/404/","previousDescription":"If **nodeId** does not exist","currentDescription":"**nodeId** does not exist\n"},{"ruleId":"edit-summary","message":"/nodes/{nodeId}/tags (post) - Summary turned from Add a tag to Create a tag for a node","method":"post","previousSummary":"Add a tag","currentSummary":"Create a tag for a node"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/tags/post/ - Description turned from Adds a tag to the node **nodeId**. You specify the tag in a JSON body like this:\n\n```JSON\n{\n  \"tag\":\"test-tag-1\"\n}\n```\n\n**Note:** You can create more than one tag by \nspecifying a list of tags in the JSON body like this:\n\n```JSON\n[\n  {\n    \"tag\":\"test-tag-1\"\n  },\n  {\n    \"tag\":\"test-tag-2\"\n  }\n]\n```\nIf you specify a list as input, then a paginated list rather than an entry is returned in the response body. For example:\n\n```JSON\n{\n  \"list\": {\n    \"pagination\": {\n      \"count\": 2,\n      \"hasMoreItems\": false,\n      \"totalItems\": 2,\n      \"skipCount\": 0,\n      \"maxItems\": 100\n    },\n    \"entries\": [\n      {\n        \"entry\": {\n          ...\n        }\n      },\n      {\n        \"entry\": {\n         ...\n        }\n      }\n    ]\n  }\n}\n```\n to Creates a tag on the node **nodeId**. You specify the tag in a JSON body like this:\n\n```JSON\n{\n  \"tag\":\"test-tag-1\"\n}\n```\n\n**Note:** You can create more than one tag by \nspecifying a list of tags in the JSON body like this:\n\n```JSON\n[\n  {\n    \"tag\":\"test-tag-1\"\n  },\n  {\n    \"tag\":\"test-tag-2\"\n  }\n]\n```\nIf you specify a list as input, then a paginated list rather than an entry is returned in the response body. For example:\n\n```JSON\n{\n  \"list\": {\n    \"pagination\": {\n      \"count\": 2,\n      \"hasMoreItems\": false,\n      \"totalItems\": 2,\n      \"skipCount\": 0,\n      \"maxItems\": 100\n    },\n    \"entries\": [\n      {\n        \"entry\": {\n          ...\n        }\n      },\n      {\n        \"entry\": {\n         ...\n        }\n      }\n    ]\n  }\n}\n```\n","descriptionPath":"/paths//nodes/{nodeId}/tags/post/","previousDescription":"Adds a tag to the node **nodeId**. You specify the tag in a JSON body like this:\n\n```JSON\n{\n  \"tag\":\"test-tag-1\"\n}\n```\n\n**Note:** You can create more than one tag by \nspecifying a list of tags in the JSON body like this:\n\n```JSON\n[\n  {\n    \"tag\":\"test-tag-1\"\n  },\n  {\n    \"tag\":\"test-tag-2\"\n  }\n]\n```\nIf you specify a list as input, then a paginated list rather than an entry is returned in the response body. For example:\n\n```JSON\n{\n  \"list\": {\n    \"pagination\": {\n      \"count\": 2,\n      \"hasMoreItems\": false,\n      \"totalItems\": 2,\n      \"skipCount\": 0,\n      \"maxItems\": 100\n    },\n    \"entries\": [\n      {\n        \"entry\": {\n          ...\n        }\n      },\n      {\n        \"entry\": {\n         ...\n        }\n      }\n    ]\n  }\n}\n```\n","currentDescription":"Creates a tag on the node **nodeId**. You specify the tag in a JSON body like this:\n\n```JSON\n{\n  \"tag\":\"test-tag-1\"\n}\n```\n\n**Note:** You can create more than one tag by \nspecifying a list of tags in the JSON body like this:\n\n```JSON\n[\n  {\n    \"tag\":\"test-tag-1\"\n  },\n  {\n    \"tag\":\"test-tag-2\"\n  }\n]\n```\nIf you specify a list as input, then a paginated list rather than an entry is returned in the response body. For example:\n\n```JSON\n{\n  \"list\": {\n    \"pagination\": {\n      \"count\": 2,\n      \"hasMoreItems\": false,\n      \"totalItems\": 2,\n      \"skipCount\": 0,\n      \"maxItems\": 100\n    },\n    \"entries\": [\n      {\n        \"entry\": {\n          ...\n        }\n      },\n      {\n        \"entry\": {\n         ...\n        }\n      }\n    ]\n  }\n}\n```\n"},{"ruleId":"delete-param","message":"/nodes/{nodeId}/tags (post) - Param tagBody deleted","path":"/nodes/{nodeId}/tags","method":"post","param":"tagBody"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/tags/post/responses/400/ - Description turned from If an empty **tag** property is provided to Invalid parameter: **tagBodyCreate** is invalid\n","descriptionPath":"/paths//nodes/{nodeId}/tags/post/responses/400/","previousDescription":"If an empty **tag** property is provided","currentDescription":"Invalid parameter: **tagBodyCreate** is invalid\n"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/tags/post/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//nodes/{nodeId}/tags/post/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/tags/post/responses/403/ - Description turned from If the user does not have permission to add tags on the node to User does not have permission to create tags on the node","descriptionPath":"/paths//nodes/{nodeId}/tags/post/responses/403/","previousDescription":"If the user does not have permission to add tags on the node","currentDescription":"User does not have permission to create tags on the node"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/tags/post/responses/404/ - Description turned from If **nodeId** does not exist to **nodeId** does not exist       \n","descriptionPath":"/paths//nodes/{nodeId}/tags/post/responses/404/","previousDescription":"If **nodeId** does not exist","currentDescription":"**nodeId** does not exist       \n"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/tags/post/responses/405/ - Description turned from If not possible to tag a node of this type to Cannot tag a node of this type","descriptionPath":"/paths//nodes/{nodeId}/tags/post/responses/405/","previousDescription":"If not possible to tag a node of this type","currentDescription":"Cannot tag a node of this type"},{"ruleId":"edit-summary","message":"/nodes/{nodeId}/tags/{tagId} (delete) - Summary turned from Delete a tag to Delete a tag from a node","method":"delete","previousSummary":"Delete a tag","currentSummary":"Delete a tag from a node"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/tags/{tagId}/delete/ - Description turned from Removes tag **tagId** from node **nodeId**. to Deletes tag **tagId** from node **nodeId**.","descriptionPath":"/paths//nodes/{nodeId}/tags/{tagId}/delete/","previousDescription":"Removes tag **tagId** from node **nodeId**.","currentDescription":"Deletes tag **tagId** from node **nodeId**."},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/tags/{tagId}/delete/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//nodes/{nodeId}/tags/{tagId}/delete/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/tags/{tagId}/delete/responses/403/ - Description turned from If the user does not have permission to delete the tag to User does not have permission to delete the tag","descriptionPath":"/paths//nodes/{nodeId}/tags/{tagId}/delete/responses/403/","previousDescription":"If the user does not have permission to delete the tag","currentDescription":"User does not have permission to delete the tag"},{"ruleId":"edit-description","message":"/paths//nodes/{nodeId}/tags/{tagId}/delete/responses/404/ - Description turned from If **nodeId** or **tagId** does not exist to **nodeId** or **tagId** does not exist\n","descriptionPath":"/paths//nodes/{nodeId}/tags/{tagId}/delete/responses/404/","previousDescription":"If **nodeId** or **tagId** does not exist","currentDescription":"**nodeId** or **tagId** does not exist\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/get/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//people/{personId}/get/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//people/{personId}/get/responses/404/ - Description turned from If **personId** does not exist to **personId** does not exist\n","descriptionPath":"/paths//people/{personId}/get/responses/404/","previousDescription":"If **personId** does not exist","currentDescription":"**personId** does not exist\n"},{"ruleId":"add-method","message":"/people/{personId} (put) - Method added","path":"/people/{personId}","method":"put"},{"ruleId":"edit-summary","message":"/people/{personId}/activities (get) - Summary turned from Get activities to List activities","method":"get","previousSummary":"Get activities","currentSummary":"List activities"},{"ruleId":"edit-description","message":"/paths//people/{personId}/activities/get/ - Description turned from Returns a list of activities for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n to Gets a list of activities for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","descriptionPath":"/paths//people/{personId}/activities/get/","previousDescription":"Returns a list of activities for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","currentDescription":"Gets a list of activities for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/activities/get/parameters/who/ - Description turned from A filter to include the user's activities only `me`, other users' activities only `others`'\n to A filter to include the user's activities only `me`, other user's activities only `others`'\n","descriptionPath":"/paths//people/{personId}/activities/get/parameters/who/","previousDescription":"A filter to include the user's activities only `me`, other users' activities only `others`'\n","currentDescription":"A filter to include the user's activities only `me`, other user's activities only `others`'\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/activities/get/responses/400/ - Description turned from If an invalid value is provided for the **maxItems**, **skipCount** or **who** parameter to Invalid parameter: value of **maxItems**, **skipCount**, or **who** is invalid\n","descriptionPath":"/paths//people/{personId}/activities/get/responses/400/","previousDescription":"If an invalid value is provided for the **maxItems**, **skipCount** or **who** parameter","currentDescription":"Invalid parameter: value of **maxItems**, **skipCount**, or **who** is invalid\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/activities/get/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//people/{personId}/activities/get/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//people/{personId}/activities/get/responses/403/ - Description turned from If the currently authenticated user does not have access to the activities for **personId** to Current user does not have access to the activities for **personId**","descriptionPath":"/paths//people/{personId}/activities/get/responses/403/","previousDescription":"If the currently authenticated user does not have access to the activities for **personId**","currentDescription":"Current user does not have access to the activities for **personId**"},{"ruleId":"edit-description","message":"/paths//people/{personId}/activities/get/responses/404/ - Description turned from If **personId** or **siteId** does not exist to **personId** or **siteId** does not exist\n","descriptionPath":"/paths//people/{personId}/activities/get/responses/404/","previousDescription":"If **personId** or **siteId** does not exist","currentDescription":"**personId** or **siteId** does not exist\n"},{"ruleId":"edit-summary","message":"/people/{personId}/favorite-sites (get) - Summary turned from Get favorite sites to List favorite sites","method":"get","previousSummary":"Get favorite sites","currentSummary":"List favorite sites"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorite-sites/get/ - Description turned from Get a person's favorite sites.\n\n**Please note that this method is deprecated and will be removed in the future**.\nUse `/people/{personId}/favorites` instead.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n to **Note:** this endpoint is deprecated as of Alfresco 4.2, and will be removed in the future.\nUse `/people/{personId}/favorites` instead.\n\nGets a list of a person's favorite sites.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","descriptionPath":"/paths//people/{personId}/favorite-sites/get/","previousDescription":"Get a person's favorite sites.\n\n**Please note that this method is deprecated and will be removed in the future**.\nUse `/people/{personId}/favorites` instead.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","currentDescription":"**Note:** this endpoint is deprecated as of Alfresco 4.2, and will be removed in the future.\nUse `/people/{personId}/favorites` instead.\n\nGets a list of a person's favorite sites.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorite-sites/get/responses/400/ - Description turned from If an invalid value is provided for the **maxItems** or **skipCount** parameter to Invalid parameter: value of **maxItems** or **skipCount** is invalid\n","descriptionPath":"/paths//people/{personId}/favorite-sites/get/responses/400/","previousDescription":"If an invalid value is provided for the **maxItems** or **skipCount** parameter","currentDescription":"Invalid parameter: value of **maxItems** or **skipCount** is invalid\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorite-sites/get/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//people/{personId}/favorite-sites/get/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorite-sites/get/responses/403/ - Description turned from If the currently authenticated user does not have access to the favorite sites for **personId** to Current user does not have access to the favorite sites for **personId**","descriptionPath":"/paths//people/{personId}/favorite-sites/get/responses/403/","previousDescription":"If the currently authenticated user does not have access to the favorite sites for **personId**","currentDescription":"Current user does not have access to the favorite sites for **personId**"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorite-sites/get/responses/404/ - Description turned from If **personId** does not exist to **personId** does not exist\n","descriptionPath":"/paths//people/{personId}/favorite-sites/get/responses/404/","previousDescription":"If **personId** does not exist","currentDescription":"**personId** does not exist\n"},{"ruleId":"edit-summary","message":"/people/{personId}/favorite-sites (post) - Summary turned from Favorite a site to Create a site favorite","method":"post","previousSummary":"Favorite a site","currentSummary":"Create a site favorite"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorite-sites/post/ - Description turned from Add a favorite site for person **personId**. \n  \n**Please note that this method is deprecated and will be removed in the future**.\nUse `/people/{personId}/favorites` instead.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n to **Note:** this endpoint is deprecated as of Alfresco 4.2, and will be removed in the future.\nUse `/people/{personId}/favorites` instead.\n\nCreate a site favorite for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n\n **Note:** You can favorite more than one site by \nspecifying a list of sites in the JSON body like this:\n\n```JSON\n[\n  {\n    \"id\": \"test-site-1\"\n  },\n  {\n    \"id\": \"test-site-2\"\n  }\n]\n```\nIf you specify a list as input, then a paginated list rather than an entry is returned in the response body. For example:\n\n```JSON\n{\n  \"list\": {\n    \"pagination\": {\n      \"count\": 2,\n      \"hasMoreItems\": false,\n      \"totalItems\": 2,\n      \"skipCount\": 0,\n      \"maxItems\": 100\n    },\n    \"entries\": [\n      {\n        \"entry\": {\n          ...\n        }\n      },\n      {\n        \"entry\": {\n          ...\n        }\n      }\n    ]\n  }\n}\n```\n","descriptionPath":"/paths//people/{personId}/favorite-sites/post/","previousDescription":"Add a favorite site for person **personId**. \n  \n**Please note that this method is deprecated and will be removed in the future**.\nUse `/people/{personId}/favorites` instead.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","currentDescription":"**Note:** this endpoint is deprecated as of Alfresco 4.2, and will be removed in the future.\nUse `/people/{personId}/favorites` instead.\n\nCreate a site favorite for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n\n **Note:** You can favorite more than one site by \nspecifying a list of sites in the JSON body like this:\n\n```JSON\n[\n  {\n    \"id\": \"test-site-1\"\n  },\n  {\n    \"id\": \"test-site-2\"\n  }\n]\n```\nIf you specify a list as input, then a paginated list rather than an entry is returned in the response body. For example:\n\n```JSON\n{\n  \"list\": {\n    \"pagination\": {\n      \"count\": 2,\n      \"hasMoreItems\": false,\n      \"totalItems\": 2,\n      \"skipCount\": 0,\n      \"maxItems\": 100\n    },\n    \"entries\": [\n      {\n        \"entry\": {\n          ...\n        }\n      },\n      {\n        \"entry\": {\n          ...\n        }\n      }\n    ]\n  }\n}\n```\n"},{"ruleId":"delete-param","message":"/people/{personId}/favorite-sites (post) - Param favoriteSiteBody deleted","path":"/people/{personId}/favorite-sites","method":"post","param":"favoriteSiteBody"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorite-sites/post/responses/400/ - Description turned from If an empty **id** property is provided to Invalid parameter: **favoriteSiteBodyCreate** is invalid\n","descriptionPath":"/paths//people/{personId}/favorite-sites/post/responses/400/","previousDescription":"If an empty **id** property is provided","currentDescription":"Invalid parameter: **favoriteSiteBodyCreate** is invalid\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorite-sites/post/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//people/{personId}/favorite-sites/post/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorite-sites/post/responses/403/ - Description turned from If the currently authenticated user does not have access to the favorite sites for **personId** to Current user does not have access to the favorite sites for **personId**","descriptionPath":"/paths//people/{personId}/favorite-sites/post/responses/403/","previousDescription":"If the currently authenticated user does not have access to the favorite sites for **personId**","currentDescription":"Current user does not have access to the favorite sites for **personId**"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorite-sites/post/responses/404/ - Description turned from If **personId** does not exist to **personId** does not exist\n","descriptionPath":"/paths//people/{personId}/favorite-sites/post/responses/404/","previousDescription":"If **personId** does not exist","currentDescription":"**personId** does not exist\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorite-sites/post/responses/409/ - Description turned from If **id** is already a site favorite to **id** is already a site favorite\n","descriptionPath":"/paths//people/{personId}/favorite-sites/post/responses/409/","previousDescription":"If **id** is already a site favorite","currentDescription":"**id** is already a site favorite\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorite-sites/{siteId}/get/ - Description turned from Returns information on favorite site **siteId** of person **personId**. \n\n**Please note that this method is deprecated and will be removed in the future.**\nUse `/people/{personId}/favorites/{favoriteId}` instead.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n to **Note:** this endpoint is deprecated as of Alfresco 4.2, and will be removed in the future.\nUse `/people/{personId}/favorites/{favoriteId}` instead.\n\nGets information on favorite site **siteId** of person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","descriptionPath":"/paths//people/{personId}/favorite-sites/{siteId}/get/","previousDescription":"Returns information on favorite site **siteId** of person **personId**. \n\n**Please note that this method is deprecated and will be removed in the future.**\nUse `/people/{personId}/favorites/{favoriteId}` instead.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","currentDescription":"**Note:** this endpoint is deprecated as of Alfresco 4.2, and will be removed in the future.\nUse `/people/{personId}/favorites/{favoriteId}` instead.\n\nGets information on favorite site **siteId** of person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorite-sites/{siteId}/get/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//people/{personId}/favorite-sites/{siteId}/get/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorite-sites/{siteId}/get/responses/403/ - Description turned from If the currently authenticated user does not have access to the favorite sites for **personId** to Current user does not have access to the favorite sites for **personId**","descriptionPath":"/paths//people/{personId}/favorite-sites/{siteId}/get/responses/403/","previousDescription":"If the currently authenticated user does not have access to the favorite sites for **personId**","currentDescription":"Current user does not have access to the favorite sites for **personId**"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorite-sites/{siteId}/get/responses/404/ - Description turned from If **personId** or **siteId** does not exist to **personId** or **siteId** does not exist\n","descriptionPath":"/paths//people/{personId}/favorite-sites/{siteId}/get/responses/404/","previousDescription":"If **personId** or **siteId** does not exist","currentDescription":"**personId** or **siteId** does not exist\n"},{"ruleId":"edit-summary","message":"/people/{personId}/favorite-sites/{siteId} (delete) - Summary turned from Delete favorite site to Delete a site favorite","method":"delete","previousSummary":"Delete favorite site","currentSummary":"Delete a site favorite"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorite-sites/{siteId}/delete/ - Description turned from Removes site **siteId** from the favorite site list of person **personId**.\n\n**Please note that this method is deprecated and will be removed in the future.**\nUse `/people/{personId}/favorites/{favoriteId}` instead.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n to **Note:** this endpoint is deprecated as of Alfresco 4.2, and will be removed in the future.\nUse `/people/{personId}/favorites/{favoriteId}` instead.\n\nDeletes site **siteId** from the favorite site list of person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","descriptionPath":"/paths//people/{personId}/favorite-sites/{siteId}/delete/","previousDescription":"Removes site **siteId** from the favorite site list of person **personId**.\n\n**Please note that this method is deprecated and will be removed in the future.**\nUse `/people/{personId}/favorites/{favoriteId}` instead.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","currentDescription":"**Note:** this endpoint is deprecated as of Alfresco 4.2, and will be removed in the future.\nUse `/people/{personId}/favorites/{favoriteId}` instead.\n\nDeletes site **siteId** from the favorite site list of person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorite-sites/{siteId}/delete/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//people/{personId}/favorite-sites/{siteId}/delete/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorite-sites/{siteId}/delete/responses/403/ - Description turned from If the currently authenticated user does not have access to the favorite sites for **personId** to Current user does not have access to the favorite sites for **personId**","descriptionPath":"/paths//people/{personId}/favorite-sites/{siteId}/delete/responses/403/","previousDescription":"If the currently authenticated user does not have access to the favorite sites for **personId**","currentDescription":"Current user does not have access to the favorite sites for **personId**"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorite-sites/{siteId}/delete/responses/404/ - Description turned from If **personId** or **siteId** does not exist to **personId** or **siteId** does not exist\n","descriptionPath":"/paths//people/{personId}/favorite-sites/{siteId}/delete/responses/404/","previousDescription":"If **personId** or **siteId** does not exist","currentDescription":"**personId** or **siteId** does not exist\n"},{"ruleId":"edit-summary","message":"/people/{personId}/favorites (get) - Summary turned from Get favorites to List favorites","method":"get","previousSummary":"Get favorites","currentSummary":"List favorites"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorites/get/ - Description turned from Returns a list of favorites for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n\nYou can use the **where** parameter to restrict the list in the response\nto entries of a specific kind. The **where** parameter takes a value.\nThe value is a single predicate that can include one or more **EXISTS** \nconditions. The **EXISTS** condition uses a single operand to limit the\nlist to include entries that include that one property. The property values are:-\n\n*   `target/file`\n*   `target/folder`\n*   `target/site`\n\nFor example, the following **where** parameter restricts the returned list to the file favorites for a person:\n\n```SQL\n(EXISTS(target/file))\n```\nYou can specify more than one condition using **OR**. The predicate must be enclosed in parentheses.\n\n\nFor example, the following **where** parameter restricts the returned list to the file and folder favorites for a person:\n\n```SQL\n(EXISTS(target/file) OR EXISTS(target/folder))\n```\n to Gets a list of favorites for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n\nYou can use the **where** parameter to restrict the list in the response\nto entries of a specific kind. The **where** parameter takes a value.\nThe value is a single predicate that can include one or more **EXISTS**\nconditions. The **EXISTS** condition uses a single operand to limit the\nlist to include entries that include that one property. The property values are:\n\n*   `target/file`\n*   `target/folder`\n*   `target/site`\n\nFor example, the following **where** parameter restricts the returned list to the file favorites for a person:\n\n```SQL\n(EXISTS(target/file))\n```\nYou can specify more than one condition using **OR**. The predicate must be enclosed in parentheses.\n\n\nFor example, the following **where** parameter restricts the returned list to the file and folder favorites for a person:\n\n```SQL\n(EXISTS(target/file) OR EXISTS(target/folder))\n```\n","descriptionPath":"/paths//people/{personId}/favorites/get/","previousDescription":"Returns a list of favorites for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n\nYou can use the **where** parameter to restrict the list in the response\nto entries of a specific kind. The **where** parameter takes a value.\nThe value is a single predicate that can include one or more **EXISTS** \nconditions. The **EXISTS** condition uses a single operand to limit the\nlist to include entries that include that one property. The property values are:-\n\n*   `target/file`\n*   `target/folder`\n*   `target/site`\n\nFor example, the following **where** parameter restricts the returned list to the file favorites for a person:\n\n```SQL\n(EXISTS(target/file))\n```\nYou can specify more than one condition using **OR**. The predicate must be enclosed in parentheses.\n\n\nFor example, the following **where** parameter restricts the returned list to the file and folder favorites for a person:\n\n```SQL\n(EXISTS(target/file) OR EXISTS(target/folder))\n```\n","currentDescription":"Gets a list of favorites for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n\nYou can use the **where** parameter to restrict the list in the response\nto entries of a specific kind. The **where** parameter takes a value.\nThe value is a single predicate that can include one or more **EXISTS**\nconditions. The **EXISTS** condition uses a single operand to limit the\nlist to include entries that include that one property. The property values are:\n\n*   `target/file`\n*   `target/folder`\n*   `target/site`\n\nFor example, the following **where** parameter restricts the returned list to the file favorites for a person:\n\n```SQL\n(EXISTS(target/file))\n```\nYou can specify more than one condition using **OR**. The predicate must be enclosed in parentheses.\n\n\nFor example, the following **where** parameter restricts the returned list to the file and folder favorites for a person:\n\n```SQL\n(EXISTS(target/file) OR EXISTS(target/folder))\n```\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorites/get/responses/400/ - Description turned from If an invalid value is provided for the **maxItems**, **skipCount** or **where** parameter to Invalid parameter: value of **maxItems**, **skipCount**, or **where** is invalid\n","descriptionPath":"/paths//people/{personId}/favorites/get/responses/400/","previousDescription":"If an invalid value is provided for the **maxItems**, **skipCount** or **where** parameter","currentDescription":"Invalid parameter: value of **maxItems**, **skipCount**, or **where** is invalid\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorites/get/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//people/{personId}/favorites/get/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorites/get/responses/404/ - Description turned from If **personId** does not exist, or the current user does not have permission to access the favorites of **personId** to **personId** does not exist or the current user does not have permission to access the favorites of **personId**\n","descriptionPath":"/paths//people/{personId}/favorites/get/responses/404/","previousDescription":"If **personId** does not exist, or the current user does not have permission to access the favorites of **personId**","currentDescription":"**personId** does not exist or the current user does not have permission to access the favorites of **personId**\n"},{"ruleId":"edit-summary","message":"/people/{personId}/favorites (post) - Summary turned from Add a favorite to Create a favorite","method":"post","previousSummary":"Add a favorite","currentSummary":"Create a favorite"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorites/post/ - Description turned from Favorite a **site**, **file**, or **folder** in the repository.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n to Favorite a **site**, **file**, or **folder** in the repository.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n\n**Note:** You can favorite more than one entity by \nspecifying a list of objects in the JSON body like this:\n\n```JSON\n[\n  {\n       \"target\": {\n          \"file\": {\n             \"guid\": \"abcde-01234-....\"\n          }\n       }\n   },\n   {\n       \"target\": {\n          \"file\": {\n             \"guid\": \"abcde-09863-....\"\n          }\n       }\n   },\n]\n```\nIf you specify a list as input, then a paginated list rather than an entry is returned in the response body. For example:\n\n```JSON\n{\n  \"list\": {\n    \"pagination\": {\n      \"count\": 2,\n      \"hasMoreItems\": false,\n      \"totalItems\": 2,\n      \"skipCount\": 0,\n      \"maxItems\": 100\n    },\n    \"entries\": [\n      {\n        \"entry\": {\n          ...\n        }\n      },\n      {\n        \"entry\": {\n          ...\n        }\n      }\n    ]\n  }\n}\n```\n","descriptionPath":"/paths//people/{personId}/favorites/post/","previousDescription":"Favorite a **site**, **file**, or **folder** in the repository.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","currentDescription":"Favorite a **site**, **file**, or **folder** in the repository.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n\n**Note:** You can favorite more than one entity by \nspecifying a list of objects in the JSON body like this:\n\n```JSON\n[\n  {\n       \"target\": {\n          \"file\": {\n             \"guid\": \"abcde-01234-....\"\n          }\n       }\n   },\n   {\n       \"target\": {\n          \"file\": {\n             \"guid\": \"abcde-09863-....\"\n          }\n       }\n   },\n]\n```\nIf you specify a list as input, then a paginated list rather than an entry is returned in the response body. For example:\n\n```JSON\n{\n  \"list\": {\n    \"pagination\": {\n      \"count\": 2,\n      \"hasMoreItems\": false,\n      \"totalItems\": 2,\n      \"skipCount\": 0,\n      \"maxItems\": 100\n    },\n    \"entries\": [\n      {\n        \"entry\": {\n          ...\n        }\n      },\n      {\n        \"entry\": {\n          ...\n        }\n      }\n    ]\n  }\n}\n```\n"},{"ruleId":"delete-param","message":"/people/{personId}/favorites (post) - Param favoriteBody deleted","path":"/people/{personId}/favorites","method":"post","param":"favoriteBody"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorites/post/responses/400/ - Description turned from The target **guid** does not describe a site, file, or folder to Invalid parameter: **favoriteBodyCreate** invalid\n","descriptionPath":"/paths//people/{personId}/favorites/post/responses/400/","previousDescription":"The target **guid** does not describe a site, file, or folder","currentDescription":"Invalid parameter: **favoriteBodyCreate** invalid\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorites/post/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//people/{personId}/favorites/post/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorites/post/responses/404/ - Description turned from If **personId** does not exist, or the target entity does not exist, \nor a favorite already exists with the specified id, or an \nentity does exist with the id of the posted object, \nbut is not of the same type of the posted object\n to **personId** does not exist, or the target entity does not exist,\nor a favorite already exists with the specified id, or an\nentity exists with the id of the posted object\nbut is not of the same type of the posted object\n","descriptionPath":"/paths//people/{personId}/favorites/post/responses/404/","previousDescription":"If **personId** does not exist, or the target entity does not exist, \nor a favorite already exists with the specified id, or an \nentity does exist with the id of the posted object, \nbut is not of the same type of the posted object\n","currentDescription":"**personId** does not exist, or the target entity does not exist,\nor a favorite already exists with the specified id, or an\nentity exists with the id of the posted object\nbut is not of the same type of the posted object\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorites/{favoriteId}/get/ - Description turned from Returns favorite **favoriteId** for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n to Gets favorite **favoriteId** for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","descriptionPath":"/paths//people/{personId}/favorites/{favoriteId}/get/","previousDescription":"Returns favorite **favoriteId** for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","currentDescription":"Gets favorite **favoriteId** for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorites/{favoriteId}/get/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//people/{personId}/favorites/{favoriteId}/get/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorites/{favoriteId}/get/responses/404/ - Description turned from If **personId** or **favoriteId** does not exist\n to **personId** or **favoriteId** does not exist\n","descriptionPath":"/paths//people/{personId}/favorites/{favoriteId}/get/responses/404/","previousDescription":"If **personId** or **favoriteId** does not exist\n","currentDescription":"**personId** or **favoriteId** does not exist\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorites/{favoriteId}/delete/ - Description turned from Removes **favoriteId** as a favorite of person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n to Deletes **favoriteId** as a favorite of person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","descriptionPath":"/paths//people/{personId}/favorites/{favoriteId}/delete/","previousDescription":"Removes **favoriteId** as a favorite of person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","currentDescription":"Deletes **favoriteId** as a favorite of person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorites/{favoriteId}/delete/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//people/{personId}/favorites/{favoriteId}/delete/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//people/{personId}/favorites/{favoriteId}/delete/responses/404/ - Description turned from If **personId** or **favoriteId** does not exist\n to **personId** or **favoriteId** does not exist\n","descriptionPath":"/paths//people/{personId}/favorites/{favoriteId}/delete/responses/404/","previousDescription":"If **personId** or **favoriteId** does not exist\n","currentDescription":"**personId** or **favoriteId** does not exist\n"},{"ruleId":"edit-summary","message":"/people/{personId}/networks (get) - Summary turned from Get network membership to List network membership","method":"get","previousSummary":"Get network membership","currentSummary":"List network membership"},{"ruleId":"edit-description","message":"/paths//people/{personId}/networks/get/responses/400/ - Description turned from If an invalid value is provided for the **maxItems** or **skipCount** parameter to Invalid parameter: value of **maxItems** or **skipCount** is invalid\n","descriptionPath":"/paths//people/{personId}/networks/get/responses/400/","previousDescription":"If an invalid value is provided for the **maxItems** or **skipCount** parameter","currentDescription":"Invalid parameter: value of **maxItems** or **skipCount** is invalid\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/networks/get/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//people/{personId}/networks/get/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//people/{personId}/networks/get/responses/404/ - Description turned from If **personId** does not exist to **personId** does not exist\n","descriptionPath":"/paths//people/{personId}/networks/get/responses/404/","previousDescription":"If **personId** does not exist","currentDescription":"**personId** does not exist\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/networks/{networkId}/get/ - Description turned from Returns network information on a single network specified by **networkId** for **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n to Gets network information on a single network specified by **networkId** for **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","descriptionPath":"/paths//people/{personId}/networks/{networkId}/get/","previousDescription":"Returns network information on a single network specified by **networkId** for **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","currentDescription":"Gets network information on a single network specified by **networkId** for **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/networks/{networkId}/get/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//people/{personId}/networks/{networkId}/get/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//people/{personId}/networks/{networkId}/get/responses/404/ - Description turned from If **personId** or **networkId** does not exist to **personId** or **networkId** does not exist\n","descriptionPath":"/paths//people/{personId}/networks/{networkId}/get/responses/404/","previousDescription":"If **personId** or **networkId** does not exist","currentDescription":"**personId** or **networkId** does not exist\n"},{"ruleId":"edit-summary","message":"/people/{personId}/preferences (get) - Summary turned from Get preferences to List preferences","method":"get","previousSummary":"Get preferences","currentSummary":"List preferences"},{"ruleId":"edit-description","message":"/paths//people/{personId}/preferences/get/ - Description turned from Returns a list of preferences for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n\nNote that each preference consists of an **id** and a **value**. \nThe **value** can be of any JSON type.\n to Gets a list of preferences for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\nNote that each preference consists of an **id** and a **value**. \n\nThe **value** can be of any JSON type.\n","descriptionPath":"/paths//people/{personId}/preferences/get/","previousDescription":"Returns a list of preferences for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n\nNote that each preference consists of an **id** and a **value**. \nThe **value** can be of any JSON type.\n","currentDescription":"Gets a list of preferences for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\nNote that each preference consists of an **id** and a **value**. \n\nThe **value** can be of any JSON type.\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/preferences/get/responses/400/ - Description turned from If an invalid value is provided for the **maxItems** or **skipCount** parameter to Invalid parameter: value of **maxItems** or **skipCount** is invalid\n","descriptionPath":"/paths//people/{personId}/preferences/get/responses/400/","previousDescription":"If an invalid value is provided for the **maxItems** or **skipCount** parameter","currentDescription":"Invalid parameter: value of **maxItems** or **skipCount** is invalid\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/preferences/get/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//people/{personId}/preferences/get/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//people/{personId}/preferences/get/responses/403/ - Description turned from If the currently authenticated user does not have access to the preferences for **personId** to Current user does not have access to the preferences for **personId**","descriptionPath":"/paths//people/{personId}/preferences/get/responses/403/","previousDescription":"If the currently authenticated user does not have access to the preferences for **personId**","currentDescription":"Current user does not have access to the preferences for **personId**"},{"ruleId":"edit-description","message":"/paths//people/{personId}/preferences/get/responses/404/ - Description turned from If **personId** does not exist to **personId** does not exist\n","descriptionPath":"/paths//people/{personId}/preferences/get/responses/404/","previousDescription":"If **personId** does not exist","currentDescription":"**personId** does not exist\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/preferences/{preferenceName}/get/ - Description turned from Returns a specific preference for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n to Gets a specific preference for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","descriptionPath":"/paths//people/{personId}/preferences/{preferenceName}/get/","previousDescription":"Returns a specific preference for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","currentDescription":"Gets a specific preference for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/preferences/{preferenceName}/get/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//people/{personId}/preferences/{preferenceName}/get/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//people/{personId}/preferences/{preferenceName}/get/responses/403/ - Description turned from If the currently authenticated user does not have access to the preferences for **personId** to Current user does not have access to the preferences for **personId**","descriptionPath":"/paths//people/{personId}/preferences/{preferenceName}/get/responses/403/","previousDescription":"If the currently authenticated user does not have access to the preferences for **personId**","currentDescription":"Current user does not have access to the preferences for **personId**"},{"ruleId":"edit-description","message":"/paths//people/{personId}/preferences/{preferenceName}/get/responses/404/ - Description turned from If **personId** or **preferenceName** does not exist to **personId** or **preferenceName** does not exist\n","descriptionPath":"/paths//people/{personId}/preferences/{preferenceName}/get/responses/404/","previousDescription":"If **personId** or **preferenceName** does not exist","currentDescription":"**personId** or **preferenceName** does not exist\n"},{"ruleId":"edit-summary","message":"/people/{personId}/site-membership-requests (get) - Summary turned from Get site membership requests to List site membership requests","method":"get","previousSummary":"Get site membership requests","currentSummary":"List site membership requests"},{"ruleId":"edit-description","message":"/paths//people/{personId}/site-membership-requests/get/ - Description turned from Returns the current site membership requests for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n to Gets a list of the current site membership requests for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","descriptionPath":"/paths//people/{personId}/site-membership-requests/get/","previousDescription":"Returns the current site membership requests for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","currentDescription":"Gets a list of the current site membership requests for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/site-membership-requests/get/responses/400/ - Description turned from If an invalid value is provided for the **maxItems** or **skipCount** parameter to Invalid parameter: value of **maxItems** or **skipCount** is invalid\n","descriptionPath":"/paths//people/{personId}/site-membership-requests/get/responses/400/","previousDescription":"If an invalid value is provided for the **maxItems** or **skipCount** parameter","currentDescription":"Invalid parameter: value of **maxItems** or **skipCount** is invalid\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/site-membership-requests/get/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//people/{personId}/site-membership-requests/get/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//people/{personId}/site-membership-requests/get/responses/404/ - Description turned from If **personId** does not exist to **personId** does not exist\n","descriptionPath":"/paths//people/{personId}/site-membership-requests/get/responses/404/","previousDescription":"If **personId** does not exist","currentDescription":"**personId** does not exist\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/site-membership-requests/post/ - Description turned from Create a site membership request for yourself on the site with the identifier of **id**, specified in the JSON body. \nThe result of the request differs depending on the type of site.\n\n* For a **public** site, you join the site immediately as a SiteConsumer.\n* For a **moderated** site, your request is added to the site membership request list. The request waits for approval from the Site Manager.\n* You cannot request membership of a **private** site. Members are invited by the site administrator.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n to Create a site membership request for yourself on the site with the identifier of **id**, specified in the JSON body. \nThe result of the request differs depending on the type of site.\n\n* For a **public** site, you join the site immediately as a SiteConsumer.\n* For a **moderated** site, your request is added to the site membership request list. The request waits for approval from the Site Manager.\n* You cannot request membership of a **private** site. Members are invited by the site administrator.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n\n **Note:** You can create site membership requests for more than one site by \nspecifying a list of sites in the JSON body like this:\n\n```JSON\n[\n  {\n    \"message\": \"Please can you add me\",\n    \"id\": \"test-site-1\",\n    \"title\": \"Request for test site 1\",\n  },\n  {\n    \"message\": \"Please can you add me\",\n    \"id\": \"test-site-2\",\n    \"title\": \"Request for test site 2\",\n  }\n]\n```\nIf you specify a list as input, then a paginated list rather than an entry is returned in the response body. For example:\n\n```JSON\n{\n  \"list\": {\n    \"pagination\": {\n      \"count\": 2,\n      \"hasMoreItems\": false,\n      \"totalItems\": 2,\n      \"skipCount\": 0,\n      \"maxItems\": 100\n    },\n    \"entries\": [\n      {\n        \"entry\": {\n          ...\n        }\n      },\n      {\n        \"entry\": {\n          ...\n        }\n      }\n    ]\n  }\n}\n```\n","descriptionPath":"/paths//people/{personId}/site-membership-requests/post/","previousDescription":"Create a site membership request for yourself on the site with the identifier of **id**, specified in the JSON body. \nThe result of the request differs depending on the type of site.\n\n* For a **public** site, you join the site immediately as a SiteConsumer.\n* For a **moderated** site, your request is added to the site membership request list. The request waits for approval from the Site Manager.\n* You cannot request membership of a **private** site. Members are invited by the site administrator.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","currentDescription":"Create a site membership request for yourself on the site with the identifier of **id**, specified in the JSON body. \nThe result of the request differs depending on the type of site.\n\n* For a **public** site, you join the site immediately as a SiteConsumer.\n* For a **moderated** site, your request is added to the site membership request list. The request waits for approval from the Site Manager.\n* You cannot request membership of a **private** site. Members are invited by the site administrator.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n\n **Note:** You can create site membership requests for more than one site by \nspecifying a list of sites in the JSON body like this:\n\n```JSON\n[\n  {\n    \"message\": \"Please can you add me\",\n    \"id\": \"test-site-1\",\n    \"title\": \"Request for test site 1\",\n  },\n  {\n    \"message\": \"Please can you add me\",\n    \"id\": \"test-site-2\",\n    \"title\": \"Request for test site 2\",\n  }\n]\n```\nIf you specify a list as input, then a paginated list rather than an entry is returned in the response body. For example:\n\n```JSON\n{\n  \"list\": {\n    \"pagination\": {\n      \"count\": 2,\n      \"hasMoreItems\": false,\n      \"totalItems\": 2,\n      \"skipCount\": 0,\n      \"maxItems\": 100\n    },\n    \"entries\": [\n      {\n        \"entry\": {\n          ...\n        }\n      },\n      {\n        \"entry\": {\n          ...\n        }\n      }\n    ]\n  }\n}\n```\n"},{"ruleId":"delete-param","message":"/people/{personId}/site-membership-requests (post) - Param siteMembershipBody deleted","path":"/people/{personId}/site-membership-requests","method":"post","param":"siteMembershipBody"},{"ruleId":"edit-description","message":"/paths//people/{personId}/site-membership-requests/post/responses/400/ - Description turned from If an invalid **id** is provided or the user is already invited to Invalid parameter: **id** is invalid, or the user is already invited,\nor **siteMembershipRequestBodyCreate** invalid\n","descriptionPath":"/paths//people/{personId}/site-membership-requests/post/responses/400/","previousDescription":"If an invalid **id** is provided or the user is already invited","currentDescription":"Invalid parameter: **id** is invalid, or the user is already invited,\nor **siteMembershipRequestBodyCreate** invalid\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/site-membership-requests/post/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//people/{personId}/site-membership-requests/post/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//people/{personId}/site-membership-requests/post/responses/404/ - Description turned from If **personId** or **id** does not exist to **personId** or **id** does not exist\n","descriptionPath":"/paths//people/{personId}/site-membership-requests/post/responses/404/","previousDescription":"If **personId** or **id** does not exist","currentDescription":"**personId** or **id** does not exist\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/site-membership-requests/{siteId}/get/ - Description turned from Returns the site membership request for site **siteId** for person **personId**, if one exists.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n to Gets the site membership request for site **siteId** for person **personId**, if one exists.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","descriptionPath":"/paths//people/{personId}/site-membership-requests/{siteId}/get/","previousDescription":"Returns the site membership request for site **siteId** for person **personId**, if one exists.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","currentDescription":"Gets the site membership request for site **siteId** for person **personId**, if one exists.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/site-membership-requests/{siteId}/get/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//people/{personId}/site-membership-requests/{siteId}/get/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//people/{personId}/site-membership-requests/{siteId}/get/responses/404/ - Description turned from If **personId** or **siteId** does not exist to **personId** or **siteId** does not exist\n","descriptionPath":"/paths//people/{personId}/site-membership-requests/{siteId}/get/responses/404/","previousDescription":"If **personId** or **siteId** does not exist","currentDescription":"**personId** or **siteId** does not exist\n"},{"ruleId":"delete-param","message":"/people/{personId}/site-membership-requests/{siteId} (put) - Param siteMembershipBody deleted","path":"/people/{personId}/site-membership-requests/{siteId}","method":"put","param":"siteMembershipBody"},{"ruleId":"edit-description","message":"/paths//people/{personId}/site-membership-requests/{siteId}/put/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//people/{personId}/site-membership-requests/{siteId}/put/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//people/{personId}/site-membership-requests/{siteId}/put/responses/404/ - Description turned from If **personId** or **siteId** does not exist to **personId** or **siteId** does not exist\n","descriptionPath":"/paths//people/{personId}/site-membership-requests/{siteId}/put/responses/404/","previousDescription":"If **personId** or **siteId** does not exist","currentDescription":"**personId** or **siteId** does not exist\n"},{"ruleId":"add-response","message":"/people/{personId}/site-membership-requests/{siteId} (put) - Response 400 added to [object Object]","path":"/people/{personId}/site-membership-requests/{siteId}","method":"put","responseId":"400"},{"ruleId":"edit-summary","message":"/people/{personId}/site-membership-requests/{siteId} (delete) - Summary turned from Cancel a site membership to Delete a site membership request","method":"delete","previousSummary":"Cancel a site membership","currentSummary":"Delete a site membership request"},{"ruleId":"edit-description","message":"/paths//people/{personId}/site-membership-requests/{siteId}/delete/ - Description turned from Cancels the site membership request to site **siteId** for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n to Deletes the site membership request to site **siteId** for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","descriptionPath":"/paths//people/{personId}/site-membership-requests/{siteId}/delete/","previousDescription":"Cancels the site membership request to site **siteId** for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","currentDescription":"Deletes the site membership request to site **siteId** for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/site-membership-requests/{siteId}/delete/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//people/{personId}/site-membership-requests/{siteId}/delete/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//people/{personId}/site-membership-requests/{siteId}/delete/responses/404/ - Description turned from If **personId** or **siteId** does not exist to **personId** or **siteId** does not exist\n","descriptionPath":"/paths//people/{personId}/site-membership-requests/{siteId}/delete/responses/404/","previousDescription":"If **personId** or **siteId** does not exist","currentDescription":"**personId** or **siteId** does not exist\n"},{"ruleId":"edit-summary","message":"/people/{personId}/sites (get) - Summary turned from Get site membership information to List site memberships","method":"get","previousSummary":"Get site membership information","currentSummary":"List site memberships"},{"ruleId":"edit-description","message":"/paths//people/{personId}/sites/get/ - Description turned from Returns a list of site membership information for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n\nYou can sort the list of sites using the **orderBy** parameter.\n\n**orderBy** specifies the name of one or more \ncomma separated properties. \nFor each property you can optionally specify the order direction. \nBoth of the these **orderBy** examples retrieve sites ordered by ascending name:\n\n```\nname\nname ASC\n```\n to Gets a list of site membership information for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n\nYou can use the **where** parameter to filter the returned sites by **visibility** or site **preset**.\n\nExample to filter by **visibility**, use any one of:\n\n```\n(visibility='PRIVATE')\n(visibility='PUBLIC')\n(visibility='MODERATED')\n```\n\nExample to filter by site **preset**:\n\n```\n(preset='site-dashboard')\n```\n\nThe default sort order for the returned list is for sites to be sorted by ascending title.\nYou can override the default by using the **orderBy** parameter. You can specify one or more of the following fields in the **orderBy** parameter:\n* id\n* title\n* role\n","descriptionPath":"/paths//people/{personId}/sites/get/","previousDescription":"Returns a list of site membership information for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n\nYou can sort the list of sites using the **orderBy** parameter.\n\n**orderBy** specifies the name of one or more \ncomma separated properties. \nFor each property you can optionally specify the order direction. \nBoth of the these **orderBy** examples retrieve sites ordered by ascending name:\n\n```\nname\nname ASC\n```\n","currentDescription":"Gets a list of site membership information for person **personId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n\nYou can use the **where** parameter to filter the returned sites by **visibility** or site **preset**.\n\nExample to filter by **visibility**, use any one of:\n\n```\n(visibility='PRIVATE')\n(visibility='PUBLIC')\n(visibility='MODERATED')\n```\n\nExample to filter by site **preset**:\n\n```\n(preset='site-dashboard')\n```\n\nThe default sort order for the returned list is for sites to be sorted by ascending title.\nYou can override the default by using the **orderBy** parameter. You can specify one or more of the following fields in the **orderBy** parameter:\n* id\n* title\n* role\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/sites/get/responses/400/ - Description turned from If an invalid value is provided for the **maxItems** or **skipCount** parameter to Invalid parameter: value of **maxItems**, **skipCount**, **orderBy**, or **where** is invalid\n","descriptionPath":"/paths//people/{personId}/sites/get/responses/400/","previousDescription":"If an invalid value is provided for the **maxItems** or **skipCount** parameter","currentDescription":"Invalid parameter: value of **maxItems**, **skipCount**, **orderBy**, or **where** is invalid\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/sites/get/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//people/{personId}/sites/get/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//people/{personId}/sites/get/responses/404/ - Description turned from If **personId** does not exist to **personId** does not exist\n","descriptionPath":"/paths//people/{personId}/sites/get/responses/404/","previousDescription":"If **personId** does not exist","currentDescription":"**personId** does not exist\n"},{"ruleId":"edit-summary","message":"/people/{personId}/sites/{siteId} (get) - Summary turned from Get site membership for a site to Get a site membership","method":"get","previousSummary":"Get site membership for a site","currentSummary":"Get a site membership"},{"ruleId":"edit-description","message":"/paths//people/{personId}/sites/{siteId}/get/ - Description turned from Returns site membership information for person **personId** on site **siteId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n to Gets site membership information for person **personId** on site **siteId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","descriptionPath":"/paths//people/{personId}/sites/{siteId}/get/","previousDescription":"Returns site membership information for person **personId** on site **siteId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","currentDescription":"Gets site membership information for person **personId** on site **siteId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/sites/{siteId}/get/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//people/{personId}/sites/{siteId}/get/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//people/{personId}/sites/{siteId}/get/responses/404/ - Description turned from If **personId** or **siteId** does not exist to **personId** or **siteId** does not exist\n","descriptionPath":"/paths//people/{personId}/sites/{siteId}/get/responses/404/","previousDescription":"If **personId** or **siteId** does not exist","currentDescription":"**personId** or **siteId** does not exist\n"},{"ruleId":"edit-summary","message":"/people/{personId}/sites/{siteId} (delete) - Summary turned from Delete a site member to Delete a site membership","method":"delete","previousSummary":"Delete a site member","currentSummary":"Delete a site membership"},{"ruleId":"edit-description","message":"/paths//people/{personId}/sites/{siteId}/delete/ - Description turned from Removes person **personId** as a member of site **siteId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n to Deletes person **personId** as a member of site **siteId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","descriptionPath":"/paths//people/{personId}/sites/{siteId}/delete/","previousDescription":"Removes person **personId** as a member of site **siteId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","currentDescription":"Deletes person **personId** as a member of site **siteId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n"},{"ruleId":"edit-description","message":"/paths//people/{personId}/sites/{siteId}/delete/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//people/{personId}/sites/{siteId}/delete/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//people/{personId}/sites/{siteId}/delete/responses/404/ - Description turned from If **personId** or **siteId** does not exist to **personId** or **siteId** does not exist\n","descriptionPath":"/paths//people/{personId}/sites/{siteId}/delete/responses/404/","previousDescription":"If **personId** or **siteId** does not exist","currentDescription":"**personId** or **siteId** does not exist\n"},{"ruleId":"edit-summary","message":"/sites (get) - Summary turned from Get sites to List sites","method":"get","previousSummary":"Get sites","currentSummary":"List sites"},{"ruleId":"edit-description","message":"/paths//sites/get/ - Description turned from Returns a list of sites in this repository. You can sort the list if sites using the **orderBy** parameter.\n**orderBy** specifies the name of one or more \ncomma separated properties. \nFor each property you can optionally specify the order direction. \nBoth of the these **orderBy** examples retrieve sites ordered by ascending name:\n\n```\nname\nname ASC\n```\n\nYou can use the **relations** parameter to include one or more related\nentities in a single response and so reduce network traffic.\n\nThe entity types in Alfresco are organized in a tree structure.\nThe **sites** entity has two children, **containers** and **members**. \nThe following relations parameter returns all the container and member \nobjects related to each site:\n\n```\ncontainers,members\n```\n to Gets a list of sites in this repository.\n\nYou can use the **where** parameter to filter the returned sites by **visibility** or site **preset**.\n\nExample to filter by **visibility**, use any one of:\n\n```\n(visibility='PRIVATE')\n(visibility='PUBLIC')\n(visibility='MODERATED')\n```\n\nExample to filter by site **preset**:\n\n```\n(preset='site-dashboard')\n```\n\nThe default sort order for the returned list is for sites to be sorted by ascending title.\nYou can override the default by using the **orderBy** parameter. You can specify one or more of the following fields in the **orderBy** parameter:\n* id\n* title\n* description\n\nYou can use the **relations** parameter to include one or more related\nentities in a single response and so reduce network traffic.\n\nThe entity types in Alfresco are organized in a tree structure.\nThe **sites** entity has two children, **containers** and **members**.\nThe following relations parameter returns all the container and member\nobjects related to each site:\n\n```\ncontainers,members\n```\n","descriptionPath":"/paths//sites/get/","previousDescription":"Returns a list of sites in this repository. You can sort the list if sites using the **orderBy** parameter.\n**orderBy** specifies the name of one or more \ncomma separated properties. \nFor each property you can optionally specify the order direction. \nBoth of the these **orderBy** examples retrieve sites ordered by ascending name:\n\n```\nname\nname ASC\n```\n\nYou can use the **relations** parameter to include one or more related\nentities in a single response and so reduce network traffic.\n\nThe entity types in Alfresco are organized in a tree structure.\nThe **sites** entity has two children, **containers** and **members**. \nThe following relations parameter returns all the container and member \nobjects related to each site:\n\n```\ncontainers,members\n```\n","currentDescription":"Gets a list of sites in this repository.\n\nYou can use the **where** parameter to filter the returned sites by **visibility** or site **preset**.\n\nExample to filter by **visibility**, use any one of:\n\n```\n(visibility='PRIVATE')\n(visibility='PUBLIC')\n(visibility='MODERATED')\n```\n\nExample to filter by site **preset**:\n\n```\n(preset='site-dashboard')\n```\n\nThe default sort order for the returned list is for sites to be sorted by ascending title.\nYou can override the default by using the **orderBy** parameter. You can specify one or more of the following fields in the **orderBy** parameter:\n* id\n* title\n* description\n\nYou can use the **relations** parameter to include one or more related\nentities in a single response and so reduce network traffic.\n\nThe entity types in Alfresco are organized in a tree structure.\nThe **sites** entity has two children, **containers** and **members**.\nThe following relations parameter returns all the container and member\nobjects related to each site:\n\n```\ncontainers,members\n```\n"},{"ruleId":"edit-description","message":"/paths//sites/get/responses/400/ - Description turned from If an invalid value is provided for the **maxItems** or **skipCount** parameter to Invalid parameter: value of **maxItems**, **skipCount**, **orderBy**, or **where** is invalid\n","descriptionPath":"/paths//sites/get/responses/400/","previousDescription":"If an invalid value is provided for the **maxItems** or **skipCount** parameter","currentDescription":"Invalid parameter: value of **maxItems**, **skipCount**, **orderBy**, or **where** is invalid\n"},{"ruleId":"edit-description","message":"/paths//sites/get/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//sites/get/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"add-method","message":"/sites (post) - Method added","path":"/sites","method":"post"},{"ruleId":"edit-description","message":"/paths//sites/{siteId}/get/ - Description turned from Returns information for site **siteId**.\n\nYou can use the **relations** parameter to include one or more related\nentities in a single response and so reduce network traffic.\n\nThe entity types in Alfresco are organized in a tree structure.\nThe **sites** entity has two children, **containers** and **members**. \nThe following relations parameter returns all the container and member \nobjects related to the site **siteId**:\n\n```\ncontainers,members\n```\n to Gets information for site **siteId**.\n\nYou can use the **relations** parameter to include one or more related\nentities in a single response and so reduce network traffic.\n\nThe entity types in Alfresco are organized in a tree structure.\nThe **sites** entity has two children, **containers** and **members**.\nThe following relations parameter returns all the container and member\nobjects related to the site **siteId**:\n\n```\ncontainers,members\n```\n","descriptionPath":"/paths//sites/{siteId}/get/","previousDescription":"Returns information for site **siteId**.\n\nYou can use the **relations** parameter to include one or more related\nentities in a single response and so reduce network traffic.\n\nThe entity types in Alfresco are organized in a tree structure.\nThe **sites** entity has two children, **containers** and **members**. \nThe following relations parameter returns all the container and member \nobjects related to the site **siteId**:\n\n```\ncontainers,members\n```\n","currentDescription":"Gets information for site **siteId**.\n\nYou can use the **relations** parameter to include one or more related\nentities in a single response and so reduce network traffic.\n\nThe entity types in Alfresco are organized in a tree structure.\nThe **sites** entity has two children, **containers** and **members**.\nThe following relations parameter returns all the container and member\nobjects related to the site **siteId**:\n\n```\ncontainers,members\n```\n"},{"ruleId":"edit-description","message":"/paths//sites/{siteId}/get/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//sites/{siteId}/get/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//sites/{siteId}/get/responses/404/ - Description turned from If **siteId** does not exist to **siteId** does not exist\n","descriptionPath":"/paths//sites/{siteId}/get/responses/404/","previousDescription":"If **siteId** does not exist","currentDescription":"**siteId** does not exist\n"},{"ruleId":"add-method","message":"/sites/{siteId} (put) - Method added","path":"/sites/{siteId}","method":"put"},{"ruleId":"add-method","message":"/sites/{siteId} (delete) - Method added","path":"/sites/{siteId}","method":"delete"},{"ruleId":"edit-summary","message":"/sites/{siteId}/containers (get) - Summary turned from Get containers to List site containers","method":"get","previousSummary":"Get containers","currentSummary":"List site containers"},{"ruleId":"edit-description","message":"/paths//sites/{siteId}/containers/get/ - Description turned from Returns a list of containers information for site identified by **siteId**. to Gets a list of containers for the site **siteId**.","descriptionPath":"/paths//sites/{siteId}/containers/get/","previousDescription":"Returns a list of containers information for site identified by **siteId**.","currentDescription":"Gets a list of containers for the site **siteId**."},{"ruleId":"edit-description","message":"/paths//sites/{siteId}/containers/get/responses/400/ - Description turned from If an invalid value is provided for the **maxItems** or **skipCount** parameter to Invalid parameter: value of **maxItems** or **skipCount** is invalid\n","descriptionPath":"/paths//sites/{siteId}/containers/get/responses/400/","previousDescription":"If an invalid value is provided for the **maxItems** or **skipCount** parameter","currentDescription":"Invalid parameter: value of **maxItems** or **skipCount** is invalid\n"},{"ruleId":"edit-description","message":"/paths//sites/{siteId}/containers/get/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//sites/{siteId}/containers/get/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//sites/{siteId}/containers/get/responses/404/ - Description turned from If **siteId** does not exist to **siteId** does not exist\n","descriptionPath":"/paths//sites/{siteId}/containers/get/responses/404/","previousDescription":"If **siteId** does not exist","currentDescription":"**siteId** does not exist\n"},{"ruleId":"edit-summary","message":"/sites/{siteId}/containers/{containerId} (get) - Summary turned from Get a container to Get a site container","method":"get","previousSummary":"Get a container","currentSummary":"Get a site container"},{"ruleId":"edit-description","message":"/paths//sites/{siteId}/containers/{containerId}/get/ - Description turned from Returns information on the container **containerId** in site **siteId**. to Gets information on the container **containerId** in site **siteId**.","descriptionPath":"/paths//sites/{siteId}/containers/{containerId}/get/","previousDescription":"Returns information on the container **containerId** in site **siteId**.","currentDescription":"Gets information on the container **containerId** in site **siteId**."},{"ruleId":"edit-description","message":"/paths//sites/{siteId}/containers/{containerId}/get/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//sites/{siteId}/containers/{containerId}/get/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//sites/{siteId}/containers/{containerId}/get/responses/404/ - Description turned from If **siteId** or **containerId** does not exist to **siteId** or **containerId** does not exist\n","descriptionPath":"/paths//sites/{siteId}/containers/{containerId}/get/responses/404/","previousDescription":"If **siteId** or **containerId** does not exist","currentDescription":"**siteId** or **containerId** does not exist\n"},{"ruleId":"edit-summary","message":"/sites/{siteId}/members (get) - Summary turned from Get members to List site memberships","method":"get","previousSummary":"Get members","currentSummary":"List site memberships"},{"ruleId":"edit-description","message":"/paths//sites/{siteId}/members/get/ - Description turned from Returns a list of site memberships for site **siteId**. to Gets a list of site memberships for site **siteId**.","descriptionPath":"/paths//sites/{siteId}/members/get/","previousDescription":"Returns a list of site memberships for site **siteId**.","currentDescription":"Gets a list of site memberships for site **siteId**."},{"ruleId":"edit-description","message":"/paths//sites/{siteId}/members/get/responses/400/ - Description turned from If an invalid value is provided for the **maxItems** or **skipCount** parameter to Invalid parameter: value of **maxItems** or **skipCount** is invalid\n","descriptionPath":"/paths//sites/{siteId}/members/get/responses/400/","previousDescription":"If an invalid value is provided for the **maxItems** or **skipCount** parameter","currentDescription":"Invalid parameter: value of **maxItems** or **skipCount** is invalid\n"},{"ruleId":"edit-description","message":"/paths//sites/{siteId}/members/get/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//sites/{siteId}/members/get/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//sites/{siteId}/members/get/responses/404/ - Description turned from If **siteId** does not exist to **siteId** does not exist\n","descriptionPath":"/paths//sites/{siteId}/members/get/responses/404/","previousDescription":"If **siteId** does not exist","currentDescription":"**siteId** does not exist\n"},{"ruleId":"edit-summary","message":"/sites/{siteId}/members (post) - Summary turned from Add a person to Create a site membership","method":"post","previousSummary":"Add a person","currentSummary":"Create a site membership"},{"ruleId":"edit-description","message":"/paths//sites/{siteId}/members/post/ - Description turned from Adds person **personId** as a member of site **siteId**.\n\nYou can set the **role** to one of four types:\n\n* SiteConsumer\n* SiteCollaborator\n* SiteContributor\n* SiteManager\n to Creates a site membership for person **personId** on site **siteId**.\n\nYou can set the **role** to one of four types:\n\n* SiteConsumer\n* SiteCollaborator\n* SiteContributor\n* SiteManager\n\n**Note:** You can create more than one site membership by \nspecifying a list of people in the JSON body like this:\n\n```JSON\n[\n  {\n    \"role\": \"SiteConsumer\",\n    \"id\": \"joe\"\n  },\n  {\n    \"role\": \"SiteConsumer\",\n    \"id\": \"fred\"\n  }\n]\n```\nIf you specify a list as input, then a paginated list rather than an entry is returned in the response body. For example:\n\n```JSON\n{\n  \"list\": {\n    \"pagination\": {\n      \"count\": 2,\n      \"hasMoreItems\": false,\n      \"totalItems\": 2,\n      \"skipCount\": 0,\n      \"maxItems\": 100\n    },\n    \"entries\": [\n      {\n        \"entry\": {\n          ...\n        }\n      },\n      {\n        \"entry\": {\n          ...\n        }\n      }\n    ]\n  }\n}\n```\n","descriptionPath":"/paths//sites/{siteId}/members/post/","previousDescription":"Adds person **personId** as a member of site **siteId**.\n\nYou can set the **role** to one of four types:\n\n* SiteConsumer\n* SiteCollaborator\n* SiteContributor\n* SiteManager\n","currentDescription":"Creates a site membership for person **personId** on site **siteId**.\n\nYou can set the **role** to one of four types:\n\n* SiteConsumer\n* SiteCollaborator\n* SiteContributor\n* SiteManager\n\n**Note:** You can create more than one site membership by \nspecifying a list of people in the JSON body like this:\n\n```JSON\n[\n  {\n    \"role\": \"SiteConsumer\",\n    \"id\": \"joe\"\n  },\n  {\n    \"role\": \"SiteConsumer\",\n    \"id\": \"fred\"\n  }\n]\n```\nIf you specify a list as input, then a paginated list rather than an entry is returned in the response body. For example:\n\n```JSON\n{\n  \"list\": {\n    \"pagination\": {\n      \"count\": 2,\n      \"hasMoreItems\": false,\n      \"totalItems\": 2,\n      \"skipCount\": 0,\n      \"maxItems\": 100\n    },\n    \"entries\": [\n      {\n        \"entry\": {\n          ...\n        }\n      },\n      {\n        \"entry\": {\n          ...\n        }\n      }\n    ]\n  }\n}\n```\n"},{"ruleId":"delete-param","message":"/sites/{siteId}/members (post) - Param siteMemberBody deleted","path":"/sites/{siteId}/members","method":"post","param":"siteMemberBody"},{"ruleId":"edit-description","message":"/paths//sites/{siteId}/members/post/responses/400/ - Description turned from If an invalid **role** or **id** property is provided to Invalid parameter: value of **role** or **id** is invalid\nor **siteMembershipBodyCreate** invalid\n","descriptionPath":"/paths//sites/{siteId}/members/post/responses/400/","previousDescription":"If an invalid **role** or **id** property is provided","currentDescription":"Invalid parameter: value of **role** or **id** is invalid\nor **siteMembershipBodyCreate** invalid\n"},{"ruleId":"edit-description","message":"/paths//sites/{siteId}/members/post/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//sites/{siteId}/members/post/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//sites/{siteId}/members/post/responses/403/ - Description turned from If the user does not have permission to invite a person to User does not have permission to invite a person","descriptionPath":"/paths//sites/{siteId}/members/post/responses/403/","previousDescription":"If the user does not have permission to invite a person","currentDescription":"User does not have permission to invite a person"},{"ruleId":"edit-description","message":"/paths//sites/{siteId}/members/post/responses/404/ - Description turned from If **siteId** or **personId** does not exist to **siteId** or **personId** does not exist\n","descriptionPath":"/paths//sites/{siteId}/members/post/responses/404/","previousDescription":"If **siteId** or **personId** does not exist","currentDescription":"**siteId** or **personId** does not exist\n"},{"ruleId":"edit-description","message":"/paths//sites/{siteId}/members/post/responses/409/ - Description turned from If the person with this **id** is already a member to Person with this **id** is already a member","descriptionPath":"/paths//sites/{siteId}/members/post/responses/409/","previousDescription":"If the person with this **id** is already a member","currentDescription":"Person with this **id** is already a member"},{"ruleId":"edit-summary","message":"/sites/{siteId}/members/{personId} (get) - Summary turned from Get a site member to Get a site membership","method":"get","previousSummary":"Get a site member","currentSummary":"Get a site membership"},{"ruleId":"edit-description","message":"/paths//sites/{siteId}/members/{personId}/get/ - Description turned from Returns site membership information for person **personId** on site **siteId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n to Gets site membership information for person **personId** on site **siteId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","descriptionPath":"/paths//sites/{siteId}/members/{personId}/get/","previousDescription":"Returns site membership information for person **personId** on site **siteId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","currentDescription":"Gets site membership information for person **personId** on site **siteId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n"},{"ruleId":"edit-description","message":"/paths//sites/{siteId}/members/{personId}/get/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//sites/{siteId}/members/{personId}/get/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//sites/{siteId}/members/{personId}/get/responses/404/ - Description turned from If **siteId** or **personId** does not exist to **siteId** or **personId** does not exist\n","descriptionPath":"/paths//sites/{siteId}/members/{personId}/get/responses/404/","previousDescription":"If **siteId** or **personId** does not exist","currentDescription":"**siteId** or **personId** does not exist\n"},{"ruleId":"edit-summary","message":"/sites/{siteId}/members/{personId} (put) - Summary turned from Update a site member to Update a site membership","method":"put","previousSummary":"Update a site member","currentSummary":"Update a site membership"},{"ruleId":"delete-param","message":"/sites/{siteId}/members/{personId} (put) - Param siteMemberRoleBody deleted","path":"/sites/{siteId}/members/{personId}","method":"put","param":"siteMemberRoleBody"},{"ruleId":"edit-description","message":"/paths//sites/{siteId}/members/{personId}/put/responses/400/ - Description turned from If the **role** does not exist to Invalid parameter: **role** does not exist\nor **siteMembershipBodyUpdate** invalid\n","descriptionPath":"/paths//sites/{siteId}/members/{personId}/put/responses/400/","previousDescription":"If the **role** does not exist","currentDescription":"Invalid parameter: **role** does not exist\nor **siteMembershipBodyUpdate** invalid\n"},{"ruleId":"edit-description","message":"/paths//sites/{siteId}/members/{personId}/put/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//sites/{siteId}/members/{personId}/put/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//sites/{siteId}/members/{personId}/put/responses/404/ - Description turned from If **siteId** or **personId** does not exist to **siteId** or **personId** does not exist\n","descriptionPath":"/paths//sites/{siteId}/members/{personId}/put/responses/404/","previousDescription":"If **siteId** or **personId** does not exist","currentDescription":"**siteId** or **personId** does not exist\n"},{"ruleId":"add-response","message":"/sites/{siteId}/members/{personId} (put) - Response 422 added to [object Object]","path":"/sites/{siteId}/members/{personId}","method":"put","responseId":"422"},{"ruleId":"edit-summary","message":"/sites/{siteId}/members/{personId} (delete) - Summary turned from Delete a site member to Delete a site membership","method":"delete","previousSummary":"Delete a site member","currentSummary":"Delete a site membership"},{"ruleId":"edit-description","message":"/paths//sites/{siteId}/members/{personId}/delete/ - Description turned from Removes person **personId** as a member of site **siteId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n to Deletes person **personId** as a member of site **siteId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","descriptionPath":"/paths//sites/{siteId}/members/{personId}/delete/","previousDescription":"Removes person **personId** as a member of site **siteId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n","currentDescription":"Deletes person **personId** as a member of site **siteId**.\n\nYou can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.\n"},{"ruleId":"edit-description","message":"/paths//sites/{siteId}/members/{personId}/delete/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//sites/{siteId}/members/{personId}/delete/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//sites/{siteId}/members/{personId}/delete/responses/404/ - Description turned from If **personId** or **siteId** does not exist to **siteId** or **personId** does not exist\n","descriptionPath":"/paths//sites/{siteId}/members/{personId}/delete/responses/404/","previousDescription":"If **personId** or **siteId** does not exist","currentDescription":"**siteId** or **personId** does not exist\n"},{"ruleId":"add-response","message":"/sites/{siteId}/members/{personId} (delete) - Response 422 added to [object Object]","path":"/sites/{siteId}/members/{personId}","method":"delete","responseId":"422"},{"ruleId":"edit-summary","message":"/tags (get) - Summary turned from Get tags to List tags","method":"get","previousSummary":"Get tags","currentSummary":"List tags"},{"ruleId":"edit-description","message":"/paths//tags/get/ - Description turned from Returns a list of tags in this repository. to Gets a list of tags in this repository.\n\nYou can use the **include** parameter to return additional **values** information.\n","descriptionPath":"/paths//tags/get/","previousDescription":"Returns a list of tags in this repository.","currentDescription":"Gets a list of tags in this repository.\n\nYou can use the **include** parameter to return additional **values** information.\n"},{"ruleId":"edit-description","message":"/paths//tags/get/responses/400/ - Description turned from If an invalid value is provided for the **maxItems** or **skipCount** parameter to Invalid parameter: value of **maxItems** or **skipCount** is invalid\n","descriptionPath":"/paths//tags/get/responses/400/","previousDescription":"If an invalid value is provided for the **maxItems** or **skipCount** parameter","currentDescription":"Invalid parameter: value of **maxItems** or **skipCount** is invalid\n"},{"ruleId":"edit-description","message":"/paths//tags/get/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//tags/get/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//tags/{tagId}/get/ - Description turned from Return a specific tag with **tagId**. to Get a specific tag with **tagId**.","descriptionPath":"/paths//tags/{tagId}/get/","previousDescription":"Return a specific tag with **tagId**.","currentDescription":"Get a specific tag with **tagId**."},{"ruleId":"edit-description","message":"/paths//tags/{tagId}/get/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//tags/{tagId}/get/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//tags/{tagId}/get/responses/404/ - Description turned from If **tagId** does not exist to **tagId** does not exist\n","descriptionPath":"/paths//tags/{tagId}/get/responses/404/","previousDescription":"If **tagId** does not exist","currentDescription":"**tagId** does not exist\n"},{"ruleId":"delete-param","message":"/tags/{tagId} (put) - Param tagBody deleted","path":"/tags/{tagId}","method":"put","param":"tagBody"},{"ruleId":"edit-description","message":"/paths//tags/{tagId}/put/responses/400/ - Description turned from If an empty **tag** is provided to Invalid parameter: **tagBodyUpdate** is invalid\n","descriptionPath":"/paths//tags/{tagId}/put/responses/400/","previousDescription":"If an empty **tag** is provided","currentDescription":"Invalid parameter: **tagBodyUpdate** is invalid\n"},{"ruleId":"edit-description","message":"/paths//tags/{tagId}/put/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//tags/{tagId}/put/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//tags/{tagId}/put/responses/404/ - Description turned from If **tagId** does not exist to **tagId** does not exist\n","descriptionPath":"/paths//tags/{tagId}/put/responses/404/","previousDescription":"If **tagId** does not exist","currentDescription":"**tagId** does not exist\n"},{"ruleId":"edit-description","message":"/paths//networks/{networkId}/get/ - Description turned from Returns information for a network **networkId**. to Gets information for a network **networkId**.","descriptionPath":"/paths//networks/{networkId}/get/","previousDescription":"Returns information for a network **networkId**.","currentDescription":"Gets information for a network **networkId**."},{"ruleId":"edit-description","message":"/paths//networks/{networkId}/get/responses/401/ - Description turned from If authentication fails to Authentication failed","descriptionPath":"/paths//networks/{networkId}/get/responses/401/","previousDescription":"If authentication fails","currentDescription":"Authentication failed"},{"ruleId":"edit-description","message":"/paths//networks/{networkId}/get/responses/404/ - Description turned from If **networkId** does not exist to **networkId** does not exist\n","descriptionPath":"/paths//networks/{networkId}/get/responses/404/","previousDescription":"If **networkId** does not exist","currentDescription":"**networkId** does not exist\n"},{"ruleId":"add-path","message":"/nodes/{nodeId} - Added","path":"/nodes/{nodeId}"},{"ruleId":"add-path","message":"/nodes/{nodeId}/children - Added","path":"/nodes/{nodeId}/children"},{"ruleId":"add-path","message":"/nodes/{nodeId}/copy - Added","path":"/nodes/{nodeId}/copy"},{"ruleId":"add-path","message":"/nodes/{nodeId}/lock - Added","path":"/nodes/{nodeId}/lock"},{"ruleId":"add-path","message":"/nodes/{nodeId}/unlock - Added","path":"/nodes/{nodeId}/unlock"},{"ruleId":"add-path","message":"/nodes/{nodeId}/move - Added","path":"/nodes/{nodeId}/move"},{"ruleId":"add-path","message":"/nodes/{nodeId}/content - Added","path":"/nodes/{nodeId}/content"},{"ruleId":"add-path","message":"/nodes/{nodeId}/renditions - Added","path":"/nodes/{nodeId}/renditions"},{"ruleId":"add-path","message":"/nodes/{nodeId}/renditions/{renditionId} - Added","path":"/nodes/{nodeId}/renditions/{renditionId}"},{"ruleId":"add-path","message":"/nodes/{nodeId}/renditions/{renditionId}/content - Added","path":"/nodes/{nodeId}/renditions/{renditionId}/content"},{"ruleId":"add-path","message":"/nodes/{nodeId}/secondary-children - Added","path":"/nodes/{nodeId}/secondary-children"},{"ruleId":"add-path","message":"/nodes/{nodeId}/secondary-children/{childId} - Added","path":"/nodes/{nodeId}/secondary-children/{childId}"},{"ruleId":"add-path","message":"/nodes/{nodeId}/parents - Added","path":"/nodes/{nodeId}/parents"},{"ruleId":"add-path","message":"/nodes/{nodeId}/targets - Added","path":"/nodes/{nodeId}/targets"},{"ruleId":"add-path","message":"/nodes/{nodeId}/targets/{targetId} - Added","path":"/nodes/{nodeId}/targets/{targetId}"},{"ruleId":"add-path","message":"/nodes/{nodeId}/sources - Added","path":"/nodes/{nodeId}/sources"},{"ruleId":"add-path","message":"/nodes/{nodeId}/versions - Added","path":"/nodes/{nodeId}/versions"},{"ruleId":"add-path","message":"/nodes/{nodeId}/versions/{versionId} - Added","path":"/nodes/{nodeId}/versions/{versionId}"},{"ruleId":"add-path","message":"/nodes/{nodeId}/versions/{versionId}/content - Added","path":"/nodes/{nodeId}/versions/{versionId}/content"},{"ruleId":"add-path","message":"/nodes/{nodeId}/versions/{versionId}/revert - Added","path":"/nodes/{nodeId}/versions/{versionId}/revert"},{"ruleId":"add-path","message":"/nodes/{nodeId}/action-definitions - Added","path":"/nodes/{nodeId}/action-definitions"},{"ruleId":"add-path","message":"/deleted-nodes - Added","path":"/deleted-nodes"},{"ruleId":"add-path","message":"/deleted-nodes/{nodeId} - Added","path":"/deleted-nodes/{nodeId}"},{"ruleId":"add-path","message":"/deleted-nodes/{nodeId}/content - Added","path":"/deleted-nodes/{nodeId}/content"},{"ruleId":"add-path","message":"/deleted-nodes/{nodeId}/restore - Added","path":"/deleted-nodes/{nodeId}/restore"},{"ruleId":"add-path","message":"/deleted-nodes/{nodeId}/renditions - Added","path":"/deleted-nodes/{nodeId}/renditions"},{"ruleId":"add-path","message":"/deleted-nodes/{nodeId}/renditions/{renditionId} - Added","path":"/deleted-nodes/{nodeId}/renditions/{renditionId}"},{"ruleId":"add-path","message":"/deleted-nodes/{nodeId}/renditions/{renditionId}/content - Added","path":"/deleted-nodes/{nodeId}/renditions/{renditionId}/content"},{"ruleId":"add-path","message":"/downloads - Added","path":"/downloads"},{"ruleId":"add-path","message":"/downloads/{downloadId} - Added","path":"/downloads/{downloadId}"},{"ruleId":"add-path","message":"/people - Added","path":"/people"},{"ruleId":"add-path","message":"/people/{personId}/groups - Added","path":"/people/{personId}/groups"},{"ruleId":"add-path","message":"/people/{personId}/request-password-reset - Added","path":"/people/{personId}/request-password-reset"},{"ruleId":"add-path","message":"/people/{personId}/reset-password - Added","path":"/people/{personId}/reset-password"},{"ruleId":"add-path","message":"/people/{personId}/avatar - Added","path":"/people/{personId}/avatar"},{"ruleId":"add-path","message":"/site-membership-requests - Added","path":"/site-membership-requests"},{"ruleId":"add-path","message":"/sites/{siteId}/site-membership-requests/{inviteeId}/approve - Added","path":"/sites/{siteId}/site-membership-requests/{inviteeId}/approve"},{"ruleId":"add-path","message":"/sites/{siteId}/site-membership-requests/{inviteeId}/reject - Added","path":"/sites/{siteId}/site-membership-requests/{inviteeId}/reject"},{"ruleId":"add-path","message":"/shared-links - Added","path":"/shared-links"},{"ruleId":"add-path","message":"/shared-links/{sharedId} - Added","path":"/shared-links/{sharedId}"},{"ruleId":"add-path","message":"/shared-links/{sharedId}/content - Added","path":"/shared-links/{sharedId}/content"},{"ruleId":"add-path","message":"/shared-links/{sharedId}/renditions - Added","path":"/shared-links/{sharedId}/renditions"},{"ruleId":"add-path","message":"/shared-links/{sharedId}/renditions/{renditionId} - Added","path":"/shared-links/{sharedId}/renditions/{renditionId}"},{"ruleId":"add-path","message":"/shared-links/{sharedId}/renditions/{renditionId}/content - Added","path":"/shared-links/{sharedId}/renditions/{renditionId}/content"},{"ruleId":"add-path","message":"/shared-links/{sharedId}/email - Added","path":"/shared-links/{sharedId}/email"},{"ruleId":"add-path","message":"/queries/nodes - Added","path":"/queries/nodes"},{"ruleId":"add-path","message":"/queries/sites - Added","path":"/queries/sites"},{"ruleId":"add-path","message":"/queries/people - Added","path":"/queries/people"},{"ruleId":"add-path","message":"/groups - Added","path":"/groups"},{"ruleId":"add-path","message":"/groups/{groupId} - Added","path":"/groups/{groupId}"},{"ruleId":"add-path","message":"/groups/{groupId}/members - Added","path":"/groups/{groupId}/members"},{"ruleId":"add-path","message":"/groups/{groupId}/members/{groupMemberId} - Added","path":"/groups/{groupId}/members/{groupMemberId}"},{"ruleId":"add-path","message":"/audit-applications - Added","path":"/audit-applications"},{"ruleId":"add-path","message":"/audit-applications/{auditApplicationId} - Added","path":"/audit-applications/{auditApplicationId}"},{"ruleId":"add-path","message":"/audit-applications/{auditApplicationId}/audit-entries - Added","path":"/audit-applications/{auditApplicationId}/audit-entries"},{"ruleId":"add-path","message":"/audit-applications/{auditApplicationId}/audit-entries/{auditEntryId} - Added","path":"/audit-applications/{auditApplicationId}/audit-entries/{auditEntryId}"},{"ruleId":"add-path","message":"/nodes/{nodeId}/audit-entries - Added","path":"/nodes/{nodeId}/audit-entries"},{"ruleId":"add-path","message":"/action-definitions - Added","path":"/action-definitions"},{"ruleId":"add-path","message":"/action-definitions/{actionDefinitionId} - Added","path":"/action-definitions/{actionDefinitionId}"},{"ruleId":"add-path","message":"/action-executions - Added","path":"/action-executions"},{"ruleId":"add-optional-object-property","message":"definitions/Error/properties/error - Optional property logId added","path":"definitions/Error/properties/error","property":"logId"},{"ruleId":"edit-description","message":"/definitions/Pagination/properties/hasMoreItems/ - Description turned from A boolean value which is **true** if there are more entities in the collection \nbeyond those in this response. A true value means a request with a larger value \nfor the **skipCount** or the **maxItems** parameter will return more entities.\n to A boolean value which is **true** if there are more entities in the collection\nbeyond those in this response. A true value means a request with a larger value\nfor the **skipCount** or the **maxItems** parameter will return more entities.\n","descriptionPath":"/definitions/Pagination/properties/hasMoreItems/","previousDescription":"A boolean value which is **true** if there are more entities in the collection \nbeyond those in this response. A true value means a request with a larger value \nfor the **skipCount** or the **maxItems** parameter will return more entities.\n","currentDescription":"A boolean value which is **true** if there are more entities in the collection\nbeyond those in this response. A true value means a request with a larger value\nfor the **skipCount** or the **maxItems** parameter will return more entities.\n"},{"ruleId":"edit-description","message":"/definitions/Pagination/properties/totalItems/ - Description turned from An integer describing the total number of entities in the collection. \nThe API might not be able to determine this value, \nin which case this property will not be present.\n to An integer describing the total number of entities in the collection.\nThe API might not be able to determine this value,\nin which case this property will not be present.\n","descriptionPath":"/definitions/Pagination/properties/totalItems/","previousDescription":"An integer describing the total number of entities in the collection. \nThe API might not be able to determine this value, \nin which case this property will not be present.\n","currentDescription":"An integer describing the total number of entities in the collection.\nThe API might not be able to determine this value,\nin which case this property will not be present.\n"},{"ruleId":"edit-description","message":"/definitions/Pagination/properties/skipCount/ - Description turned from An integer describing how many entities exist in the collection before \nthose included in this list.\n to An integer describing how many entities exist in the collection before\nthose included in this list. If there was no **skipCount** parameter then the \ndefault value is 0.\n","descriptionPath":"/definitions/Pagination/properties/skipCount/","previousDescription":"An integer describing how many entities exist in the collection before \nthose included in this list.\n","currentDescription":"An integer describing how many entities exist in the collection before\nthose included in this list. If there was no **skipCount** parameter then the \ndefault value is 0.\n"},{"ruleId":"edit-description","message":"/definitions/Pagination/properties/maxItems/ - Description turned from The value of the **maxItems** parameter used to generate this list,\nor if there was no **maxItems** parameter the default value, 10\n to The value of the **maxItems** parameter used to generate this list.\nIf there was no **maxItems** parameter then the default value is 100.\n","descriptionPath":"/definitions/Pagination/properties/maxItems/","previousDescription":"The value of the **maxItems** parameter used to generate this list,\nor if there was no **maxItems** parameter the default value, 10\n","currentDescription":"The value of the **maxItems** parameter used to generate this list.\nIf there was no **maxItems** parameter then the default value is 100.\n"},{"ruleId":"add-optional-object-property","message":"definitions/Site - Optional property preset added","path":"definitions/Site","property":"preset"},{"ruleId":"add-optional-object-property","message":"definitions/Person - Optional property aspectNames added","path":"definitions/Person","property":"aspectNames"},{"ruleId":"add-optional-object-property","message":"definitions/Person - Optional property properties added","path":"definitions/Person","property":"properties"},{"ruleId":"add-optional-object-property","message":"definitions/Person - Optional property capabilities added","path":"definitions/Person","property":"capabilities"},{"ruleId":"add-definition","message":"SiteBodyCreate - Added","path":"SiteBodyCreate"},{"ruleId":"add-definition","message":"SiteBodyUpdate - Added","path":"SiteBodyUpdate"},{"ruleId":"add-definition","message":"SiteMembershipBodyCreate - Added","path":"SiteMembershipBodyCreate"},{"ruleId":"add-definition","message":"SiteMembershipBodyUpdate - Added","path":"SiteMembershipBodyUpdate"},{"ruleId":"add-definition","message":"PersonBodyCreate - Added","path":"PersonBodyCreate"},{"ruleId":"add-definition","message":"PersonBodyUpdate - Added","path":"PersonBodyUpdate"},{"ruleId":"add-definition","message":"PersonPaging - Added","path":"PersonPaging"},{"ruleId":"add-definition","message":"Capabilities - Added","path":"Capabilities"},{"ruleId":"add-definition","message":"GroupPaging - Added","path":"GroupPaging"},{"ruleId":"add-definition","message":"GroupEntry - Added","path":"GroupEntry"},{"ruleId":"add-definition","message":"Group - Added","path":"Group"},{"ruleId":"add-definition","message":"GroupMemberPaging - Added","path":"GroupMemberPaging"},{"ruleId":"add-definition","message":"GroupMemberEntry - Added","path":"GroupMemberEntry"},{"ruleId":"add-definition","message":"GroupMember - Added","path":"GroupMember"},{"ruleId":"add-definition","message":"GroupMembershipBodyCreate - Added","path":"GroupMembershipBodyCreate"},{"ruleId":"add-definition","message":"GroupBodyCreate - Added","path":"GroupBodyCreate"},{"ruleId":"add-definition","message":"GroupBodyUpdate - Added","path":"GroupBodyUpdate"},{"ruleId":"add-definition","message":"CommentBody - Added","path":"CommentBody"},{"ruleId":"add-definition","message":"TagBody - Added","path":"TagBody"},{"ruleId":"add-definition","message":"RatingBody - Added","path":"RatingBody"},{"ruleId":"add-definition","message":"FavoriteBodyCreate - Added","path":"FavoriteBodyCreate"},{"ruleId":"add-definition","message":"FavoriteSiteBodyCreate - Added","path":"FavoriteSiteBodyCreate"},{"ruleId":"add-definition","message":"FavoriteSiteEntry - Added","path":"FavoriteSiteEntry"},{"ruleId":"add-definition","message":"FavoriteSite - Added","path":"FavoriteSite"},{"ruleId":"add-definition","message":"SiteMembershipRequestBodyCreate - Added","path":"SiteMembershipRequestBodyCreate"},{"ruleId":"add-definition","message":"SiteMembershipRequestBodyUpdate - Added","path":"SiteMembershipRequestBodyUpdate"},{"ruleId":"add-definition","message":"SiteMembershipRequestWithPersonPaging - Added","path":"SiteMembershipRequestWithPersonPaging"},{"ruleId":"add-definition","message":"SiteMembershipRequestWithPersonEntry - Added","path":"SiteMembershipRequestWithPersonEntry"},{"ruleId":"add-definition","message":"SiteMembershipRequestWithPerson - Added","path":"SiteMembershipRequestWithPerson"},{"ruleId":"add-definition","message":"SiteMembershipApprovalBody - Added","path":"SiteMembershipApprovalBody"},{"ruleId":"add-definition","message":"SiteMembershipRejectionBody - Added","path":"SiteMembershipRejectionBody"},{"ruleId":"add-definition","message":"UserInfo - Added","path":"UserInfo"},{"ruleId":"add-definition","message":"ContentInfo - Added","path":"ContentInfo"},{"ruleId":"add-definition","message":"AssociationInfo - Added","path":"AssociationInfo"},{"ruleId":"add-definition","message":"AssociationBody - Added","path":"AssociationBody"},{"ruleId":"add-definition","message":"ChildAssociationInfo - Added","path":"ChildAssociationInfo"},{"ruleId":"add-definition","message":"ChildAssociationBody - Added","path":"ChildAssociationBody"},{"ruleId":"add-definition","message":"PathElement - Added","path":"PathElement"},{"ruleId":"add-definition","message":"PathInfo - Added","path":"PathInfo"},{"ruleId":"add-definition","message":"PermissionElement - Added","path":"PermissionElement"},{"ruleId":"add-definition","message":"PermissionsInfo - Added","path":"PermissionsInfo"},{"ruleId":"add-definition","message":"PermissionsBodyUpdate - Added","path":"PermissionsBodyUpdate"},{"ruleId":"add-definition","message":"NodeBodyCreate - Added","path":"NodeBodyCreate"},{"ruleId":"add-definition","message":"NodeBodyUpdate - Added","path":"NodeBodyUpdate"},{"ruleId":"add-definition","message":"NodeBodyCopy - Added","path":"NodeBodyCopy"},{"ruleId":"add-definition","message":"NodeBodyMove - Added","path":"NodeBodyMove"},{"ruleId":"add-definition","message":"NodeBodyLock - Added","path":"NodeBodyLock"},{"ruleId":"add-definition","message":"NodePaging - Added","path":"NodePaging"},{"ruleId":"add-definition","message":"NodeAssociationPaging - Added","path":"NodeAssociationPaging"},{"ruleId":"add-definition","message":"NodeChildAssociationPaging - Added","path":"NodeChildAssociationPaging"},{"ruleId":"add-definition","message":"NodeAssociationEntry - Added","path":"NodeAssociationEntry"},{"ruleId":"add-definition","message":"NodeAssociation - Added","path":"NodeAssociation"},{"ruleId":"add-definition","message":"NodeChildAssociationEntry - Added","path":"NodeChildAssociationEntry"},{"ruleId":"add-definition","message":"NodeChildAssociation - Added","path":"NodeChildAssociation"},{"ruleId":"add-definition","message":"AssociationEntry - Added","path":"AssociationEntry"},{"ruleId":"add-definition","message":"Association - Added","path":"Association"},{"ruleId":"add-definition","message":"ChildAssociationEntry - Added","path":"ChildAssociationEntry"},{"ruleId":"add-definition","message":"ChildAssociation - Added","path":"ChildAssociation"},{"ruleId":"add-definition","message":"NodeEntry - Added","path":"NodeEntry"},{"ruleId":"add-definition","message":"Node - Added","path":"Node"},{"ruleId":"add-definition","message":"SharedLinkBodyCreate - Added","path":"SharedLinkBodyCreate"},{"ruleId":"add-definition","message":"SharedLinkBodyEmail - Added","path":"SharedLinkBodyEmail"},{"ruleId":"add-definition","message":"SharedLinkPaging - Added","path":"SharedLinkPaging"},{"ruleId":"add-definition","message":"SharedLinkEntry - Added","path":"SharedLinkEntry"},{"ruleId":"add-definition","message":"SharedLink - Added","path":"SharedLink"},{"ruleId":"add-definition","message":"RenditionBodyCreate - Added","path":"RenditionBodyCreate"},{"ruleId":"add-definition","message":"RenditionEntry - Added","path":"RenditionEntry"},{"ruleId":"add-definition","message":"Rendition - Added","path":"Rendition"},{"ruleId":"add-definition","message":"RenditionPaging - Added","path":"RenditionPaging"},{"ruleId":"add-definition","message":"DeletedNodesPaging - Added","path":"DeletedNodesPaging"},{"ruleId":"add-definition","message":"DeletedNodeEntry - Added","path":"DeletedNodeEntry"},{"ruleId":"add-definition","message":"DeletedNode - Added","path":"DeletedNode"},{"ruleId":"add-definition","message":"DeletedNodeBodyRestore - Added","path":"DeletedNodeBodyRestore"},{"ruleId":"add-definition","message":"RevertBody - Added","path":"RevertBody"},{"ruleId":"add-definition","message":"VersionPaging - Added","path":"VersionPaging"},{"ruleId":"add-definition","message":"VersionEntry - Added","path":"VersionEntry"},{"ruleId":"add-definition","message":"Version - Added","path":"Version"},{"ruleId":"add-definition","message":"DownloadBodyCreate - Added","path":"DownloadBodyCreate"},{"ruleId":"add-definition","message":"DownloadEntry - Added","path":"DownloadEntry"},{"ruleId":"add-definition","message":"Download - Added","path":"Download"},{"ruleId":"add-definition","message":"ClientBody - Added","path":"ClientBody"},{"ruleId":"add-definition","message":"PasswordResetBody - Added","path":"PasswordResetBody"},{"ruleId":"add-definition","message":"AuditAppPaging - Added","path":"AuditAppPaging"},{"ruleId":"add-definition","message":"AuditAppEntry - Added","path":"AuditAppEntry"},{"ruleId":"add-definition","message":"AuditApp - Added","path":"AuditApp"},{"ruleId":"add-definition","message":"AuditBodyUpdate - Added","path":"AuditBodyUpdate"},{"ruleId":"add-definition","message":"AuditEntryPaging - Added","path":"AuditEntryPaging"},{"ruleId":"add-definition","message":"AuditEntryEntry - Added","path":"AuditEntryEntry"},{"ruleId":"add-definition","message":"AuditEntry - Added","path":"AuditEntry"},{"ruleId":"add-definition","message":"ActionDefinitionList - Added","path":"ActionDefinitionList"},{"ruleId":"add-definition","message":"ActionDefinitionEntry - Added","path":"ActionDefinitionEntry"},{"ruleId":"add-definition","message":"ActionDefinition - Added","path":"ActionDefinition"},{"ruleId":"add-definition","message":"ActionParameterDefinition - Added","path":"ActionParameterDefinition"},{"ruleId":"add-definition","message":"ActionBodyExec - Added","path":"ActionBodyExec"},{"ruleId":"add-definition","message":"ActionExecResultEntry - Added","path":"ActionExecResultEntry"},{"ruleId":"add-definition","message":"ActionExecResult - Added","path":"ActionExecResult"}],"unmatchDiffs":[{"kind":"E","path":["info","title"],"lhs":"Alfresco Core REST API","rhs":"Alfresco Content Services REST API"},{"kind":"E","path":["tags",0,"name"],"lhs":"comments","rhs":"audit"},{"kind":"D","path":["tags",0,"externalDocs"],"lhs":{"description":"Find more information on comments here","url":"http://docs.alfresco.com/5.1/pra/1/concepts/pra-nodes-comments.html"}},{"kind":"E","path":["tags",1,"name"],"lhs":"favorites","rhs":"actions"},{"kind":"D","path":["tags",1,"externalDocs"],"lhs":{"description":"Find more information on favorites here","url":"http://docs.alfresco.com/5.1/pra/1/concepts/pra-favorites.html"}},{"kind":"E","path":["tags",2,"name"],"lhs":"networks","rhs":"activities"},{"kind":"E","path":["tags",3,"name"],"lhs":"people","rhs":"comments"},{"kind":"E","path":["tags",4,"name"],"lhs":"ratings","rhs":"downloads"},{"kind":"E","path":["tags",5,"name"],"lhs":"sites","rhs":"favorites"},{"kind":"E","path":["tags",6,"name"],"lhs":"tags","rhs":"networks"},{"kind":"A","path":["tags"],"index":7,"item":{"kind":"N","rhs":{"name":"nodes","description":"Retrieve and manage nodes"}}},{"kind":"A","path":["tags"],"index":8,"item":{"kind":"N","rhs":{"name":"people","description":"Retrieve and manage people"}}},{"kind":"A","path":["tags"],"index":9,"item":{"kind":"N","rhs":{"name":"groups","description":"Retrieve and manage groups"}}},{"kind":"A","path":["tags"],"index":10,"item":{"kind":"N","rhs":{"name":"preferences","description":"Retrieve and manage preferences"}}},{"kind":"A","path":["tags"],"index":11,"item":{"kind":"N","rhs":{"name":"queries","description":"Find nodes, sites, and people using a simple search term"}}},{"kind":"A","path":["tags"],"index":12,"item":{"kind":"N","rhs":{"name":"ratings","description":"Retrieve and manage ratings"}}},{"kind":"A","path":["tags"],"index":13,"item":{"kind":"N","rhs":{"name":"renditions","description":"Retrieve and manage file renditions"}}},{"kind":"A","path":["tags"],"index":14,"item":{"kind":"N","rhs":{"name":"shared-links","description":"Retrieve and manage public shared links"}}},{"kind":"A","path":["tags"],"index":15,"item":{"kind":"N","rhs":{"name":"sites","description":"Retrieve and manage sites"}}},{"kind":"A","path":["tags"],"index":16,"item":{"kind":"N","rhs":{"name":"tags","description":"Retrieve and manage tags"}}},{"kind":"A","path":["tags"],"index":17,"item":{"kind":"N","rhs":{"name":"trashcan","description":"Retrieve and manage deleted nodes"}}},{"kind":"A","path":["tags"],"index":18,"item":{"kind":"N","rhs":{"name":"versions","description":"Retrieve and manage versions"}}},{"kind":"N","path":["parameters","skipCountParam","minimum"],"rhs":0},{"kind":"N","path":["parameters","skipCountParam","default"],"rhs":0},{"kind":"N","path":["parameters","maxItemsParam","minimum"],"rhs":1},{"kind":"N","path":["parameters","maxItemsParam","default"],"rhs":100},{"kind":"D","path":["parameters","propertiesParam"],"lhs":{"name":"properties","in":"query","description":"A list of property names. You can use the properties parameter to restrict the number of returned properties.","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"csv"}},{"kind":"E","path":["parameters","orderByParam","type"],"lhs":"string","rhs":"array"},{"kind":"N","path":["parameters","orderByParam","items"],"rhs":{"type":"string"}},{"kind":"N","path":["parameters","orderByParam","collectionFormat"],"rhs":"csv"},{"kind":"N","path":["parameters","actionDefinitionIdParam"],"rhs":{"name":"actionDefinitionId","in":"path","description":"The identifier of an action definition.","required":true,"type":"string"}},{"kind":"N","path":["parameters","nodeIdWithAliasParam"],"rhs":{"name":"nodeId","in":"path","description":"The identifier of a node. You can also use one of these well-known aliases:\n* -my-\n* -shared-\n* -root-\n","required":true,"type":"string"}},{"kind":"N","path":["parameters","nodeParentIdParam"],"rhs":{"name":"nodeId","in":"path","description":"The identifier of a parent node.","required":true,"type":"string"}},{"kind":"N","path":["parameters","nodeParentIdWithAliasParam"],"rhs":{"name":"nodeId","in":"path","description":"The identifier of a parent node. You can also use one of these well-known aliases:\n* -my-\n* -shared-\n* -root-\n","required":true,"type":"string"}},{"kind":"N","path":["parameters","nodeChildIdWithAliasParam"],"rhs":{"name":"nodeId","in":"path","description":"The identifier of a child node. You can also use one of these well-known aliases:\n* -my-\n* -shared-\n* -root-\n","required":true,"type":"string"}},{"kind":"N","path":["parameters","nodeSourceIdParam"],"rhs":{"name":"nodeId","in":"path","description":"The identifier of a source node.","required":true,"type":"string"}},{"kind":"N","path":["parameters","nodeTargetIdParam"],"rhs":{"name":"nodeId","in":"path","description":"The identifier of a target node.","required":true,"type":"string"}},{"kind":"N","path":["parameters","nodeMinimalEntryIncludeParam"],"rhs":{"name":"include","in":"query","description":"Returns additional information about the node. The following optional fields can be requested:\n* allowableOperations\n* aspectNames\n* association\n* isLink\n* isFavorite\n* isLocked\n* path\n* properties\n* permissions\n","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"csv"}},{"kind":"N","path":["parameters","nodeAssocMinimalEntryIncludeParam"],"rhs":{"name":"include","in":"query","description":"Returns additional information about the node. The following optional fields can be requested:\n* allowableOperations\n* aspectNames\n* isLink\n* isFavorite\n* isLocked\n* path\n* properties\n","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"csv"}},{"kind":"N","path":["parameters","nodeEntryIncludeParam"],"rhs":{"name":"include","in":"query","description":"Returns additional information about the node. The following optional fields can be requested:\n* allowableOperations\n* association\n* isLink\n* isFavorite\n* isLocked\n* path\n* permissions\n","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"csv"}},{"kind":"N","path":["parameters","groupEntryIncludeParam"],"rhs":{"name":"include","in":"query","description":"Returns additional information about the group. The following optional fields can be requested:\n* parentIds\n* zones\n","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"csv"}},{"kind":"N","path":["parameters","personMinimalEntryIncludeParam"],"rhs":{"name":"include","in":"query","description":"Returns additional information about the person. The following optional fields can be requested:\n* properties\n* aspectNames\n* capabilities\n","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"csv"}},{"kind":"N","path":["parameters","tagEntryIncludeParam"],"rhs":{"name":"include","in":"query","description":"Returns additional information about the tag. The following optional fields can be requested:\n* count\n","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"csv"}},{"kind":"N","path":["parameters","sharedIdParam"],"rhs":{"name":"sharedId","in":"path","description":"The identifier of a shared link to a file.","required":true,"type":"string"}},{"kind":"N","path":["parameters","sharedLinkEntryIncludeParam"],"rhs":{"name":"include","in":"query","description":"Returns additional information about the shared link, the following optional fields can be requested:\n* allowableOperations\n* path\n","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"csv"}},{"kind":"N","path":["parameters","renditionIdParam"],"rhs":{"name":"renditionId","in":"path","description":"The name of a thumbnail rendition, for example *doclib*, or *pdf*.","required":true,"type":"string"}},{"kind":"N","path":["parameters","versionIdParam"],"rhs":{"name":"versionId","in":"path","description":"The identifier of a version, ie. version label, within the version history of a node.","required":true,"type":"string"}},{"kind":"N","path":["parameters","versionMinimalEntryIncludeParam"],"rhs":{"name":"include","in":"query","description":"Returns additional information about the version node. The following optional fields can be requested:\n* properties\n* aspectNames\n","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"csv"}},{"kind":"N","path":["parameters","groupIdParam"],"rhs":{"name":"groupId","in":"path","description":"The identifier of a group.","required":true,"type":"string"}},{"kind":"N","path":["parameters","groupMemberIdParam"],"rhs":{"name":"groupMemberId","in":"path","description":"The identifier of a person or group.","required":true,"type":"string"}},{"kind":"N","path":["parameters","inviteeIdParam"],"rhs":{"name":"inviteeId","in":"path","description":"The invitee user name.","required":true,"type":"string"}},{"kind":"N","path":["parameters","fieldsParam"],"rhs":{"name":"fields","in":"query","description":"A list of field names.\n\nYou can use this parameter to restrict the fields\nreturned within a response if, for example, you want to save on overall bandwidth.\n\nThe list applies to a returned individual\nentity or entries within a collection.\n\nIf the API method also supports the **include**\nparameter, then the fields specified in the **include**\nparameter are returned in addition to those specified in the **fields** parameter.\n","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"csv"}},{"kind":"N","path":["parameters","includeSourceParam"],"rhs":{"name":"includeSource","in":"query","description":"Also include **source** (in addition to **entries**) with folder information on **nodeId**","required":false,"type":"boolean"}},{"kind":"N","path":["parameters","attachmentParam"],"rhs":{"name":"attachment","in":"query","description":"**true** enables a web browser to download the file as an attachment.\n**false** means a web browser may preview the file in a new tab or window, but not\ndownload the file.\n\nYou can only set this parameter to **false** if the content type of the file is in the supported list;\nfor example, certain image files and PDF files.\n\nIf the content type is not supported for preview, then a value of **false**  is ignored, and\nthe attachment will be returned in the response.\n","required":false,"default":true,"type":"boolean"}},{"kind":"N","path":["parameters","ifModifiedSinceHeader"],"rhs":{"name":"If-Modified-Since","in":"header","description":"Only returns the content if it has been modified since the date provided.\nUse the date format defined by HTTP. For example, `Wed, 09 Mar 2016 16:56:34 GMT`.\n","required":false,"type":"string","format":"date-time"}},{"kind":"N","path":["parameters","RangeHeader"],"rhs":{"name":"Range","in":"header","description":"The Range header indicates the part of a document that the server should return.\nSingle part request supported, for example: bytes=1-10.\n","required":false,"type":"string","format":"bytes"}},{"kind":"N","path":["parameters","downloadIdParam"],"rhs":{"name":"downloadId","in":"path","description":"The identifier of a download node.","required":true,"type":"string"}},{"kind":"N","path":["parameters","favoriteEntryIncludeParam"],"rhs":{"name":"include","in":"query","description":"Returns additional information about favorites, the following optional fields can be requested:\n* path (note, this only applies to files and folders)  \n","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"csv"}},{"kind":"N","path":["parameters","auditApplicationIdParam"],"rhs":{"name":"auditApplicationId","in":"path","description":"The identifier of an audit application.","required":true,"type":"string"}},{"kind":"N","path":["parameters","auditEntryIdParam"],"rhs":{"name":"auditEntryId","in":"path","description":"The identifier of an audit entry.","required":true,"type":"string"}},{"kind":"N","path":["parameters","auditMinimalEntryIncludeParam"],"rhs":{"name":"include","in":"query","description":"Returns additional information about the audit entry. The following optional fields can be requested:\n* values\n","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"csv"}},{"kind":"E","path":["paths","/nodes/{nodeId}/comments","get","parameters","undefined","$ref"],"lhs":"#/parameters/propertiesParam","rhs":"#/parameters/fieldsParam"},{"kind":"E","path":["paths","/nodes/{nodeId}/comments","post","parameters","undefined","$ref"],"lhs":"#/parameters/nodeIdParam","rhs":"#/parameters/fieldsParam"},{"kind":"E","path":["paths","/nodes/{nodeId}/comments/{commentId}","put","parameters","undefined","$ref"],"lhs":"#/parameters/commentIdParam","rhs":"#/parameters/fieldsParam"},{"kind":"E","path":["paths","/nodes/{nodeId}/ratings","get","parameters","undefined","$ref"],"lhs":"#/parameters/propertiesParam","rhs":"#/parameters/fieldsParam"},{"kind":"E","path":["paths","/nodes/{nodeId}/ratings","post","parameters","undefined","$ref"],"lhs":"#/parameters/nodeIdParam","rhs":"#/parameters/fieldsParam"},{"kind":"E","path":["paths","/nodes/{nodeId}/ratings/{ratingId}","get","parameters","undefined","$ref"],"lhs":"#/parameters/propertiesParam","rhs":"#/parameters/fieldsParam"},{"kind":"E","path":["paths","/nodes/{nodeId}/tags","get","parameters","undefined","$ref"],"lhs":"#/parameters/propertiesParam","rhs":"#/parameters/fieldsParam"},{"kind":"E","path":["paths","/nodes/{nodeId}/tags","post","parameters","undefined","$ref"],"lhs":"#/parameters/nodeIdParam","rhs":"#/parameters/fieldsParam"},{"kind":"E","path":["paths","/people/{personId}","get","parameters","undefined","$ref"],"lhs":"#/parameters/propertiesParam","rhs":"#/parameters/fieldsParam"},{"kind":"E","path":["paths","/people/{personId}/activities","get","tags",0],"lhs":"people","rhs":"activities"},{"kind":"E","path":["paths","/people/{personId}/activities","get","parameters","undefined","$ref"],"lhs":"#/parameters/propertiesParam","rhs":"#/parameters/fieldsParam"},{"kind":"E","path":["paths","/people/{personId}/favorite-sites","get","tags",0],"lhs":"people","rhs":"favorites"},{"kind":"E","path":["paths","/people/{personId}/favorite-sites","get","parameters","undefined","$ref"],"lhs":"#/parameters/propertiesParam","rhs":"#/parameters/fieldsParam"},{"kind":"E","path":["paths","/people/{personId}/favorite-sites","post","tags",0],"lhs":"people","rhs":"favorites"},{"kind":"E","path":["paths","/people/{personId}/favorite-sites","post","parameters","undefined","$ref"],"lhs":"#/parameters/personIdParam","rhs":"#/parameters/fieldsParam"},{"kind":"D","path":["paths","/people/{personId}/favorite-sites","post","responses","201","schema","type"],"lhs":"object"},{"kind":"D","path":["paths","/people/{personId}/favorite-sites","post","responses","201","schema","properties"],"lhs":{"entry":{"type":"object","properties":{"id":{"type":"string","required":true}},"required":true}}},{"kind":"N","path":["paths","/people/{personId}/favorite-sites","post","responses","201","schema","$ref"],"rhs":"#/definitions/FavoriteSiteEntry"},{"kind":"E","path":["paths","/people/{personId}/favorite-sites/{siteId}","get","tags",0],"lhs":"people","rhs":"favorites"},{"kind":"E","path":["paths","/people/{personId}/favorite-sites/{siteId}","get","parameters","undefined","$ref"],"lhs":"#/parameters/propertiesParam","rhs":"#/parameters/fieldsParam"},{"kind":"E","path":["paths","/people/{personId}/favorite-sites/{siteId}","delete","tags",0],"lhs":"people","rhs":"favorites"},{"kind":"A","path":["paths","/people/{personId}/favorites","get","tags"],"index":1,"item":{"kind":"D","lhs":"people"}},{"kind":"E","path":["paths","/people/{personId}/favorites","get","parameters","undefined","$ref"],"lhs":"#/parameters/whereParam","rhs":"#/parameters/fieldsParam"},{"kind":"A","path":["paths","/people/{personId}/favorites","post","tags"],"index":1,"item":{"kind":"D","lhs":"people"}},{"kind":"E","path":["paths","/people/{personId}/favorites","post","parameters","undefined","$ref"],"lhs":"#/parameters/personIdParam","rhs":"#/parameters/fieldsParam"},{"kind":"A","path":["paths","/people/{personId}/favorites/{favoriteId}","get","tags"],"index":1,"item":{"kind":"D","lhs":"people"}},{"kind":"E","path":["paths","/people/{personId}/favorites/{favoriteId}","get","parameters","undefined","$ref"],"lhs":"#/parameters/propertiesParam","rhs":"#/parameters/fieldsParam"},{"kind":"A","path":["paths","/people/{personId}/favorites/{favoriteId}","delete","tags"],"index":1,"item":{"kind":"D","lhs":"people"}},{"kind":"E","path":["paths","/people/{personId}/networks","get","tags",0],"lhs":"people","rhs":"networks"},{"kind":"A","path":["paths","/people/{personId}/networks","get","tags"],"index":1,"item":{"kind":"D","lhs":"networks"}},{"kind":"E","path":["paths","/people/{personId}/networks","get","parameters","undefined","$ref"],"lhs":"#/parameters/propertiesParam","rhs":"#/parameters/fieldsParam"},{"kind":"E","path":["paths","/people/{personId}/networks/{networkId}","get","tags",0],"lhs":"people","rhs":"networks"},{"kind":"A","path":["paths","/people/{personId}/networks/{networkId}","get","tags"],"index":1,"item":{"kind":"D","lhs":"networks"}},{"kind":"E","path":["paths","/people/{personId}/networks/{networkId}","get","parameters","undefined","$ref"],"lhs":"#/parameters/propertiesParam","rhs":"#/parameters/fieldsParam"},{"kind":"E","path":["paths","/people/{personId}/preferences","get","tags",0],"lhs":"people","rhs":"preferences"},{"kind":"E","path":["paths","/people/{personId}/preferences","get","parameters","undefined","$ref"],"lhs":"#/parameters/propertiesParam","rhs":"#/parameters/fieldsParam"},{"kind":"E","path":["paths","/people/{personId}/preferences/{preferenceName}","get","tags",0],"lhs":"people","rhs":"preferences"},{"kind":"E","path":["paths","/people/{personId}/preferences/{preferenceName}","get","parameters","undefined","$ref"],"lhs":"#/parameters/propertiesParam","rhs":"#/parameters/fieldsParam"},{"kind":"E","path":["paths","/people/{personId}/site-membership-requests","get","tags",0],"lhs":"people","rhs":"sites"},{"kind":"A","path":["paths","/people/{personId}/site-membership-requests","get","tags"],"index":1,"item":{"kind":"D","lhs":"sites"}},{"kind":"E","path":["paths","/people/{personId}/site-membership-requests","get","parameters","undefined","$ref"],"lhs":"#/parameters/propertiesParam","rhs":"#/parameters/fieldsParam"},{"kind":"E","path":["paths","/people/{personId}/site-membership-requests","post","tags",0],"lhs":"people","rhs":"sites"},{"kind":"A","path":["paths","/people/{personId}/site-membership-requests","post","tags"],"index":1,"item":{"kind":"D","lhs":"sites"}},{"kind":"E","path":["paths","/people/{personId}/site-membership-requests","post","parameters","undefined","$ref"],"lhs":"#/parameters/personIdParam","rhs":"#/parameters/fieldsParam"},{"kind":"E","path":["paths","/people/{personId}/site-membership-requests/{siteId}","get","tags",0],"lhs":"people","rhs":"sites"},{"kind":"A","path":["paths","/people/{personId}/site-membership-requests/{siteId}","get","tags"],"index":1,"item":{"kind":"D","lhs":"sites"}},{"kind":"E","path":["paths","/people/{personId}/site-membership-requests/{siteId}","get","parameters","undefined","$ref"],"lhs":"#/parameters/propertiesParam","rhs":"#/parameters/fieldsParam"},{"kind":"E","path":["paths","/people/{personId}/site-membership-requests/{siteId}","put","tags",0],"lhs":"people","rhs":"sites"},{"kind":"A","path":["paths","/people/{personId}/site-membership-requests/{siteId}","put","tags"],"index":1,"item":{"kind":"D","lhs":"sites"}},{"kind":"E","path":["paths","/people/{personId}/site-membership-requests/{siteId}","put","parameters","undefined","$ref"],"lhs":"#/parameters/siteIdParam","rhs":"#/parameters/fieldsParam"},{"kind":"E","path":["paths","/people/{personId}/site-membership-requests/{siteId}","delete","tags",0],"lhs":"people","rhs":"sites"},{"kind":"A","path":["paths","/people/{personId}/site-membership-requests/{siteId}","delete","tags"],"index":1,"item":{"kind":"D","lhs":"sites"}},{"kind":"E","path":["paths","/people/{personId}/sites","get","tags",0],"lhs":"people","rhs":"sites"},{"kind":"A","path":["paths","/people/{personId}/sites","get","tags"],"index":1,"item":{"kind":"D","lhs":"sites"}},{"kind":"E","path":["paths","/people/{personId}/sites","get","parameters","undefined","$ref"],"lhs":"#/parameters/relationsParam","rhs":"#/parameters/whereParam"},{"kind":"E","path":["paths","/people/{personId}/sites/{siteId}","get","tags",0],"lhs":"people","rhs":"sites"},{"kind":"E","path":["paths","/people/{personId}/sites/{siteId}","get","parameters","undefined","$ref"],"lhs":"#/parameters/propertiesParam","rhs":"#/parameters/siteIdParam"},{"kind":"E","path":["paths","/people/{personId}/sites/{siteId}","delete","tags",0],"lhs":"people","rhs":"sites"},{"kind":"E","path":["paths","/sites","get","parameters","undefined","$ref"],"lhs":"#/parameters/relationsParam","rhs":"#/parameters/whereParam"},{"kind":"E","path":["paths","/sites/{siteId}","get","parameters","undefined","$ref"],"lhs":"#/parameters/relationsParam","rhs":"#/parameters/fieldsParam"},{"kind":"E","path":["paths","/sites/{siteId}/containers","get","parameters","undefined","$ref"],"lhs":"#/parameters/propertiesParam","rhs":"#/parameters/fieldsParam"},{"kind":"E","path":["paths","/sites/{siteId}/containers/{containerId}","get","parameters","undefined","$ref"],"lhs":"#/parameters/propertiesParam","rhs":"#/parameters/fieldsParam"},{"kind":"E","path":["paths","/sites/{siteId}/members","get","parameters","undefined","$ref"],"lhs":"#/parameters/propertiesParam","rhs":"#/parameters/fieldsParam"},{"kind":"E","path":["paths","/sites/{siteId}/members","post","parameters","undefined","$ref"],"lhs":"#/parameters/siteIdParam","rhs":"#/parameters/fieldsParam"},{"kind":"E","path":["paths","/sites/{siteId}/members/{personId}","get","parameters","undefined","$ref"],"lhs":"#/parameters/propertiesParam","rhs":"#/parameters/fieldsParam"},{"kind":"E","path":["paths","/sites/{siteId}/members/{personId}","put","parameters","undefined","$ref"],"lhs":"#/parameters/personIdParam","rhs":"#/parameters/fieldsParam"},{"kind":"E","path":["paths","/tags","get","parameters","undefined","$ref"],"lhs":"#/parameters/propertiesParam","rhs":"#/parameters/tagEntryIncludeParam"},{"kind":"E","path":["paths","/tags/{tagId}","get","parameters","undefined","$ref"],"lhs":"#/parameters/propertiesParam","rhs":"#/parameters/fieldsParam"},{"kind":"E","path":["paths","/tags/{tagId}","put","parameters","undefined","$ref"],"lhs":"#/parameters/tagIdParam","rhs":"#/parameters/fieldsParam"},{"kind":"E","path":["paths","/networks/{networkId}","get","parameters","undefined","$ref"],"lhs":"#/parameters/propertiesParam","rhs":"#/parameters/fieldsParam"},{"kind":"N","path":["definitions","Person","properties","emailNotificationsEnabled","default"],"rhs":true}]}
